/***************************************************************************
 *   Copyright (C) 2003-2008 by                                            *
 *   Alberto Cuoci		                                                   *
 *   alberto.cuoci@polimi.it                                               *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#include "symbolickinetics/polimi_c1c3htnox_1101/OpenSMOKE_SymbolicKinetics_Polimi_C1C3HTNOX_1101.h"

void OpenSMOKE_SymbolicKinetics_Polimi_C1C3HTNOX_1101::giveReactionRates(double cTot, BzzVector &c, BzzVector &R) 
{
	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR THIRD BODY REACTIONS ===== 
	// ============================================================ 
	coeffM3 =	       cTot+17.0*c[15]+0.15E1*c[13]+0.26*c[3]-0.2*c[2]-0.2*c[1]-1.0*c[6]+0.2*c[19]+0.14E1*c[20];
	coeffM9 =	       cTot+0.15E1*c[13]+11.0*c[15]-0.5*c[2]-0.5*c[1]+0.9*c[19]+0.28E1*c[20];
	coeffM10 =	       cTot+0.15E1*c[13]+11.0*c[15]-0.8*c[2]-0.8*c[1]+0.9*c[19]+0.28E1*c[20];
	coeffM11 =	       cTot+15.0*c[15]+1.0*c[13]+0.9*c[20];
	coeffM14 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2]-0.3*c[1];
	coeffM15 =	       cTot;
	coeffM18 =	       cTot+11.0*c[15]+1.0*c[13]+0.5*c[19]+1.0*c[20]-0.5*c[2];
	coeffM23 =	       cTot+1.0*c[13]+1.0*c[19]+2.0*c[20]+4.0*c[15];
	coeffM24 =	       cTot+1.0*c[13]+1.0*c[19]+2.0*c[20]+4.0*c[15];
	coeffM25 =	       cTot+5.0*c[15]+2.0*c[40]+1.0*c[30]+0.5*c[19]-0.3*c[2];
	coeffM27 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM28 =	       cTot;
	coeffM30 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM31 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM32 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM33 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM34 =	       cTot+0.19E1*c[13]+0.76E1*c[15]+0.19E1*c[30]+0.11E1*c[19]+0.19E1*c[20]+0.33E1*c[40];
	coeffM35 =	       cTot+0.19E1*c[13]+0.76E1*c[15]+0.19E1*c[30]+0.11E1*c[19]+0.19E1*c[20]+0.33E1*c[40];
	coeffM36 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM37 =	       cTot;
	coeffM38 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM39 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM40 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]+2.0*c[40]-0.3*c[2];
	coeffM42 =	       cTot;
	coeffM81 =	       cTot+1.0*c[13]+1.0*c[19]+2.0*c[20]+4.0*c[15];
	coeffM82 =	       cTot+1.0*c[13]+1.0*c[19]+2.0*c[20]+4.0*c[15];
	coeffM84 =	       cTot;
	coeffM85 =	       cTot;
	coeffM86 =	       cTot;
	coeffM140 =	       cTot+15.0*c[15]+0.28E1*c[20]+0.15E1*c[13]+0.9*c[19];
	coeffM141 =	       cTot+15.0*c[15]+0.28E1*c[20]+0.15E1*c[13]+0.9*c[19];
	coeffM142 =	       cTot;
	coeffM143 =	       cTot;
	coeffM161 =	       cTot+0.18E1*c[30]+4.0*c[15]+2.0*c[20]+0.9*c[13]+0.9*c[19];
	coeffM162 =	       cTot;
	coeffM163 =	       cTot;
	coeffM165 =	       cTot;
	coeffM228 =	       cTot;
	coeffM294 =	       cTot;
	coeffM316 =	       cTot+19.0*c[64]+2.0*c[15]+3.0*c[33];
	coeffM336 =	       cTot;
	coeffM402 =	       cTot;
	coeffM489 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]-0.3*c[2]-0.3*c[1];
	coeffM491 =	       cTot;
	coeffM492 =	       cTot+1.0*c[13]+5.0*c[15]+1.0*c[30]+0.5*c[19]+1.0*c[20]-0.3*c[2]-0.3*c[1];
	coeffM493 =	       cTot;
	coeffM494 =	       cTot;
	coeffM513 =	       cTot;
	coeffM526 =	       cTot+0.15E1*c[3]+4.0*c[15]+9.0*c[17];
	coeffM549 =	       cTot;
	coeffM556 =	       cTot+1.0*c[3]+1.0*c[13]+1.0*c[6]+14.0*c[15];
	coeffM574 =	       cTot;
	coeffM575 =	       cTot;
	coeffM587 =	       cTot+0.7*c[3]+0.5*c[6]+9.0*c[15];
	coeffM588 =	       cTot;
	coeffM590 =	       cTot+0.31E1*c[15]+0.25*c[13];
	coeffM605 =	       cTot;
	coeffM623 =	       cTot;
	coeffM641 =	       cTot+0.5*c[3];
	coeffM666 =	       cTot+0.5*c[3];
	coeffM681 =	       cTot;
	coeffM730 =	       cTot+0.7*c[3]+0.4*c[6]+11.0*c[15]+0.5*c[19]+2.0*c[20];
	coeffM742 =	       cTot;
	coeffM749 =	       cTot+4.0*c[15];
	coeffM751 =	       cTot;
	coeffM753 =	       cTot;
	coeffM754 =	       cTot;


	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR FALL OFF REACTIONS ======= 
	// ============================================================ 
	CFO3 =	       coeffM3/(1.0+k3*coeffM3/kFallOff3);
	CFO14 =	       coeffM14/(1.0+k14*coeffM14/kFallOff14);
	CFO18 =	       coeffM18/(1.0+k18*coeffM18/kFallOff18);
	CFO23 =	       coeffM23/(1.0+k23*coeffM23/kFallOff23);
	CFO24 =	       coeffM24/(1.0+k24*coeffM24/kFallOff24);
	CFO25 =	       coeffM25/(1.0+k25*coeffM25/kFallOff25);
	CFO27 =	       coeffM27/(1.0+k27*coeffM27/kFallOff27);
	CFO28 =	       coeffM28/(1.0+k28*coeffM28/kFallOff28);
	CFO30 =	       coeffM30/(1.0+k30*coeffM30/kFallOff30);
	CFO31 =	       coeffM31/(1.0+k31*coeffM31/kFallOff31);
	CFO32 =	       coeffM32/(1.0+k32*coeffM32/kFallOff32);
	CFO33 =	       coeffM33/(1.0+k33*coeffM33/kFallOff33);
	CFO34 =	       coeffM34/(1.0+k34*coeffM34/kFallOff34);
	CFO35 =	       coeffM35/(1.0+k35*coeffM35/kFallOff35);
	CFO36 =	       coeffM36/(1.0+k36*coeffM36/kFallOff36);
	CFO37 =	       coeffM37/(1.0+k37*coeffM37/kFallOff37);
	CFO38 =	       coeffM38/(1.0+k38*coeffM38/kFallOff38);
	CFO39 =	       coeffM39/(1.0+k39*coeffM39/kFallOff39);
	CFO40 =	       coeffM40/(1.0+k40*coeffM40/kFallOff40);
	CFO81 =	       coeffM81/(1.0+k81*coeffM81/kFallOff81);
	CFO82 =	       coeffM82/(1.0+k82*coeffM82/kFallOff82);
	CFO84 =	       coeffM84/(1.0+k84*coeffM84/kFallOff84);
	CFO85 =	       coeffM85/(1.0+k85*coeffM85/kFallOff85);
	CFO86 =	       coeffM86/(1.0+k86*coeffM86/kFallOff86);
	CFO142 =	       coeffM142/(1.0+k142*coeffM142/kFallOff142);
	CFO143 =	       coeffM143/(1.0+k143*coeffM143/kFallOff143);
	CFO162 =	       coeffM162/(1.0+k162*coeffM162/kFallOff162);
	CFO336 =	       coeffM336/(1.0+k336*coeffM336/kFallOff336);
	CFO402 =	       coeffM402/(1.0+k402*coeffM402/kFallOff402);
	CFO489 =	       coeffM489/(1.0+k489*coeffM489/kFallOff489);
	CFO492 =	       coeffM492/(1.0+k492*coeffM492/kFallOff492);
	CFO526 =	       coeffM526/(1.0+k526*coeffM526/kFallOff526);
	CFO588 =	       coeffM588/(1.0+k588*coeffM588/kFallOff588);
	CFO742 =	       coeffM742/(1.0+k742*coeffM742/kFallOff742);
	CFO749 =	       coeffM749/(1.0+k749*coeffM749/kFallOff749);
	CFO751 =	       coeffM751/(1.0+k751*coeffM751/kFallOff751);
	CFO753 =	       coeffM753/(1.0+k753*coeffM753/kFallOff753);
	CFO754 =	       coeffM754/(1.0+k754*coeffM754/kFallOff754);


	lnPr3 =	       log(k3*coeffM3/kFallOff3);
	lnPr14 =	       log(k14*coeffM14/kFallOff14);
	lnPr23 =	       log(k23*coeffM23/kFallOff23);
	lnPr24 =	       log(k24*coeffM24/kFallOff24);
	lnPr25 =	       log(k25*coeffM25/kFallOff25);
	lnPr27 =	       log(k27*coeffM27/kFallOff27);
	lnPr28 =	       log(k28*coeffM28/kFallOff28);
	lnPr30 =	       log(k30*coeffM30/kFallOff30);
	lnPr31 =	       log(k31*coeffM31/kFallOff31);
	lnPr32 =	       log(k32*coeffM32/kFallOff32);
	lnPr33 =	       log(k33*coeffM33/kFallOff33);
	lnPr34 =	       log(k34*coeffM34/kFallOff34);
	lnPr35 =	       log(k35*coeffM35/kFallOff35);
	lnPr36 =	       log(k36*coeffM36/kFallOff36);
	lnPr37 =	       log(k37*coeffM37/kFallOff37);
	lnPr38 =	       log(k38*coeffM38/kFallOff38);
	lnPr39 =	       log(k39*coeffM39/kFallOff39);
	lnPr40 =	       log(k40*coeffM40/kFallOff40);
	lnPr81 =	       log(k81*coeffM81/kFallOff81);
	lnPr82 =	       log(k82*coeffM82/kFallOff82);
	lnPr489 =	       log(k489*coeffM489/kFallOff489);
	lnPr492 =	       log(k492*coeffM492/kFallOff492);
	lnPr742 =	       log(k742*coeffM742/kFallOff742);
	lnPr749 =	       log(k749*coeffM749/kFallOff749);


	wF3 =	pow(10.0, logFcent3/(1.0+BzzPow2((0.434294481903*lnPr3-0.40-0.67*logFcent3)/(0.806-0.0608012274665*lnPr3-1.1762*logFcent3)))); 
	wF14 =	pow(10.0, logFcent14/(1.0+BzzPow2((0.434294481903*lnPr14-0.40-0.67*logFcent14)/(0.806-0.0608012274665*lnPr14-1.1762*logFcent14)))); 
	wF18 =	1.00; 
	wF23 =	pow( logFcent23 , 1.0/(1.0+0.18861169701161387*lnPr23*lnPr23)); 
	wF24 =	pow(10.0, logFcent24/(1.0+BzzPow2((0.434294481903*lnPr24-0.40-0.67*logFcent24)/(0.806-0.0608012274665*lnPr24-1.1762*logFcent24)))); 
	wF25 =	pow(10.0, logFcent25/(1.0+BzzPow2((0.434294481903*lnPr25-0.40-0.67*logFcent25)/(0.806-0.0608012274665*lnPr25-1.1762*logFcent25)))); 
	wF27 =	pow(10.0, logFcent27/(1.0+BzzPow2((0.434294481903*lnPr27-0.40-0.67*logFcent27)/(0.806-0.0608012274665*lnPr27-1.1762*logFcent27)))); 
	wF28 =	pow(10.0, logFcent28/(1.0+BzzPow2((0.434294481903*lnPr28-0.40-0.67*logFcent28)/(0.806-0.0608012274665*lnPr28-1.1762*logFcent28)))); 
	wF30 =	pow(10.0, logFcent30/(1.0+BzzPow2((0.434294481903*lnPr30-0.40-0.67*logFcent30)/(0.806-0.0608012274665*lnPr30-1.1762*logFcent30)))); 
	wF31 =	pow(10.0, logFcent31/(1.0+BzzPow2((0.434294481903*lnPr31-0.40-0.67*logFcent31)/(0.806-0.0608012274665*lnPr31-1.1762*logFcent31)))); 
	wF32 =	pow(10.0, logFcent32/(1.0+BzzPow2((0.434294481903*lnPr32-0.40-0.67*logFcent32)/(0.806-0.0608012274665*lnPr32-1.1762*logFcent32)))); 
	wF33 =	pow(10.0, logFcent33/(1.0+BzzPow2((0.434294481903*lnPr33-0.40-0.67*logFcent33)/(0.806-0.0608012274665*lnPr33-1.1762*logFcent33)))); 
	wF34 =	pow(10.0, logFcent34/(1.0+BzzPow2((0.434294481903*lnPr34-0.40-0.67*logFcent34)/(0.806-0.0608012274665*lnPr34-1.1762*logFcent34)))); 
	wF35 =	pow(10.0, logFcent35/(1.0+BzzPow2((0.434294481903*lnPr35-0.40-0.67*logFcent35)/(0.806-0.0608012274665*lnPr35-1.1762*logFcent35)))); 
	wF36 =	pow(10.0, logFcent36/(1.0+BzzPow2((0.434294481903*lnPr36-0.40-0.67*logFcent36)/(0.806-0.0608012274665*lnPr36-1.1762*logFcent36)))); 
	wF37 =	pow(10.0, logFcent37/(1.0+BzzPow2((0.434294481903*lnPr37-0.40-0.67*logFcent37)/(0.806-0.0608012274665*lnPr37-1.1762*logFcent37)))); 
	wF38 =	pow(10.0, logFcent38/(1.0+BzzPow2((0.434294481903*lnPr38-0.40-0.67*logFcent38)/(0.806-0.0608012274665*lnPr38-1.1762*logFcent38)))); 
	wF39 =	pow(10.0, logFcent39/(1.0+BzzPow2((0.434294481903*lnPr39-0.40-0.67*logFcent39)/(0.806-0.0608012274665*lnPr39-1.1762*logFcent39)))); 
	wF40 =	pow(10.0, logFcent40/(1.0+BzzPow2((0.434294481903*lnPr40-0.40-0.67*logFcent40)/(0.806-0.0608012274665*lnPr40-1.1762*logFcent40)))); 
	wF81 =	pow(10.0, logFcent81/(1.0+BzzPow2((0.434294481903*lnPr81-0.40-0.67*logFcent81)/(0.806-0.0608012274665*lnPr81-1.1762*logFcent81)))); 
	wF82 =	pow(10.0, logFcent82/(1.0+BzzPow2((0.434294481903*lnPr82-0.40-0.67*logFcent82)/(0.806-0.0608012274665*lnPr82-1.1762*logFcent82)))); 
	wF84 =	1.00; 
	wF85 =	1.00; 
	wF86 =	1.00; 
	wF142 =	1.00; 
	wF143 =	1.00; 
	wF162 =	1.00; 
	wF336 =	1.00; 
	wF402 =	1.00; 
	wF489 =	pow(10.0, logFcent489/(1.0+BzzPow2((0.434294481903*lnPr489-0.40-0.67*logFcent489)/(0.806-0.0608012274665*lnPr489-1.1762*logFcent489)))); 
	wF492 =	pow(10.0, logFcent492/(1.0+BzzPow2((0.434294481903*lnPr492-0.40-0.67*logFcent492)/(0.806-0.0608012274665*lnPr492-1.1762*logFcent492)))); 
	wF526 =	1.00; 
	wF588 =	1.00; 
	wF742 =	pow(10.0, logFcent742/(1.0+BzzPow2((0.434294481903*lnPr742-0.40-0.67*logFcent742)/(0.806-0.0608012274665*lnPr742-1.1762*logFcent742)))); 
	wF749 =	pow(10.0, logFcent749/(1.0+BzzPow2((0.434294481903*lnPr749-0.40-0.67*logFcent749)/(0.806-0.0608012274665*lnPr749-1.1762*logFcent749)))); 
	wF751 =	1.00; 
	wF753 =	1.00; 
	wF754 =	1.00; 


	coeffFallOff3 =	       CFO3*wF3;
	coeffFallOff14 =	       CFO14*wF14;
	coeffFallOff18 =	       CFO18*wF18;
	coeffFallOff23 =	       CFO23*wF23;
	coeffFallOff24 =	       CFO24*wF24;
	coeffFallOff25 =	       CFO25*wF25;
	coeffFallOff27 =	       CFO27*wF27;
	coeffFallOff28 =	       CFO28*wF28;
	coeffFallOff30 =	       CFO30*wF30;
	coeffFallOff31 =	       CFO31*wF31;
	coeffFallOff32 =	       CFO32*wF32;
	coeffFallOff33 =	       CFO33*wF33;
	coeffFallOff34 =	       CFO34*wF34;
	coeffFallOff35 =	       CFO35*wF35;
	coeffFallOff36 =	       CFO36*wF36;
	coeffFallOff37 =	       CFO37*wF37;
	coeffFallOff38 =	       CFO38*wF38;
	coeffFallOff39 =	       CFO39*wF39;
	coeffFallOff40 =	       CFO40*wF40;
	coeffFallOff81 =	       CFO81*wF81;
	coeffFallOff82 =	       CFO82*wF82;
	coeffFallOff84 =	       CFO84*wF84;
	coeffFallOff85 =	       CFO85*wF85;
	coeffFallOff86 =	       CFO86*wF86;
	coeffFallOff142 =	       CFO142*wF142;
	coeffFallOff143 =	       CFO143*wF143;
	coeffFallOff162 =	       CFO162*wF162;
	coeffFallOff336 =	       CFO336*wF336;
	coeffFallOff402 =	       CFO402*wF402;
	coeffFallOff489 =	       CFO489*wF489;
	coeffFallOff492 =	       CFO492*wF492;
	coeffFallOff526 =	       CFO526*wF526;
	coeffFallOff588 =	       CFO588*wF588;
	coeffFallOff742 =	       CFO742*wF742;
	coeffFallOff749 =	       CFO749*wF749;
	coeffFallOff751 =	       CFO751*wF751;
	coeffFallOff753 =	       CFO753*wF753;
	coeffFallOff754 =	       CFO754*wF754;


	// ============================================================ 
	// ===== REACTION RATES FOR THIRD BODY REACTIONS (Flat) ======= 
	// ============================================================ 
	rFlat3 =	       (c[6]*c[64]-c[68]*uK3)*k3;
	rFlat9 =	       (c[13]-c[64]*c[64]*uK9)*k9;
	rFlat10 =	       (c[6]-c[62]*c[62]*uK10)*k10;
	rFlat11 =	       (c[64]*c[67]-c[15]*uK11)*k11;
	rFlat14 =	       (c[67]*c[67]-c[16]*uK14)*k14;
	rFlat15 =	       (c[62]*c[67]-c[68]*uK15)*k15;
	rFlat18 =	       (c[19]*c[62]-c[20]*uK18)*k18;
	rFlat23 =	       (c[64]*c[80]-c[30]*uK23)*k23;
	rFlat24 =	       (c[80]*c[80]-c[40]*uK24)*k24;
	rFlat25 =	       (c[64]*c[90]-c[40]*uK25)*k25;
	rFlat27 =	       (c[64]*c[98]-c[46]*uK27)*k27;
	rFlat28 =	       (c[80]*c[90]-c[49]*uK28)*k28;
	rFlat30 =	       (c[64]*c[102]-c[49]*uK30)*k30;
	rFlat31 =	       (c[64]*c[84]-c[33]*uK31)*k31;
	rFlat32 =	       (c[36]-c[13]*c[33]*uK32)*k32;
	rFlat33 =	       (c[64]*c[87]-c[36]*uK33)*k33;
	rFlat34 =	       (c[64]*c[96]-c[45]*uK34)*k34;
	rFlat35 =	       (c[64]*c[96]-c[44]*uK35)*k35;
	rFlat36 =	       (c[80]*c[87]-c[46]*uK36)*k36;
	rFlat37 =	       (c[87]*c[90]-c[53]*uK37)*k37;
	rFlat38 =	       (c[80]*c[98]-c[53]*uK38)*k38;
	rFlat39 =	       (c[64]*c[107]-c[53]*uK39)*k39;
	rFlat40 =	       (c[64]*c[105]-c[54]*uK40)*k40;
	rFlat42 =	       (c[33]*c[87]-c[104]*uK42)*k42;
	rFlat81 =	       (c[33]*c[64]-c[87]*uK81)*k81;
	rFlat82 =	       (c[36]*c[64]-c[90]*uK82)*k82;
	rFlat84 =	       (c[44]*c[64]-c[97]*uK84)*k84;
	rFlat85 =	       (c[45]*c[64]-c[98]*uK85)*k85;
	rFlat86 =	       (c[45]*c[64]-c[97]*uK86)*k86;
	rFlat140 =	       (c[25]-c[13]*c[19]*uK140)*k140;
	rFlat141 =	       (c[25]-c[64]*c[76]*uK141)*k141;
	rFlat142 =	       (c[31]-c[67]*c[80]*uK142)*k142;
	rFlat143 =	       (c[31]-c[64]*c[81]*uK143)*k143;
	rFlat161 =	       (c[76]-c[19]*c[64]*uK161)*k161;
	rFlat162 =	       (c[82]-c[25]*c[64]*uK162)*k162;
	rFlat163 =	       (c[81]-c[25]*c[64]*uK163)*k163;
	rFlat165 =	       (c[89]-c[19]*c[80]*uK165)*k165;
	rFlat228 =	       c[62]*c[80]*k228;
	rFlat294 =	       (c[80]-c[64]*c[77]*uK294)*k294;
	rFlat316 =	       (c[78]-c[77]*uK316)*k316;
	rFlat336 =	       (c[34]-c[19]*c[77]*uK336)*k336;
	rFlat402 =	       (c[96]*c[96]-c[56]*uK402)*k402;
	rFlat489 =	       (c[41]-c[80]*c[81]*uK489)*k489;
	rFlat491 =	       (c[67]*c[90]-c[41]*uK491)*k491;
	rFlat492 =	       (c[41]-c[15]*c[36]*uK492)*k492;
	rFlat493 =	       (c[92]-c[38]*c[64]*uK493)*k493;
	rFlat494 =	       (c[36]*c[67]-c[91]*uK494)*k494;
	rFlat513 =	       (c[17]-c[64]*c[69]*uK513)*k513;
	rFlat526 =	       (c[69]*c[69]-c[18]*uK526)*k526;
	rFlat549 =	       (c[71]-c[14]*c[64]*uK549)*k549;
	rFlat556 =	       (c[14]-c[64]*c[66]*uK556)*k556;
	rFlat574 =	       (c[9]-c[5]*c[64]*uK574)*k574;
	rFlat575 =	       (c[9]-c[3]*c[67]*uK575)*k575;
	rFlat587 =	       (c[4]*c[62]-c[7]*uK587)*k587;
	rFlat588 =	       (c[4]*c[67]-c[11]*uK588)*k588;
	rFlat590 =	       (c[4]*c[64]-c[8]*uK590)*k590;
	rFlat605 =	       (c[70]-c[8]*c[64]*uK605)*k605;
	rFlat623 =	       (c[7]*c[62]-c[63]*uK623)*k623;
	rFlat641 =	       (c[74]-c[19]*c[61]*uK641)*k641;
	rFlat666 =	       (c[23]-c[19]*c[65]*uK666)*k666;
	rFlat681 =	       (c[79]-c[21]*c[64]*uK681)*k681;
	rFlat730 =	       (c[5]-c[3]*c[62]*uK730)*k730;
	rFlat742 =	       (c[28]-c[7]*c[80]*uK742)*k742;
	rFlat749 =	       (c[7]*c[67]-c[12]*uK749)*k749;
	rFlat751 =	       (c[4]*c[82]-c[27]*uK751)*k751;
	rFlat753 =	       (c[4]*c[80]-c[26]*uK753)*k753;
	rFlat754 =	       (c[7]*c[82]-c[29]*uK754)*k754;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY REACTION ==================== 
	// ============================================================ 
	r1 =	       (c[6]*c[64]-c[62]*c[67]*uK1)*k1;
	r2 =	       (c[13]*c[62]-c[64]*c[67]*uK2)*k2;
	r3 =	       rFlat3*coeffFallOff3;
	r4 =	       (c[6]*c[6]*c[64]-c[6]*c[68]*uK4)*k4;
	r5 =	       (c[67]*c[68]-c[6]*c[15]*uK5)*k5;
	r6 =	       (c[64]*c[68]-c[67]*c[67]*uK6)*k6;
	r7 =	       (c[62]*c[68]-c[6]*c[67]*uK7)*k7;
	r8 =	       (c[67]*c[67]-c[15]*c[62]*uK8)*k8;
	r9 =	       rFlat9*coeffM9;
	r10 =	       rFlat10*coeffM10;
	r11 =	       rFlat11*coeffM11;
	r12 =	       (c[64]*c[68]-c[6]*c[13]*uK12)*k12;
	r13 =	       (c[68]*c[68]-c[6]*c[16]*uK13)*k13;
	r14 =	       rFlat14*coeffFallOff14;
	r15 =	       rFlat15*coeffM15;
	r16 =	       (c[6]*c[19]-c[20]*c[62]*uK16)*k16;
	r17 =	       (c[6]*c[76]-c[19]*c[68]*uK17)*k17;
	r18 =	       rFlat18*coeffFallOff18;
	r19 =	       (c[19]*c[67]-c[20]*c[64]*uK19)*k19;
	r20 =	       (c[19]*c[67]-c[20]*c[64]*uK20)*k20;
	r21 =	       (c[19]*c[68]-c[20]*c[67]*uK21)*k21;
	r22 =	       (c[15]*c[19]-c[13]*c[20]*uK22)*k22;
	r23 =	       rFlat23*coeffFallOff23;
	r24 =	       rFlat24*coeffFallOff24;
	r25 =	       rFlat25*coeffFallOff25;
	r26 =	       (c[64]*c[98]-c[13]*c[45]*uK26)*k26;
	r27 =	       rFlat27*coeffFallOff27;
	r28 =	       rFlat28*coeffFallOff28;
	r29 =	       (c[64]*c[101]-c[49]*uK29)*k29;
	r30 =	       rFlat30*coeffFallOff30;
	r31 =	       rFlat31*coeffFallOff31;
	r32 =	       rFlat32*coeffFallOff32;
	r33 =	       rFlat33*coeffFallOff33;
	r34 =	       rFlat34*coeffFallOff34;
	r35 =	       rFlat35*coeffFallOff35;
	r36 =	       rFlat36*coeffFallOff36;
	r37 =	       rFlat37*coeffFallOff37;
	r38 =	       rFlat38*coeffFallOff38;
	r39 =	       rFlat39*coeffFallOff39;
	r40 =	       rFlat40*coeffFallOff40;
	r41 =	       (c[33]*c[87]-c[51]*c[64]*uK41)*k41;
	r42 =	       rFlat42*coeffM42;
	r43 =	       (c[87]*c[87]-c[52]*uK43)*k43;
	r44 =	       (c[33]*c[36]-c[52]*uK44)*k44;
	r45 =	       (c[52]-c[13]*c[51]*uK45)*k45;
	r46 =	       (c[13]*c[33]-c[64]*c[87]*uK46)*k46;
	r47 =	       (c[13]*c[36]-c[64]*c[90]*uK47)*k47;
	r48 =	       (c[64]*c[103]-c[33]*c[33]*uK48)*k48;
	r49 =	       c[80]*c[102]*k49;
	r50 =	       c[80]*c[80]*k50;
	r51 =	       (c[80]*c[87]-c[30]*c[33]*uK51)*k51;
	r52 =	       c[30]*c[36]*k52;
	r53 =	       c[90]*c[102]*k53;
	r54 =	       c[87]*c[90]*k54;
	r55 =	       c[90]*c[107]*k55;
	r56 =	       (c[33]*c[33]-c[84]*c[87]*uK56)*k56;
	r57 =	       (c[33]*c[36]-c[87]*c[87]*uK57)*k57;
	r58 =	       (c[64]*c[103]-c[13]*c[50]*uK58)*k58;
	r59 =	       (c[64]*c[103]-c[51]*uK59)*k59;
	r60 =	       (c[64]*c[104]-c[33]*c[36]*uK60)*k60;
	r61 =	       (c[64]*c[104]-c[13]*c[51]*uK61)*k61;
	r62 =	       (c[33]*c[45]-c[84]*c[98]*uK62)*k62;
	r63 =	       (c[33]*c[40]-c[87]*c[90]*uK63)*k63;
	r64 =	       (c[33]*c[46]-c[87]*c[98]*uK64)*k64;
	r65 =	       (c[33]*c[50]-c[84]*c[103]*uK65)*k65;
	r66 =	       (c[33]*c[51]-c[84]*c[104]*uK66)*k66;
	r67 =	       (c[33]*c[51]-c[87]*c[103]*uK67)*k67;
	r68 =	       (c[36]*c[36]-c[87]*c[90]*uK68)*k68;
	r69 =	       (c[36]*c[46]-c[90]*c[98]*uK69)*k69;
	r70 =	       c[87]*c[107]*k70;
	r71 =	       c[87]*c[105]*k71;
	r72 =	       c[96]*c[96]*k72;
	r73 =	       c[98]*c[98]*k73;
	r74 =	       c[96]*c[98]*k74;
	r75 =	       c[98]*c[107]*k75;
	r76 =	       c[98]*c[105]*k76;
	r77 =	       c[107]*c[107]*k77;
	r78 =	       c[105]*c[107]*k78;
	r79 =	       (c[52]*c[52]-c[104]*c[107]*uK79)*k79;
	r80 =	       (c[45]-c[44]*uK80)*k80;
	r81 =	       rFlat81*coeffFallOff81;
	r82 =	       rFlat82*coeffFallOff82;
	r83 =	       (c[96]-c[43]*c[64]*uK83)*k83;
	r84 =	       rFlat84*coeffFallOff84;
	r85 =	       rFlat85*coeffFallOff85;
	r86 =	       rFlat86*coeffFallOff86;
	r87 =	       (c[97]-c[33]*c[80]*uK87)*k87;
	r88 =	       (c[102]-c[46]*c[64]*uK88)*k88;
	r89 =	       (c[102]-c[101]*uK89)*k89;
	r90 =	       (c[101]-c[36]*c[80]*uK90)*k90;
	r91 =	       (c[101]-c[46]*c[64]*uK91)*k91;
	r92 =	       (c[103]-c[50]*c[64]*uK92)*k92;
	r93 =	       (c[103]-c[33]*c[84]*uK93)*k93;
	r94 =	       (c[104]-c[51]*c[64]*uK94)*k94;
	r95 =	       (c[104]-c[36]*c[84]*uK95)*k95;
	r96 =	       (c[107]-c[52]*c[64]*uK96)*k96;
	r97 =	       (c[106]-c[107]*uK97)*k97;
	r98 =	       (c[106]-c[36]*c[87]*uK98)*k98;
	r99 =	       (c[106]-c[52]*c[64]*uK99)*k99;
	r100 =	       c[106]*k100;
	r101 =	       (c[105]-c[45]*c[80]*uK101)*k101;
	r102 =	       (c[80]*c[80]-c[64]*c[90]*uK102)*k102;
	r103 =	       (c[80]*c[87]-c[64]*c[98]*uK103)*k103;
	r104 =	       (c[44]*c[64]-c[33]*c[80]*uK104)*k104;
	r105 =	       (c[43]*c[75]-c[50]*c[64]*uK105)*k105;
	r106 =	       (c[75]*c[96]-c[50]*c[64]*c[64]*uK106)*k106;
	r107 =	       (c[78]*c[96]-c[51]*c[64]*uK107)*k107;
	r108 =	       (c[43]*c[80]-c[51]*c[64]*uK108)*k108;
	r109 =	       c[96]*c[107]*k109;
	r110 =	       c[96]*c[105]*k110;
	r111 =	       c[30]*c[80]*k111;
	r112 =	       c[52]*c[80]*k112;
	r113 =	       c[33]*c[90]*k113;
	r114 =	       c[46]*c[90]*k114;
	r115 =	       c[52]*c[90]*k115;
	r116 =	       c[36]*c[101]*k116;
	r117 =	       c[36]*c[102]*k117;
	r118 =	       c[46]*c[102]*k118;
	r119 =	       (c[33]*c[84]-c[50]*c[64]*uK119)*k119;
	r120 =	       (c[36]*c[84]-c[51]*c[64]*uK120)*k120;
	r121 =	       c[44]*c[84]*k121;
	r122 =	       c[52]*c[96]*k122;
	r123 =	       c[46]*c[98]*k123;
	r124 =	       c[46]*c[98]*k124;
	r125 =	       c[36]*c[97]*k125;
	r126 =	       c[44]*c[97]*k126;
	r127 =	       c[36]*c[107]*k127;
	r128 =	       c[36]*c[106]*k128;
	r129 =	       c[46]*c[106]*k129;
	r130 =	       (c[40]-c[13]*c[36]*uK130)*k130;
	r131 =	       (c[46]-c[13]*c[45]*uK131)*k131;
	r132 =	       (c[46]-c[13]*c[44]*uK132)*k132;
	r133 =	       (c[49]-c[13]*c[46]*uK133)*k133;
	r134 =	       (c[51]-c[33]*c[33]*uK134)*k134;
	r135 =	       (c[51]-c[13]*c[50]*uK135)*k135;
	r136 =	       (c[53]-c[13]*c[52]*uK136)*k136;
	r137 =	       (c[36]*c[36]-c[53]*uK137)*k137;
	r138 =	       (c[46]*c[46]-c[36]*c[53]*uK138)*k138;
	r139 =	       c[45]*c[45]*k139;
	r140 =	       rFlat140*coeffM140;
	r141 =	       rFlat141*coeffM141;
	r142 =	       rFlat142*coeffFallOff142;
	r143 =	       rFlat143*coeffFallOff143;
	r144 =	       (c[38]-c[76]*c[80]*uK144)*k144;
	r145 =	       c[46]*c[67]*k145;
	r146 =	       (c[6]*c[33]-c[67]*c[85]*uK146)*k146;
	r147 =	       c[6]*c[45]*k147;
	r148 =	       c[6]*c[44]*k148;
	r149 =	       (c[6]*c[30]-c[68]*c[80]*uK149)*k149;
	r150 =	       (c[6]*c[25]-c[68]*c[76]*uK150)*k150;
	r151 =	       (c[6]*c[31]-c[68]*c[81]*uK151)*k151;
	r152 =	       (c[6]*c[31]-c[68]*c[82]*uK152)*k152;
	r153 =	       (c[6]*c[36]-c[68]*c[87]*uK153)*k153;
	r154 =	       (c[6]*c[40]-c[68]*c[90]*uK154)*k154;
	r155 =	       (c[6]*c[38]-c[68]*c[89]*uK155)*k155;
	r156 =	       (c[6]*c[49]-c[68]*c[101]*uK156)*k156;
	r157 =	       (c[6]*c[49]-c[68]*c[102]*uK157)*k157;
	r158 =	       (c[6]*c[46]-c[68]*c[98]*uK158)*k158;
	r159 =	       (c[6]*c[53]-c[68]*c[107]*uK159)*k159;
	r160 =	       (c[6]*c[54]-c[68]*c[105]*uK160)*k160;
	r161 =	       rFlat161*coeffM161;
	r162 =	       rFlat162*coeffFallOff162;
	r163 =	       rFlat163*coeffM163;
	r164 =	       (c[89]-c[34]*c[64]*uK164)*k164;
	r165 =	       rFlat165*coeffM165;
	r166 =	       c[34]*c[64]*k166;
	r167 =	       c[31]*c[64]*k167;
	r168 =	       c[33]*c[62]*k168;
	r169 =	       c[36]*c[62]*k169;
	r170 =	       (c[36]*c[62]-c[76]*c[80]*uK170)*k170;
	r171 =	       (c[44]*c[62]-c[19]*c[36]*uK171)*k171;
	r172 =	       c[45]*c[62]*k172;
	r173 =	       c[46]*c[62]*k173;
	r174 =	       (c[51]*c[62]-c[76]*c[96]*uK174)*k174;
	r175 =	       c[51]*c[62]*k175;
	r176 =	       c[52]*c[62]*k176;
	r177 =	       c[25]*c[62]*k177;
	r178 =	       c[38]*c[62]*k178;
	r179 =	       c[34]*c[62]*k179;
	r180 =	       c[34]*c[62]*k180;
	r181 =	       c[33]*c[67]*k181;
	r182 =	       c[25]*c[67]*k182;
	r183 =	       c[34]*c[67]*k183;
	r184 =	       c[34]*c[67]*k184;
	r185 =	       c[38]*c[67]*k185;
	r186 =	       c[45]*c[67]*k186;
	r187 =	       c[53]*c[67]*k187;
	r188 =	       (c[50]*c[67]-c[33]*c[85]*uK188)*k188;
	r189 =	       c[51]*c[67]*k189;
	r190 =	       c[33]*c[68]*k190;
	r191 =	       c[44]*c[68]*k191;
	r192 =	       c[33]*c[76]*k192;
	r193 =	       c[52]*c[76]*k193;
	r194 =	       (c[25]*c[76]-c[20]*c[80]*uK194)*k194;
	r195 =	       c[38]*c[76]*k195;
	r196 =	       c[25]*c[87]*k196;
	r197 =	       (c[19]*c[82]-c[20]*c[80]*uK197)*k197;
	r198 =	       c[6]*c[33]*k198;
	r199 =	       c[6]*c[36]*k199;
	r200 =	       c[6]*c[46]*k200;
	r201 =	       c[6]*c[34]*k201;
	r202 =	       c[6]*c[34]*k202;
	r203 =	       c[6]*c[33]*k203;
	r204 =	       c[6]*c[36]*k204;
	r205 =	       c[6]*c[52]*k205;
	r206 =	       c[6]*c[82]*k206;
	r207 =	       (c[6]*c[81]-c[25]*c[68]*uK207)*k207;
	r208 =	       c[6]*c[90]*k208;
	r209 =	       c[6]*c[101]*k209;
	r210 =	       c[6]*c[102]*k210;
	r211 =	       c[6]*c[97]*k211;
	r212 =	       c[6]*c[107]*k212;
	r213 =	       c[6]*c[106]*k213;
	r214 =	       (c[6]*c[80]-c[62]*c[82]*uK214)*k214;
	r215 =	       (c[6]*c[84]-c[19]*c[76]*uK215)*k215;
	r216 =	       (c[6]*c[84]-c[20]*c[75]*uK216)*k216;
	r217 =	       (c[6]*c[87]-c[62]*c[88]*uK217)*k217;
	r218 =	       c[6]*c[87]*k218;
	r219 =	       c[6]*c[87]*k219;
	r220 =	       (c[6]*c[87]-c[33]*c[68]*uK220)*k220;
	r221 =	       c[6]*c[90]*k221;
	r222 =	       c[6]*c[90]*k222;
	r223 =	       c[6]*c[88]*k223;
	r224 =	       (c[6]*c[103]-c[34]*c[85]*uK224)*k224;
	r225 =	       c[6]*c[104]*k225;
	r226 =	       c[6]*c[104]*k226;
	r227 =	       c[6]*c[105]*k227;
	r228 =	       rFlat228*coeffM228;
	r229 =	       c[62]*c[87]*k229;
	r230 =	       c[62]*c[90]*k230;
	r231 =	       c[62]*c[102]*k231;
	r232 =	       c[62]*c[101]*k232;
	r233 =	       c[62]*c[98]*k233;
	r234 =	       c[62]*c[107]*k234;
	r235 =	       c[62]*c[105]*k235;
	r236 =	       c[62]*c[88]*k236;
	r237 =	       (c[67]*c[80]-c[64]*c[81]*uK237)*k237;
	r238 =	       (c[67]*c[80]-c[64]*c[82]*uK238)*k238;
	r239 =	       (c[67]*c[80]-c[13]*c[25]*uK239)*k239;
	r240 =	       (c[67]*c[80]-c[30]*c[62]*uK240)*k240;
	r241 =	       c[67]*c[84]*k241;
	r242 =	       c[67]*c[87]*k242;
	r243 =	       (c[67]*c[87]-c[15]*c[33]*uK243)*k243;
	r244 =	       (c[67]*c[103]-c[15]*c[50]*uK244)*k244;
	r245 =	       (c[67]*c[104]-c[15]*c[51]*uK245)*k245;
	r246 =	       c[67]*c[103]*k246;
	r247 =	       c[67]*c[104]*k247;
	r248 =	       c[67]*c[105]*k248;
	r249 =	       c[67]*c[107]*k249;
	r250 =	       c[67]*c[107]*k250;
	r251 =	       c[67]*c[89]*k251;
	r252 =	       c[67]*c[88]*k252;
	r253 =	       (c[68]*c[80]-c[67]*c[82]*uK253)*k253;
	r254 =	       c[68]*c[87]*k254;
	r255 =	       c[68]*c[90]*k255;
	r256 =	       c[68]*c[98]*k256;
	r257 =	       c[68]*c[97]*k257;
	r258 =	       c[68]*c[105]*k258;
	r259 =	       (c[62]*c[76]-c[20]*c[64]*uK259)*k259;
	r260 =	       (c[64]*c[76]-c[13]*c[19]*uK260)*k260;
	r261 =	       (c[67]*c[76]-c[15]*c[19]*uK261)*k261;
	r262 =	       (c[68]*c[76]-c[16]*c[19]*uK262)*k262;
	r263 =	       c[68]*c[76]*k263;
	r264 =	       (c[76]*c[76]-c[19]*c[25]*uK264)*k264;
	r265 =	       c[76]*c[80]*k265;
	r266 =	       c[64]*c[82]*k266;
	r267 =	       c[67]*c[82]*k267;
	r268 =	       c[68]*c[82]*k268;
	r269 =	       (c[76]*c[82]-c[25]*c[25]*uK269)*k269;
	r270 =	       c[76]*c[82]*k270;
	r271 =	       c[80]*c[82]*k271;
	r272 =	       c[82]*c[82]*k272;
	r273 =	       c[64]*c[81]*k273;
	r274 =	       c[67]*c[81]*k274;
	r275 =	       c[68]*c[81]*k275;
	r276 =	       c[76]*c[81]*k276;
	r277 =	       c[76]*c[81]*k277;
	r278 =	       c[80]*c[81]*k278;
	r279 =	       c[81]*c[82]*k279;
	r280 =	       c[81]*c[81]*k280;
	r281 =	       c[34]*c[68]*k281;
	r282 =	       c[64]*c[88]*k282;
	r283 =	       c[67]*c[88]*k283;
	r284 =	       (c[88]-c[89]*uK284)*k284;
	r285 =	       (c[6]*c[38]-c[68]*c[88]*uK285)*k285;
	r286 =	       (c[88]-c[34]*c[64]*uK286)*k286;
	r287 =	       c[36]*c[62]*k287;
	r288 =	       c[33]*c[67]*k288;
	r289 =	       c[52]*c[67]*k289;
	r290 =	       c[6]*c[88]*k290;
	r291 =	       (c[30]*c[77]-c[80]*c[80]*uK291)*k291;
	r292 =	       (c[30]*c[78]-c[80]*c[80]*uK292)*k292;
	r293 =	       (c[30]*c[75]-c[36]*c[64]*uK293)*k293;
	r294 =	       rFlat294*coeffM294;
	r295 =	       (c[13]*c[78]-c[64]*c[80]*uK295)*k295;
	r296 =	       (c[67]*c[80]-c[15]*c[78]*uK296)*k296;
	r297 =	       (c[77]*c[80]-c[36]*c[64]*uK297)*k297;
	r298 =	       (c[78]*c[80]-c[36]*c[64]*uK298)*k298;
	r299 =	       (c[75]*c[80]-c[64]*c[87]*uK299)*k299;
	r300 =	       (c[72]*c[80]-c[33]*c[64]*uK300)*k300;
	r301 =	       (c[25]*c[75]-c[34]*c[64]*uK301)*k301;
	r302 =	       (c[76]*c[77]-c[19]*c[80]*uK302)*k302;
	r303 =	       (c[64]*c[77]-c[13]*c[75]*uK303)*k303;
	r304 =	       (c[62]*c[77]-c[19]*c[64]*c[64]*uK304)*k304;
	r305 =	       (c[62]*c[77]-c[13]*c[19]*uK305)*k305;
	r306 =	       (c[67]*c[77]-c[25]*c[64]*uK306)*k306;
	r307 =	       (c[67]*c[77]-c[15]*c[75]*uK307)*k307;
	r308 =	       (c[6]*c[77]-c[25]*c[62]*uK308)*k308;
	r309 =	       (c[6]*c[77]-c[15]*c[19]*uK309)*k309;
	r310 =	       (c[6]*c[77]-c[19]*c[64]*c[67]*uK310)*k310;
	r311 =	       (c[20]*c[77]-c[19]*c[25]*uK311)*k311;
	r312 =	       (c[6]*c[77]-c[20]*c[64]*c[64]*uK312)*k312;
	r313 =	       (c[77]*c[77]-c[33]*c[64]*c[64]*uK313)*k313;
	r314 =	       (c[75]*c[77]-c[33]*c[64]*uK314)*k314;
	r315 =	       (c[72]*c[77]-c[64]*c[84]*uK315)*k315;
	r316 =	       rFlat316*coeffM316;
	r317 =	       (c[64]*c[78]-c[13]*c[75]*uK317)*k317;
	r318 =	       (c[62]*c[78]-c[19]*c[64]*c[64]*uK318)*k318;
	r319 =	       (c[67]*c[78]-c[25]*c[64]*uK319)*k319;
	r320 =	       (c[6]*c[78]-c[19]*c[64]*c[67]*uK320)*k320;
	r321 =	       (c[20]*c[78]-c[19]*c[25]*uK321)*k321;
	r322 =	       (c[64]*c[75]-c[13]*c[72]*uK322)*k322;
	r323 =	       (c[62]*c[75]-c[19]*c[64]*uK323)*k323;
	r324 =	       (c[67]*c[75]-c[64]*c[76]*uK324)*k324;
	r325 =	       (c[67]*c[75]-c[15]*c[72]*uK325)*k325;
	r326 =	       (c[6]*c[75]-c[62]*c[76]*uK326)*k326;
	r327 =	       (c[15]*c[75]-c[25]*c[64]*uK327)*k327;
	r328 =	       (c[20]*c[75]-c[19]*c[76]*uK328)*k328;
	r329 =	       (c[67]*c[72]-c[19]*c[64]*uK329)*k329;
	r330 =	       (c[6]*c[72]-c[19]*c[62]*uK330)*k330;
	r331 =	       (c[33]*c[62]-c[19]*c[77]*uK331)*k331;
	r332 =	       (c[33]*c[62]-c[64]*c[85]*uK332)*k332;
	r333 =	       (c[33]*c[77]-c[64]*c[96]*uK333)*k333;
	r334 =	       (c[33]*c[78]-c[64]*c[96]*uK334)*k334;
	r335 =	       (c[33]*c[75]-c[43]*c[64]*uK335)*k335;
	r336 =	       rFlat336*coeffFallOff336;
	r337 =	       (c[34]*c[62]-c[20]*c[77]*uK337)*k337;
	r338 =	       (c[34]*c[77]-c[19]*c[36]*uK338)*k338;
	r339 =	       (c[34]*c[77]-c[80]*c[85]*uK339)*k339;
	r340 =	       (c[34]*c[80]-c[19]*c[90]*uK340)*k340;
	r341 =	       (c[64]*c[85]-c[19]*c[78]*uK341)*k341;
	r342 =	       (c[62]*c[85]-c[19]*c[19]*c[64]*uK342)*k342;
	r343 =	       (c[67]*c[85]-c[19]*c[64]*c[76]*uK343)*k343;
	r344 =	       (c[6]*c[85]-c[19]*c[19]*c[67]*uK344)*k344;
	r345 =	       (c[6]*c[85]-c[20]*c[76]*uK345)*k345;
	r346 =	       (c[77]*c[85]-c[19]*c[87]*uK346)*k346;
	r347 =	       (c[75]*c[85]-c[19]*c[33]*uK347)*k347;
	r348 =	       (c[85]*c[85]-c[19]*c[19]*c[33]*uK348)*k348;
	r349 =	       (c[62]*c[84]-c[19]*c[75]*uK349)*k349;
	r350 =	       (c[67]*c[84]-c[64]*c[85]*uK350)*k350;
	r351 =	       (c[6]*c[84]-c[62]*c[85]*uK351)*k351;
	r352 =	       (c[50]*c[62]-c[19]*c[43]*uK352)*k352;
	r353 =	       (c[50]*c[67]-c[43]*c[76]*uK353)*k353;
	r354 =	       (c[64]*c[96]-c[13]*c[43]*uK354)*k354;
	r355 =	       (c[62]*c[96]-c[25]*c[84]*uK355)*k355;
	r356 =	       (c[67]*c[96]-c[15]*c[43]*uK356)*k356;
	r357 =	       (c[6]*c[96]-c[34]*c[76]*uK357)*k357;
	r358 =	       (c[76]*c[96]-c[19]*c[44]*uK358)*k358;
	r359 =	       (c[43]*c[67]-c[33]*c[76]*uK359)*k359;
	r360 =	       (c[6]*c[43]-c[76]*c[85]*uK360)*k360;
	r361 =	       (c[45]*c[64]-c[13]*c[96]*uK361)*k361;
	r362 =	       (c[45]*c[67]-c[15]*c[96]*uK362)*k362;
	r363 =	       (c[44]*c[64]-c[13]*c[96]*uK363)*k363;
	r364 =	       (c[44]*c[67]-c[15]*c[96]*uK364)*k364;
	r365 =	       (c[44]*c[80]-c[30]*c[96]*uK365)*k365;
	r366 =	       (c[45]*c[80]-c[30]*c[96]*uK366)*k366;
	r367 =	       (c[15]*c[64]-c[13]*c[67]*uK367)*k367;
	r368 =	       (c[16]*c[64]-c[15]*c[67]*uK368)*k368;
	r369 =	       (c[16]*c[64]-c[13]*c[68]*uK369)*k369;
	r370 =	       (c[25]*c[64]-c[13]*c[76]*uK370)*k370;
	r371 =	       (c[30]*c[64]-c[13]*c[80]*uK371)*k371;
	r372 =	       (c[40]*c[64]-c[13]*c[90]*uK372)*k372;
	r373 =	       (c[49]*c[64]-c[13]*c[101]*uK373)*k373;
	r374 =	       (c[49]*c[64]-c[13]*c[102]*uK374)*k374;
	r375 =	       c[25]*c[68]*k375;
	r376 =	       c[31]*c[64]*k376;
	r377 =	       c[31]*c[64]*k377;
	r378 =	       c[31]*c[67]*k378;
	r379 =	       c[31]*c[68]*k379;
	r380 =	       (c[49]*c[68]-c[16]*c[101]*uK380)*k380;
	r381 =	       (c[49]*c[68]-c[16]*c[102]*uK381)*k381;
	r382 =	       (c[13]*c[84]-c[33]*c[64]*uK382)*k382;
	r383 =	       (c[33]*c[67]-c[15]*c[84]*uK383)*k383;
	r384 =	       c[80]*c[103]*k384;
	r385 =	       c[97]*c[98]*k385;
	r386 =	       c[108]*k386;
	r387 =	       c[50]*c[80]*k387;
	r388 =	       c[45]*c[87]*k388;
	r389 =	       c[44]*c[87]*k389;
	r390 =	       (c[36]*c[96]-c[55]*c[64]*uK390)*k390;
	r391 =	       (c[55]*c[64]-c[33]*c[98]*uK391)*k391;
	r392 =	       c[36]*c[107]*k392;
	r393 =	       c[36]*c[105]*k393;
	r394 =	       c[36]*c[105]*k394;
	r395 =	       (c[33]*c[45]-c[55]*uK395)*k395;
	r396 =	       (c[33]*c[44]-c[55]*uK396)*k396;
	r397 =	       (c[56]-c[64]*c[109]*uK397)*k397;
	r398 =	       (c[6]*c[56]-c[68]*c[109]*uK398)*k398;
	r399 =	       c[56]*c[67]*k399;
	r400 =	       c[84]*c[104]*k400;
	r401 =	       c[87]*c[103]*k401;
	r402 =	       rFlat402*coeffFallOff402;
	r403 =	       (c[96]*c[96]-c[64]*c[109]*uK403)*k403;
	r404 =	       c[46]*c[52]*k404;
	r405 =	       c[36]*c[55]*k405;
	r406 =	       c[46]*c[55]*k406;
	r407 =	       c[52]*c[55]*k407;
	r408 =	       c[52]*c[56]*k408;
	r409 =	       c[55]*c[56]*k409;
	r410 =	       c[98]*c[105]*k410;
	r411 =	       c[51]*c[87]*k411;
	r412 =	       c[52]*c[87]*k412;
	r413 =	       c[52]*c[84]*k413;
	r414 =	       c[44]*c[96]*k414;
	r415 =	       c[45]*c[96]*k415;
	r416 =	       c[45]*c[98]*k416;
	r417 =	       c[44]*c[98]*k417;
	r418 =	       c[52]*c[98]*k418;
	r419 =	       c[52]*c[97]*k419;
	r420 =	       c[36]*c[103]*k420;
	r421 =	       c[56]*c[103]*k421;
	r422 =	       (c[33]*c[104]-c[56]*c[64]*uK422)*k422;
	r423 =	       c[36]*c[104]*k423;
	r424 =	       c[45]*c[104]*k424;
	r425 =	       c[44]*c[104]*k425;
	r426 =	       c[50]*c[104]*k426;
	r427 =	       c[51]*c[104]*k427;
	r428 =	       c[52]*c[104]*k428;
	r429 =	       c[56]*c[104]*k429;
	r430 =	       c[46]*c[107]*k430;
	r431 =	       c[56]*c[106]*k431;
	r432 =	       c[33]*c[51]*k432;
	r433 =	       c[33]*c[52]*k433;
	r434 =	       c[36]*c[50]*k434;
	r435 =	       c[36]*c[51]*k435;
	r436 =	       c[67]*c[108]*k436;
	r437 =	       c[62]*c[109]*k437;
	r438 =	       (c[55]-c[64]*c[108]*uK438)*k438;
	r439 =	       c[55]*c[62]*k439;
	r440 =	       c[55]*c[67]*k440;
	r441 =	       c[62]*c[108]*k441;
	r442 =	       c[68]*c[108]*k442;
	r443 =	       c[109]*k443;
	r444 =	       (c[104]*c[104]-c[36]*c[56]*uK444)*k444;
	r445 =	       c[55]*c[108]*k445;
	r446 =	       c[55]*c[108]*k446;
	r447 =	       c[55]*c[108]*k447;
	r448 =	       c[80]*c[108]*k448;
	r449 =	       c[80]*c[108]*k449;
	r450 =	       c[56]*c[108]*k450;
	r451 =	       c[108]*c[108]*k451;
	r452 =	       c[80]*c[108]*k452;
	r453 =	       c[58]*c[64]*k453;
	r454 =	       c[33]*c[105]*k454;
	r455 =	       c[56]*c[67]*k455;
	r456 =	       (c[6]*c[80]-c[83]*uK456)*k456;
	r457 =	       c[6]*c[90]*k457;
	r458 =	       c[93]*k458;
	r459 =	       (c[32]-c[67]*c[82]*uK459)*k459;
	r460 =	       (c[64]*c[83]-c[32]*uK460)*k460;
	r461 =	       (c[83]-c[25]*c[67]*uK461)*k461;
	r462 =	       (c[68]*c[90]-c[42]*uK462)*k462;
	r463 =	       c[42]*k463;
	r464 =	       c[94]*k464;
	r465 =	       c[94]*k465;
	r466 =	       c[93]*k466;
	r467 =	       c[94]*k467;
	r468 =	       c[6]*c[94]*k468;
	r469 =	       c[95]*k469;
	r470 =	       c[95]*k470;
	r471 =	       c[39]*k471;
	r472 =	       c[36]*c[68]*k472;
	r473 =	       c[67]*c[83]*k473;
	r474 =	       c[80]*c[83]*k474;
	r475 =	       (c[68]*c[83]-c[6]*c[32]*uK475)*k475;
	r476 =	       c[68]*c[83]*k476;
	r477 =	       c[82]*c[83]*k477;
	r478 =	       c[83]*c[83]*k478;
	r479 =	       c[83]*c[83]*k479;
	r480 =	       c[83]*c[98]*k480;
	r481 =	       (c[68]*c[93]-c[6]*c[42]*uK481)*k481;
	r482 =	       c[80]*c[93]*k482;
	r483 =	       c[83]*c[93]*k483;
	r484 =	       c[93]*c[93]*k484;
	r485 =	       c[32]*c[82]*k485;
	r486 =	       c[25]*c[83]*k486;
	r487 =	       c[19]*c[83]*k487;
	r488 =	       c[19]*c[93]*k488;
	r489 =	       rFlat489*coeffFallOff489;
	r490 =	       (c[41]-c[64]*c[92]*uK490)*k490;
	r491 =	       rFlat491*coeffM491;
	r492 =	       rFlat492*coeffFallOff492;
	r493 =	       rFlat493*coeffM493;
	r494 =	       rFlat494*coeffM494;
	r495 =	       c[91]*k495;
	r496 =	       c[6]*c[91]*k496;
	r497 =	       (c[6]*c[92]-c[38]*c[68]*uK497)*k497;
	r498 =	       c[41]*c[68]*k498;
	r499 =	       c[94]*k499;
	r500 =	       c[37]*k500;
	r501 =	       (c[37]-c[38]*uK501)*k501;
	r502 =	       c[37]*c[80]*k502;
	r503 =	       (c[47]-c[80]*c[89]*uK503)*k503;
	r504 =	       (c[47]-c[64]*c[100]*uK504)*k504;
	r505 =	       (c[100]-c[34]*c[80]*uK505)*k505;
	r506 =	       c[6]*c[100]*k506;
	r507 =	       c[68]*c[100]*k507;
	r508 =	       (c[47]*c[64]-c[13]*c[100]*uK508)*k508;
	r509 =	       (c[47]*c[67]-c[15]*c[100]*uK509)*k509;
	r510 =	       (c[48]-c[80]*c[88]*uK510)*k510;
	r511 =	       (c[99]-c[36]*c[76]*uK511)*k511;
	r512 =	       c[46]*c[62]*k512;
	r513 =	       rFlat513*coeffM513;
	r514 =	       (c[64]*c[69]-c[13]*c[65]*uK514)*k514;
	r515 =	       (c[62]*c[69]-c[8]*c[64]*uK515)*k515;
	r516 =	       (c[62]*c[69]-c[65]*c[67]*uK516)*k516;
	r517 =	       (c[62]*c[69]-c[4]*c[13]*uK517)*k517;
	r518 =	       (c[6]*c[69]-c[8]*c[67]*uK518)*k518;
	r519 =	       (c[67]*c[69]-c[15]*c[65]*uK519)*k519;
	r520 =	       (c[68]*c[69]-c[67]*c[70]*uK520)*k520;
	r521 =	       (c[62]*c[70]-c[6]*c[69]*uK521)*k521;
	r522 =	       (c[61]*c[69]-c[3]*c[64]*c[64]*uK522)*k522;
	r523 =	       (c[65]*c[69]-c[14]*c[64]*uK523)*k523;
	r524 =	       (c[69]*c[69]-c[13]*c[14]*uK524)*k524;
	r525 =	       (c[69]*c[69]-c[17]*c[65]*uK525)*k525;
	r526 =	       rFlat526*coeffFallOff526;
	r527 =	       (c[4]*c[69]-c[66]*c[67]*uK527)*k527;
	r528 =	       (c[4]*c[69]-c[3]*c[15]*uK528)*k528;
	r529 =	       (c[7]*c[69]-c[5]*c[15]*uK529)*k529;
	r530 =	       (c[7]*c[69]-c[4]*c[70]*uK530)*k530;
	r531 =	       (c[64]*c[65]-c[13]*c[61]*uK531)*k531;
	r532 =	       (c[62]*c[65]-c[4]*c[64]*uK532)*k532;
	r533 =	       (c[65]*c[67]-c[8]*c[64]*uK533)*k533;
	r534 =	       (c[65]*c[67]-c[15]*c[61]*uK534)*k534;
	r535 =	       (c[65]*c[67]-c[4]*c[13]*uK535)*k535;
	r536 =	       (c[6]*c[65]-c[8]*c[62]*uK536)*k536;
	r537 =	       (c[6]*c[65]-c[4]*c[67]*uK537)*k537;
	r538 =	       (c[65]*c[65]-c[3]*c[64]*c[64]*uK538)*k538;
	r539 =	       (c[61]*c[65]-c[3]*c[64]*uK539)*k539;
	r540 =	       (c[4]*c[65]-c[3]*c[67]*uK540)*k540;
	r541 =	       (c[7]*c[65]-c[5]*c[67]*uK541)*k541;
	r542 =	       (c[61]*c[67]-c[4]*c[64]*uK542)*k542;
	r543 =	       (c[6]*c[61]-c[4]*c[62]*uK543)*k543;
	r544 =	       (c[4]*c[61]-c[3]*c[62]*uK544)*k544;
	r545 =	       (c[18]*c[64]-c[13]*c[71]*uK545)*k545;
	r546 =	       (c[18]*c[62]-c[14]*c[15]*uK546)*k546;
	r547 =	       (c[18]*c[67]-c[15]*c[71]*uK547)*k547;
	r548 =	       (c[18]*c[69]-c[17]*c[71]*uK548)*k548;
	r549 =	       rFlat549*coeffM549;
	r550 =	       (c[64]*c[71]-c[69]*c[69]*uK550)*k550;
	r551 =	       (c[62]*c[71]-c[14]*c[67]*uK551)*k551;
	r552 =	       (c[62]*c[71]-c[8]*c[69]*uK552)*k552;
	r553 =	       (c[67]*c[71]-c[14]*c[15]*uK553)*k553;
	r554 =	       (c[67]*c[71]-c[8]*c[17]*uK554)*k554;
	r555 =	       (c[65]*c[71]-c[14]*c[69]*uK555)*k555;
	r556 =	       rFlat556*coeffM556;
	r557 =	       (c[14]*c[64]-c[13]*c[66]*uK557)*k557;
	r558 =	       (c[14]*c[62]-c[4]*c[69]*uK558)*k558;
	r559 =	       (c[14]*c[62]-c[66]*c[67]*uK559)*k559;
	r560 =	       (c[14]*c[67]-c[15]*c[66]*uK560)*k560;
	r561 =	       (c[4]*c[14]-c[5]*c[69]*uK561)*k561;
	r562 =	       (c[14]*c[65]-c[66]*c[69]*uK562)*k562;
	r563 =	       (c[14]*c[69]-c[17]*c[66]*uK563)*k563;
	r564 =	       (c[66]-c[3]*c[64]*uK564)*k564;
	r565 =	       (c[64]*c[66]-c[3]*c[13]*uK565)*k565;
	r566 =	       (c[62]*c[66]-c[5]*c[64]*uK566)*k566;
	r567 =	       (c[62]*c[66]-c[4]*c[65]*uK567)*k567;
	r568 =	       (c[66]*c[67]-c[3]*c[15]*uK568)*k568;
	r569 =	       (c[6]*c[66]-c[3]*c[68]*uK569)*k569;
	r570 =	       (c[6]*c[66]-c[3]*c[6]*c[64]*uK570)*k570;
	r571 =	       (c[65]*c[66]-c[3]*c[69]*uK571)*k571;
	r572 =	       (c[66]*c[69]-c[3]*c[17]*uK572)*k572;
	r573 =	       (c[4]*c[66]-c[3]*c[8]*uK573)*k573;
	r574 =	       rFlat574*coeffM574;
	r575 =	       rFlat575*coeffM575;
	r576 =	       (c[9]*c[64]-c[5]*c[13]*uK576)*k576;
	r577 =	       (c[9]*c[64]-c[66]*c[67]*uK577)*k577;
	r578 =	       (c[9]*c[62]-c[5]*c[67]*uK578)*k578;
	r579 =	       (c[9]*c[62]-c[6]*c[66]*uK579)*k579;
	r580 =	       (c[9]*c[67]-c[5]*c[15]*uK580)*k580;
	r581 =	       (c[9]*c[67]-c[66]*c[68]*uK581)*k581;
	r582 =	       (c[4]*c[9]-c[5]*c[8]*uK582)*k582;
	r583 =	       (c[4]*c[9]-c[7]*c[66]*uK583)*k583;
	r584 =	       (c[7]*c[9]-c[63]*c[66]*uK584)*k584;
	r585 =	       (c[7]*c[9]-c[5]*c[11]*uK585)*k585;
	r586 =	       (c[4]*c[68]-c[7]*c[67]*uK586)*k586;
	r587 =	       rFlat587*coeffM587;
	r588 =	       rFlat588*coeffFallOff588;
	r589 =	       (c[4]*c[76]-c[8]*c[19]*uK589)*k589;
	r590 =	       rFlat590*coeffM590;
	r591 =	       (c[8]*c[64]-c[4]*c[13]*uK591)*k591;
	r592 =	       (c[8]*c[62]-c[4]*c[67]*uK592)*k592;
	r593 =	       (c[8]*c[67]-c[4]*c[15]*uK593)*k593;
	r594 =	       (c[6]*c[8]-c[4]*c[68]*uK594)*k594;
	r595 =	       (c[8]*c[69]-c[4]*c[17]*uK595)*k595;
	r596 =	       (c[4]*c[8]-c[5]*c[67]*uK596)*k596;
	r597 =	       (c[7]*c[8]-c[4]*c[11]*uK597)*k597;
	r598 =	       (c[8]*c[8]-c[5]*c[15]*uK598)*k598;
	r599 =	       (c[7]*c[13]-c[11]*c[64]*uK599)*k599;
	r600 =	       (c[11]*c[62]-c[7]*c[67]*uK600)*k600;
	r601 =	       (c[11]*c[67]-c[7]*c[15]*uK601)*k601;
	r602 =	       (c[11]*c[65]-c[7]*c[69]*uK602)*k602;
	r603 =	       (c[11]*c[69]-c[7]*c[17]*uK603)*k603;
	r604 =	       (c[11]*c[11]-c[4]*c[7]*c[15]*uK604)*k604;
	r605 =	       rFlat605*coeffM605;
	r606 =	       (c[64]*c[70]-c[8]*c[13]*uK606)*k606;
	r607 =	       (c[64]*c[70]-c[67]*c[69]*uK607)*k607;
	r608 =	       (c[62]*c[70]-c[8]*c[67]*uK608)*k608;
	r609 =	       (c[67]*c[70]-c[8]*c[15]*uK609)*k609;
	r610 =	       (c[4]*c[70]-c[8]*c[8]*uK610)*k610;
	r611 =	       (c[69]*c[70]-c[8]*c[17]*uK611)*k611;
	r612 =	       (c[7]*c[70]-c[8]*c[11]*uK612)*k612;
	r613 =	       (c[63]*c[64]-c[7]*c[67]*uK613)*k613;
	r614 =	       (c[62]*c[63]-c[6]*c[7]*uK614)*k614;
	r615 =	       (c[63]*c[67]-c[7]*c[68]*uK615)*k615;
	r616 =	       (c[63]*c[68]-c[6]*c[7]*c[67]*uK616)*k616;
	r617 =	       (c[7]*c[63]-c[4]*c[6]*c[7]*uK617)*k617;
	r618 =	       (c[63]-c[4]*c[6]*uK618)*k618;
	r619 =	       (c[63]*c[63]-c[6]*c[7]*c[7]*uK619)*k619;
	r620 =	       (c[7]*c[76]-c[4]*c[20]*c[64]*uK620)*k620;
	r621 =	       (c[7]*c[64]-c[4]*c[67]*uK621)*k621;
	r622 =	       (c[7]*c[62]-c[4]*c[6]*uK622)*k622;
	r623 =	       rFlat623*coeffM623;
	r624 =	       (c[7]*c[68]-c[6]*c[11]*uK624)*k624;
	r625 =	       (c[7]*c[7]-c[4]*c[4]*c[6]*uK625)*k625;
	r626 =	       (c[7]*c[7]-c[4]*c[63]*uK626)*k626;
	r627 =	       (c[7]*c[7]-c[4]*c[63]*uK627)*k627;
	r628 =	       (c[7]*c[19]-c[4]*c[20]*uK628)*k628;
	r629 =	       (c[7]*c[76]-c[11]*c[19]*uK629)*k629;
	r630 =	       (c[13]*c[73]-c[21]*c[64]*uK630)*k630;
	r631 =	       (c[21]*c[62]-c[64]*c[74]*uK631)*k631;
	r632 =	       (c[21]*c[62]-c[19]*c[65]*uK632)*k632;
	r633 =	       (c[21]*c[62]-c[67]*c[73]*uK633)*k633;
	r634 =	       (c[21]*c[67]-c[15]*c[73]*uK634)*k634;
	r635 =	       (c[21]*c[67]-c[24]*c[64]*uK635)*k635;
	r636 =	       (c[21]*c[67]-c[23]*c[64]*uK636)*k636;
	r637 =	       (c[21]*c[67]-c[19]*c[69]*uK637)*k637;
	r638 =	       (c[62]*c[73]-c[19]*c[61]*uK638)*k638;
	r639 =	       (c[67]*c[73]-c[64]*c[74]*uK639)*k639;
	r640 =	       (c[6]*c[73]-c[62]*c[74]*uK640)*k640;
	r641 =	       rFlat641*coeffM641;
	r642 =	       (c[64]*c[74]-c[19]*c[65]*uK642)*k642;
	r643 =	       (c[62]*c[74]-c[4]*c[19]*uK643)*k643;
	r644 =	       (c[61]*c[74]-c[3]*c[19]*uK644)*k644;
	r645 =	       (c[5]*c[19]-c[3]*c[20]*uK645)*k645;
	r646 =	       (c[6]*c[74]-c[4]*c[20]*uK646)*k646;
	r647 =	       (c[67]*c[74]-c[4]*c[76]*uK647)*k647;
	r648 =	       (c[74]*c[76]-c[19]*c[23]*uK648)*k648;
	r649 =	       (c[25]*c[74]-c[23]*c[76]*uK649)*k649;
	r650 =	       (c[7]*c[74]-c[4]*c[4]*c[19]*uK650)*k650;
	r651 =	       (c[7]*c[74]-c[5]*c[20]*uK651)*k651;
	r652 =	       (c[8]*c[74]-c[4]*c[23]*uK652)*k652;
	r653 =	       (c[11]*c[74]-c[7]*c[23]*uK653)*k653;
	r654 =	       (c[74]*c[74]-c[3]*c[19]*c[19]*uK654)*k654;
	r655 =	       (c[22]*c[64]-c[21]*c[67]*uK655)*k655;
	r656 =	       (c[24]*c[64]-c[23]*c[64]*uK656)*k656;
	r657 =	       (c[24]*c[67]-c[15]*c[74]*uK657)*k657;
	r658 =	       (c[24]*c[62]-c[67]*c[74]*uK658)*k658;
	r659 =	       (c[22]*c[62]-c[4]*c[76]*uK659)*k659;
	r660 =	       (c[22]*c[62]-c[67]*c[74]*uK660)*k660;
	r661 =	       (c[22]*c[67]-c[4]*c[25]*uK661)*k661;
	r662 =	       (c[22]*c[67]-c[4]*c[13]*c[19]*uK662)*k662;
	r663 =	       (c[22]*c[67]-c[64]*c[67]*c[74]*uK663)*k663;
	r664 =	       (c[22]*c[67]-c[15]*c[74]*uK664)*k664;
	r665 =	       (c[22]*c[67]-c[8]*c[76]*uK665)*k665;
	r666 =	       rFlat666*coeffM666;
	r667 =	       (c[23]*c[64]-c[19]*c[69]*uK667)*k667;
	r668 =	       (c[23]*c[62]-c[67]*c[74]*uK668)*k668;
	r669 =	       (c[23]*c[62]-c[20]*c[65]*uK669)*k669;
	r670 =	       (c[23]*c[62]-c[8]*c[19]*uK670)*k670;
	r671 =	       (c[23]*c[68]-c[16]*c[74]*uK671)*k671;
	r672 =	       (c[6]*c[23]-c[8]*c[20]*uK672)*k672;
	r673 =	       (c[23]*c[69]-c[17]*c[74]*uK673)*k673;
	r674 =	       (c[23]*c[65]-c[69]*c[74]*uK674)*k674;
	r675 =	       (c[7]*c[23]-c[9]*c[20]*uK675)*k675;
	r676 =	       (c[23]*c[73]-c[21]*c[74]*uK676)*k676;
	r677 =	       (c[13]*c[74]-c[23]*c[64]*uK677)*k677;
	r678 =	       (c[23]*c[67]-c[15]*c[74]*uK678)*k678;
	r679 =	       (c[4]*c[74]-c[3]*c[20]*uK679)*k679;
	r680 =	       (c[4]*c[74]-c[5]*c[19]*uK680)*k680;
	r681 =	       rFlat681*coeffM681;
	r682 =	       (c[20]*c[61]-c[4]*c[19]*uK682)*k682;
	r683 =	       (c[20]*c[73]-c[19]*c[74]*uK683)*k683;
	r684 =	       (c[61]*c[80]-c[64]*c[79]*uK684)*k684;
	r685 =	       (c[4]*c[80]-c[15]*c[21]*uK685)*k685;
	r686 =	       (c[4]*c[80]-c[67]*c[79]*uK686)*k686;
	r687 =	       (c[61]*c[77]-c[21]*c[64]*uK687)*k687;
	r688 =	       (c[3]*c[77]-c[21]*c[65]*uK688)*k688;
	r689 =	       (c[61]*c[75]-c[64]*c[73]*uK689)*k689;
	r690 =	       (c[3]*c[75]-c[21]*c[61]*uK690)*k690;
	r691 =	       (c[5]*c[75]-c[4]*c[21]*uK691)*k691;
	r692 =	       (c[3]*c[72]-c[61]*c[73]*uK692)*k692;
	r693 =	       (c[4]*c[72]-c[62]*c[73]*uK693)*k693;
	r694 =	       (c[4]*c[72]-c[19]*c[61]*uK694)*k694;
	r695 =	       (c[4]*c[75]-c[21]*c[62]*uK695)*k695;
	r696 =	       (c[4]*c[75]-c[64]*c[74]*uK696)*k696;
	r697 =	       (c[4]*c[75]-c[61]*c[76]*uK697)*k697;
	r698 =	       (c[4]*c[77]-c[13]*c[74]*uK698)*k698;
	r699 =	       (c[4]*c[78]-c[13]*c[74]*uK699)*k699;
	r700 =	       (c[4]*c[77]-c[21]*c[67]*uK700)*k700;
	r701 =	       (c[4]*c[78]-c[21]*c[67]*uK701)*k701;
	r702 =	       (c[4]*c[77]-c[23]*c[64]*uK702)*k702;
	r703 =	       (c[4]*c[78]-c[23]*c[64]*uK703)*k703;
	r704 =	       (c[4]*c[77]-c[22]*c[64]*uK704)*k704;
	r705 =	       (c[4]*c[78]-c[22]*c[64]*uK705)*k705;
	r706 =	       (c[22]*c[64]-c[23]*c[64]*uK706)*k706;
	r707 =	       (c[40]*c[73]-c[21]*c[90]*uK707)*k707;
	r708 =	       (c[40]*c[74]-c[23]*c[90]*uK708)*k708;
	r709 =	       (c[36]*c[73]-c[21]*c[87]*uK709)*k709;
	r710 =	       (c[46]*c[73]-c[21]*c[98]*uK710)*k710;
	r711 =	       (c[4]*c[87]-c[8]*c[33]*uK711)*k711;
	r712 =	       (c[33]*c[74]-c[21]*c[85]*uK712)*k712;
	r713 =	       (c[34]*c[73]-c[21]*c[85]*uK713)*k713;
	r714 =	       (c[30]*c[73]-c[21]*c[80]*uK714)*k714;
	r715 =	       (c[35]*c[64]-c[21]*c[80]*uK715)*k715;
	r716 =	       (c[35]*c[64]-c[13]*c[86]*uK716)*k716;
	r717 =	       (c[35]*c[62]-c[74]*c[80]*uK717)*k717;
	r718 =	       (c[35]*c[67]-c[15]*c[86]*uK718)*k718;
	r719 =	       (c[24]*c[80]-c[35]*c[67]*uK719)*k719;
	r720 =	       (c[62]*c[86]-c[25]*c[73]*uK720)*k720;
	r721 =	       (c[73]*c[81]-c[67]*c[86]*uK721)*k721;
	r722 =	       (c[73]*c[80]-c[64]*c[86]*uK722)*k722;
	r723 =	       (c[61]*c[87]-c[21]*c[77]*uK723)*k723;
	r724 =	       (c[61]*c[85]-c[19]*c[21]*uK724)*k724;
	r725 =	       (c[7]*c[85]-c[20]*c[22]*uK725)*k725;
	r726 =	       (c[4]*c[85]-c[19]*c[22]*uK726)*k726;
	r727 =	       (c[4]*c[85]-c[20]*c[21]*uK727)*k727;
	r728 =	       (c[4]*c[84]-c[19]*c[21]*uK728)*k728;
	r729 =	       (c[61]*c[96]-c[21]*c[33]*uK729)*k729;
	r730 =	       rFlat730*coeffM730;
	r731 =	       (c[5]*c[64]-c[3]*c[67]*uK731)*k731;
	r732 =	       (c[5]*c[64]-c[3]*c[67]*uK732)*k732;
	r733 =	       (c[4]*c[65]-c[5]*c[64]*uK733)*k733;
	r734 =	       (c[5]*c[62]-c[4]*c[4]*uK734)*k734;
	r735 =	       (c[5]*c[62]-c[3]*c[6]*uK735)*k735;
	r736 =	       (c[5]*c[67]-c[3]*c[68]*uK736)*k736;
	r737 =	       (c[6]*c[21]-c[68]*c[73]*uK737)*k737;
	r738 =	       (c[7]*c[80]-c[4]*c[82]*uK738)*k738;
	r739 =	       c[7]*c[90]*k739;
	r740 =	       (c[4]*c[30]-c[8]*c[80]*uK740)*k740;
	r741 =	       (c[4]*c[40]-c[8]*c[90]*uK741)*k741;
	r742 =	       rFlat742*coeffFallOff742;
	r743 =	       (c[10]*c[64]-c[7]*c[13]*uK743)*k743;
	r744 =	       (c[10]*c[62]-c[7]*c[67]*uK744)*k744;
	r745 =	       (c[10]*c[67]-c[7]*c[15]*uK745)*k745;
	r746 =	       (c[10]*c[80]-c[7]*c[30]*uK746)*k746;
	r747 =	       (c[10]-c[11]*uK747)*k747;
	r748 =	       (c[11]*c[80]-c[7]*c[30]*uK748)*k748;
	r749 =	       rFlat749*coeffFallOff749;
	r750 =	       (c[12]*c[67]-c[15]*c[63]*uK750)*k750;
	r751 =	       rFlat751*coeffFallOff751;
	r752 =	       (c[4]*c[82]-c[8]*c[25]*uK752)*k752;
	r753 =	       rFlat753*coeffFallOff753;
	r754 =	       rFlat754*coeffFallOff754;
	r755 =	       (c[7]*c[82]-c[11]*c[25]*uK755)*k755;
	r756 =	       c[13]*c[98]*k756;
	r757 =	       c[13]*c[87]*k757;
	r758 =	       c[13]*c[107]*k758;
	r759 =	       c[13]*c[105]*k759;
	r760 =	       c[13]*c[104]*k760;
	r761 =	       c[13]*c[103]*k761;
	r762 =	       c[13]*c[97]*k762;
	r763 =	       c[13]*c[106]*k763;
	r764 =	       c[13]*c[81]*k764;
	r765 =	       c[13]*c[85]*k765;
	r766 =	       c[13]*c[89]*k766;
	r767 =	       c[13]*c[82]*k767;
	r768 =	       c[13]*c[88]*k768;
	r769 =	       c[13]*c[109]*k769;
	r770 =	       c[13]*c[83]*k770;
	r771 =	       c[13]*c[93]*k771;
	r772 =	       c[13]*c[69]*k772;
	r773 =	       c[30]*c[67]*k773;
	r774 =	       c[30]*c[68]*k774;
	r775 =	       c[30]*c[76]*k775;
	r776 =	       c[30]*c[90]*k776;
	r777 =	       c[30]*c[98]*k777;
	r778 =	       c[30]*c[101]*k778;
	r779 =	       c[30]*c[102]*k779;
	r780 =	       c[30]*c[87]*k780;
	r781 =	       c[30]*c[107]*k781;
	r782 =	       c[30]*c[105]*k782;
	r783 =	       c[30]*c[104]*k783;
	r784 =	       c[30]*c[103]*k784;
	r785 =	       c[30]*c[97]*k785;
	r786 =	       c[30]*c[106]*k786;
	r787 =	       c[30]*c[81]*k787;
	r788 =	       c[30]*c[85]*k788;
	r789 =	       c[30]*c[89]*k789;
	r790 =	       c[30]*c[82]*k790;
	r791 =	       c[30]*c[88]*k791;
	r792 =	       c[30]*c[109]*k792;
	r793 =	       c[30]*c[83]*k793;
	r794 =	       c[30]*c[93]*k794;
	r795 =	       c[30]*c[100]*k795;
	r796 =	       c[30]*c[69]*k796;
	r797 =	       c[6]*c[33]*k797;
	r798 =	       c[7]*c[33]*k798;
	r799 =	       c[33]*c[62]*k799;
	r800 =	       c[33]*c[68]*k800;
	r801 =	       c[33]*c[76]*k801;
	r802 =	       c[33]*c[80]*k802;
	r803 =	       c[33]*c[90]*k803;
	r804 =	       c[33]*c[98]*k804;
	r805 =	       c[33]*c[101]*k805;
	r806 =	       c[33]*c[102]*k806;
	r807 =	       c[33]*c[87]*k807;
	r808 =	       c[33]*c[96]*k808;
	r809 =	       c[33]*c[107]*k809;
	r810 =	       c[33]*c[105]*k810;
	r811 =	       c[33]*c[104]*k811;
	r812 =	       c[33]*c[103]*k812;
	r813 =	       c[33]*c[97]*k813;
	r814 =	       c[33]*c[106]*k814;
	r815 =	       c[33]*c[81]*k815;
	r816 =	       c[33]*c[85]*k816;
	r817 =	       c[33]*c[89]*k817;
	r818 =	       c[33]*c[82]*k818;
	r819 =	       c[33]*c[88]*k819;
	r820 =	       c[33]*c[109]*k820;
	r821 =	       c[33]*c[83]*k821;
	r822 =	       c[33]*c[93]*k822;
	r823 =	       c[33]*c[100]*k823;
	r824 =	       c[33]*c[69]*k824;
	r825 =	       c[33]*c[73]*k825;
	r826 =	       c[7]*c[36]*k826;
	r827 =	       c[36]*c[64]*k827;
	r828 =	       c[36]*c[67]*k828;
	r829 =	       c[36]*c[62]*k829;
	r830 =	       c[36]*c[68]*k830;
	r831 =	       c[36]*c[76]*k831;
	r832 =	       c[36]*c[80]*k832;
	r833 =	       c[36]*c[90]*k833;
	r834 =	       c[36]*c[98]*k834;
	r835 =	       c[36]*c[101]*k835;
	r836 =	       c[36]*c[102]*k836;
	r837 =	       c[36]*c[96]*k837;
	r838 =	       c[36]*c[107]*k838;
	r839 =	       c[36]*c[105]*k839;
	r840 =	       c[36]*c[104]*k840;
	r841 =	       c[36]*c[103]*k841;
	r842 =	       c[36]*c[97]*k842;
	r843 =	       c[36]*c[106]*k843;
	r844 =	       c[36]*c[81]*k844;
	r845 =	       c[36]*c[85]*k845;
	r846 =	       c[36]*c[89]*k846;
	r847 =	       c[36]*c[82]*k847;
	r848 =	       c[36]*c[88]*k848;
	r849 =	       c[36]*c[109]*k849;
	r850 =	       c[36]*c[83]*k850;
	r851 =	       c[36]*c[93]*k851;
	r852 =	       c[36]*c[100]*k852;
	r853 =	       c[36]*c[69]*k853;
	r854 =	       c[7]*c[40]*k854;
	r855 =	       c[40]*c[67]*k855;
	r856 =	       c[40]*c[62]*k856;
	r857 =	       c[40]*c[68]*k857;
	r858 =	       c[40]*c[76]*k858;
	r859 =	       c[40]*c[80]*k859;
	r860 =	       c[40]*c[98]*k860;
	r861 =	       c[40]*c[101]*k861;
	r862 =	       c[40]*c[102]*k862;
	r863 =	       c[40]*c[87]*k863;
	r864 =	       c[40]*c[96]*k864;
	r865 =	       c[40]*c[107]*k865;
	r866 =	       c[40]*c[105]*k866;
	r867 =	       c[40]*c[104]*k867;
	r868 =	       c[40]*c[103]*k868;
	r869 =	       c[40]*c[97]*k869;
	r870 =	       c[40]*c[106]*k870;
	r871 =	       c[40]*c[81]*k871;
	r872 =	       c[40]*c[85]*k872;
	r873 =	       c[40]*c[89]*k873;
	r874 =	       c[40]*c[82]*k874;
	r875 =	       c[40]*c[88]*k875;
	r876 =	       c[40]*c[109]*k876;
	r877 =	       c[40]*c[83]*k877;
	r878 =	       c[40]*c[93]*k878;
	r879 =	       c[40]*c[100]*k879;
	r880 =	       c[40]*c[69]*k880;
	r881 =	       c[7]*c[46]*k881;
	r882 =	       c[46]*c[64]*k882;
	r883 =	       c[46]*c[67]*k883;
	r884 =	       c[46]*c[62]*k884;
	r885 =	       c[46]*c[68]*k885;
	r886 =	       c[46]*c[76]*k886;
	r887 =	       c[46]*c[80]*k887;
	r888 =	       c[46]*c[90]*k888;
	r889 =	       c[46]*c[101]*k889;
	r890 =	       c[46]*c[102]*k890;
	r891 =	       c[46]*c[87]*k891;
	r892 =	       c[46]*c[96]*k892;
	r893 =	       c[46]*c[107]*k893;
	r894 =	       c[46]*c[105]*k894;
	r895 =	       c[46]*c[104]*k895;
	r896 =	       c[46]*c[103]*k896;
	r897 =	       c[46]*c[97]*k897;
	r898 =	       c[46]*c[106]*k898;
	r899 =	       c[46]*c[81]*k899;
	r900 =	       c[46]*c[85]*k900;
	r901 =	       c[46]*c[89]*k901;
	r902 =	       c[46]*c[82]*k902;
	r903 =	       c[46]*c[88]*k903;
	r904 =	       c[46]*c[109]*k904;
	r905 =	       c[46]*c[83]*k905;
	r906 =	       c[46]*c[93]*k906;
	r907 =	       c[46]*c[100]*k907;
	r908 =	       c[46]*c[69]*k908;
	r909 =	       c[6]*c[46]*k909;
	r910 =	       c[7]*c[46]*k910;
	r911 =	       c[46]*c[64]*k911;
	r912 =	       c[46]*c[67]*k912;
	r913 =	       c[46]*c[62]*k913;
	r914 =	       c[46]*c[68]*k914;
	r915 =	       c[46]*c[76]*k915;
	r916 =	       c[46]*c[80]*k916;
	r917 =	       c[46]*c[90]*k917;
	r918 =	       c[46]*c[98]*k918;
	r919 =	       c[46]*c[101]*k919;
	r920 =	       c[46]*c[102]*k920;
	r921 =	       c[46]*c[87]*k921;
	r922 =	       c[46]*c[96]*k922;
	r923 =	       c[46]*c[107]*k923;
	r924 =	       c[46]*c[105]*k924;
	r925 =	       c[46]*c[104]*k925;
	r926 =	       c[46]*c[103]*k926;
	r927 =	       c[46]*c[106]*k927;
	r928 =	       c[46]*c[81]*k928;
	r929 =	       c[46]*c[85]*k929;
	r930 =	       c[46]*c[89]*k930;
	r931 =	       c[46]*c[82]*k931;
	r932 =	       c[46]*c[88]*k932;
	r933 =	       c[46]*c[109]*k933;
	r934 =	       c[46]*c[83]*k934;
	r935 =	       c[46]*c[93]*k935;
	r936 =	       c[46]*c[100]*k936;
	r937 =	       c[46]*c[69]*k937;
	r938 =	       c[46]*c[73]*k938;
	r939 =	       c[7]*c[49]*k939;
	r940 =	       c[49]*c[67]*k940;
	r941 =	       c[49]*c[62]*k941;
	r942 =	       c[49]*c[76]*k942;
	r943 =	       c[49]*c[80]*k943;
	r944 =	       c[49]*c[90]*k944;
	r945 =	       c[49]*c[98]*k945;
	r946 =	       c[49]*c[102]*k946;
	r947 =	       c[49]*c[87]*k947;
	r948 =	       c[49]*c[96]*k948;
	r949 =	       c[49]*c[107]*k949;
	r950 =	       c[49]*c[105]*k950;
	r951 =	       c[49]*c[104]*k951;
	r952 =	       c[49]*c[103]*k952;
	r953 =	       c[49]*c[97]*k953;
	r954 =	       c[49]*c[106]*k954;
	r955 =	       c[49]*c[81]*k955;
	r956 =	       c[49]*c[85]*k956;
	r957 =	       c[49]*c[89]*k957;
	r958 =	       c[49]*c[82]*k958;
	r959 =	       c[49]*c[88]*k959;
	r960 =	       c[49]*c[109]*k960;
	r961 =	       c[49]*c[83]*k961;
	r962 =	       c[49]*c[93]*k962;
	r963 =	       c[49]*c[100]*k963;
	r964 =	       c[49]*c[69]*k964;
	r965 =	       c[49]*c[73]*k965;
	r966 =	       c[7]*c[49]*k966;
	r967 =	       c[49]*c[67]*k967;
	r968 =	       c[49]*c[62]*k968;
	r969 =	       c[49]*c[76]*k969;
	r970 =	       c[49]*c[80]*k970;
	r971 =	       c[49]*c[90]*k971;
	r972 =	       c[49]*c[98]*k972;
	r973 =	       c[49]*c[101]*k973;
	r974 =	       c[49]*c[87]*k974;
	r975 =	       c[49]*c[96]*k975;
	r976 =	       c[49]*c[107]*k976;
	r977 =	       c[49]*c[105]*k977;
	r978 =	       c[49]*c[104]*k978;
	r979 =	       c[49]*c[103]*k979;
	r980 =	       c[49]*c[97]*k980;
	r981 =	       c[49]*c[106]*k981;
	r982 =	       c[49]*c[81]*k982;
	r983 =	       c[49]*c[85]*k983;
	r984 =	       c[49]*c[89]*k984;
	r985 =	       c[49]*c[82]*k985;
	r986 =	       c[49]*c[88]*k986;
	r987 =	       c[49]*c[109]*k987;
	r988 =	       c[49]*c[83]*k988;
	r989 =	       c[49]*c[93]*k989;
	r990 =	       c[49]*c[100]*k990;
	r991 =	       c[49]*c[69]*k991;
	r992 =	       c[49]*c[73]*k992;
	r993 =	       c[6]*c[51]*k993;
	r994 =	       c[7]*c[51]*k994;
	r995 =	       c[51]*c[64]*k995;
	r996 =	       c[51]*c[67]*k996;
	r997 =	       c[51]*c[62]*k997;
	r998 =	       c[51]*c[68]*k998;
	r999 =	       c[51]*c[76]*k999;
	r1000 =	       c[51]*c[80]*k1000;
	r1001 =	       c[51]*c[90]*k1001;
	r1002 =	       c[51]*c[98]*k1002;
	r1003 =	       c[51]*c[101]*k1003;
	r1004 =	       c[51]*c[102]*k1004;
	r1005 =	       c[51]*c[87]*k1005;
	r1006 =	       c[51]*c[96]*k1006;
	r1007 =	       c[51]*c[107]*k1007;
	r1008 =	       c[51]*c[105]*k1008;
	r1009 =	       c[51]*c[104]*k1009;
	r1010 =	       c[51]*c[97]*k1010;
	r1011 =	       c[51]*c[106]*k1011;
	r1012 =	       c[51]*c[81]*k1012;
	r1013 =	       c[51]*c[85]*k1013;
	r1014 =	       c[51]*c[89]*k1014;
	r1015 =	       c[51]*c[82]*k1015;
	r1016 =	       c[51]*c[88]*k1016;
	r1017 =	       c[51]*c[109]*k1017;
	r1018 =	       c[51]*c[83]*k1018;
	r1019 =	       c[51]*c[93]*k1019;
	r1020 =	       c[51]*c[100]*k1020;
	r1021 =	       c[51]*c[69]*k1021;
	r1022 =	       c[51]*c[73]*k1022;
	r1023 =	       c[6]*c[52]*k1023;
	r1024 =	       c[7]*c[52]*k1024;
	r1025 =	       c[52]*c[64]*k1025;
	r1026 =	       c[52]*c[67]*k1026;
	r1027 =	       c[52]*c[62]*k1027;
	r1028 =	       c[52]*c[68]*k1028;
	r1029 =	       c[52]*c[76]*k1029;
	r1030 =	       c[52]*c[80]*k1030;
	r1031 =	       c[52]*c[90]*k1031;
	r1032 =	       c[52]*c[98]*k1032;
	r1033 =	       c[52]*c[101]*k1033;
	r1034 =	       c[52]*c[102]*k1034;
	r1035 =	       c[52]*c[87]*k1035;
	r1036 =	       c[52]*c[107]*k1036;
	r1037 =	       c[52]*c[105]*k1037;
	r1038 =	       c[52]*c[103]*k1038;
	r1039 =	       c[52]*c[97]*k1039;
	r1040 =	       c[52]*c[106]*k1040;
	r1041 =	       c[52]*c[81]*k1041;
	r1042 =	       c[52]*c[85]*k1042;
	r1043 =	       c[52]*c[89]*k1043;
	r1044 =	       c[52]*c[82]*k1044;
	r1045 =	       c[52]*c[88]*k1045;
	r1046 =	       c[52]*c[109]*k1046;
	r1047 =	       c[52]*c[83]*k1047;
	r1048 =	       c[52]*c[93]*k1048;
	r1049 =	       c[52]*c[100]*k1049;
	r1050 =	       c[52]*c[69]*k1050;
	r1051 =	       c[52]*c[73]*k1051;
	r1052 =	       c[7]*c[53]*k1052;
	r1053 =	       c[53]*c[64]*k1053;
	r1054 =	       c[53]*c[67]*k1054;
	r1055 =	       c[53]*c[62]*k1055;
	r1056 =	       c[53]*c[68]*k1056;
	r1057 =	       c[53]*c[76]*k1057;
	r1058 =	       c[53]*c[80]*k1058;
	r1059 =	       c[53]*c[90]*k1059;
	r1060 =	       c[53]*c[98]*k1060;
	r1061 =	       c[53]*c[101]*k1061;
	r1062 =	       c[53]*c[102]*k1062;
	r1063 =	       c[53]*c[87]*k1063;
	r1064 =	       c[53]*c[96]*k1064;
	r1065 =	       c[53]*c[105]*k1065;
	r1066 =	       c[53]*c[104]*k1066;
	r1067 =	       c[53]*c[103]*k1067;
	r1068 =	       c[53]*c[97]*k1068;
	r1069 =	       c[53]*c[106]*k1069;
	r1070 =	       c[53]*c[81]*k1070;
	r1071 =	       c[53]*c[85]*k1071;
	r1072 =	       c[53]*c[89]*k1072;
	r1073 =	       c[53]*c[82]*k1073;
	r1074 =	       c[53]*c[88]*k1074;
	r1075 =	       c[53]*c[109]*k1075;
	r1076 =	       c[53]*c[83]*k1076;
	r1077 =	       c[53]*c[93]*k1077;
	r1078 =	       c[53]*c[100]*k1078;
	r1079 =	       c[53]*c[69]*k1079;
	r1080 =	       c[53]*c[73]*k1080;
	r1081 =	       c[6]*c[53]*k1081;
	r1082 =	       c[7]*c[53]*k1082;
	r1083 =	       c[53]*c[64]*k1083;
	r1084 =	       c[53]*c[67]*k1084;
	r1085 =	       c[53]*c[62]*k1085;
	r1086 =	       c[53]*c[68]*k1086;
	r1087 =	       c[53]*c[76]*k1087;
	r1088 =	       c[53]*c[80]*k1088;
	r1089 =	       c[53]*c[90]*k1089;
	r1090 =	       c[53]*c[98]*k1090;
	r1091 =	       c[53]*c[101]*k1091;
	r1092 =	       c[53]*c[102]*k1092;
	r1093 =	       c[53]*c[87]*k1093;
	r1094 =	       c[53]*c[96]*k1094;
	r1095 =	       c[53]*c[107]*k1095;
	r1096 =	       c[53]*c[105]*k1096;
	r1097 =	       c[53]*c[104]*k1097;
	r1098 =	       c[53]*c[103]*k1098;
	r1099 =	       c[53]*c[97]*k1099;
	r1100 =	       c[53]*c[81]*k1100;
	r1101 =	       c[53]*c[85]*k1101;
	r1102 =	       c[53]*c[89]*k1102;
	r1103 =	       c[53]*c[82]*k1103;
	r1104 =	       c[53]*c[88]*k1104;
	r1105 =	       c[53]*c[109]*k1105;
	r1106 =	       c[53]*c[83]*k1106;
	r1107 =	       c[53]*c[93]*k1107;
	r1108 =	       c[53]*c[100]*k1108;
	r1109 =	       c[53]*c[69]*k1109;
	r1110 =	       c[53]*c[73]*k1110;
	r1111 =	       c[7]*c[54]*k1111;
	r1112 =	       c[54]*c[64]*k1112;
	r1113 =	       c[54]*c[67]*k1113;
	r1114 =	       c[54]*c[62]*k1114;
	r1115 =	       c[54]*c[68]*k1115;
	r1116 =	       c[54]*c[76]*k1116;
	r1117 =	       c[54]*c[80]*k1117;
	r1118 =	       c[54]*c[90]*k1118;
	r1119 =	       c[54]*c[98]*k1119;
	r1120 =	       c[54]*c[101]*k1120;
	r1121 =	       c[54]*c[102]*k1121;
	r1122 =	       c[54]*c[87]*k1122;
	r1123 =	       c[54]*c[96]*k1123;
	r1124 =	       c[54]*c[107]*k1124;
	r1125 =	       c[54]*c[104]*k1125;
	r1126 =	       c[54]*c[103]*k1126;
	r1127 =	       c[54]*c[97]*k1127;
	r1128 =	       c[54]*c[106]*k1128;
	r1129 =	       c[54]*c[81]*k1129;
	r1130 =	       c[54]*c[85]*k1130;
	r1131 =	       c[54]*c[89]*k1131;
	r1132 =	       c[54]*c[82]*k1132;
	r1133 =	       c[54]*c[88]*k1133;
	r1134 =	       c[54]*c[109]*k1134;
	r1135 =	       c[54]*c[83]*k1135;
	r1136 =	       c[54]*c[93]*k1136;
	r1137 =	       c[54]*c[100]*k1137;
	r1138 =	       c[54]*c[69]*k1138;
	r1139 =	       c[54]*c[73]*k1139;
	r1140 =	       c[15]*c[68]*k1140;
	r1141 =	       c[15]*c[76]*k1141;
	r1142 =	       c[15]*c[80]*k1142;
	r1143 =	       c[15]*c[90]*k1143;
	r1144 =	       c[15]*c[98]*k1144;
	r1145 =	       c[15]*c[101]*k1145;
	r1146 =	       c[15]*c[102]*k1146;
	r1147 =	       c[15]*c[87]*k1147;
	r1148 =	       c[15]*c[107]*k1148;
	r1149 =	       c[15]*c[105]*k1149;
	r1150 =	       c[15]*c[104]*k1150;
	r1151 =	       c[15]*c[103]*k1151;
	r1152 =	       c[15]*c[97]*k1152;
	r1153 =	       c[15]*c[106]*k1153;
	r1154 =	       c[15]*c[81]*k1154;
	r1155 =	       c[15]*c[85]*k1155;
	r1156 =	       c[15]*c[89]*k1156;
	r1157 =	       c[15]*c[82]*k1157;
	r1158 =	       c[15]*c[88]*k1158;
	r1159 =	       c[15]*c[109]*k1159;
	r1160 =	       c[15]*c[83]*k1160;
	r1161 =	       c[15]*c[93]*k1161;
	r1162 =	       c[15]*c[69]*k1162;
	r1163 =	       c[7]*c[16]*k1163;
	r1164 =	       c[16]*c[67]*k1164;
	r1165 =	       c[16]*c[62]*k1165;
	r1166 =	       c[16]*c[76]*k1166;
	r1167 =	       c[16]*c[80]*k1167;
	r1168 =	       c[16]*c[90]*k1168;
	r1169 =	       c[16]*c[98]*k1169;
	r1170 =	       c[16]*c[87]*k1170;
	r1171 =	       c[16]*c[96]*k1171;
	r1172 =	       c[16]*c[107]*k1172;
	r1173 =	       c[16]*c[105]*k1173;
	r1174 =	       c[16]*c[104]*k1174;
	r1175 =	       c[16]*c[103]*k1175;
	r1176 =	       c[16]*c[97]*k1176;
	r1177 =	       c[16]*c[106]*k1177;
	r1178 =	       c[16]*c[81]*k1178;
	r1179 =	       c[16]*c[85]*k1179;
	r1180 =	       c[16]*c[89]*k1180;
	r1181 =	       c[16]*c[82]*k1181;
	r1182 =	       c[16]*c[88]*k1182;
	r1183 =	       c[16]*c[109]*k1183;
	r1184 =	       c[16]*c[83]*k1184;
	r1185 =	       c[16]*c[93]*k1185;
	r1186 =	       c[16]*c[100]*k1186;
	r1187 =	       c[16]*c[69]*k1187;
	r1188 =	       c[16]*c[73]*k1188;
	r1189 =	       c[7]*c[31]*k1189;
	r1190 =	       c[31]*c[67]*k1190;
	r1191 =	       c[31]*c[62]*k1191;
	r1192 =	       c[31]*c[68]*k1192;
	r1193 =	       c[31]*c[76]*k1193;
	r1194 =	       c[31]*c[80]*k1194;
	r1195 =	       c[31]*c[90]*k1195;
	r1196 =	       c[31]*c[98]*k1196;
	r1197 =	       c[31]*c[101]*k1197;
	r1198 =	       c[31]*c[102]*k1198;
	r1199 =	       c[31]*c[87]*k1199;
	r1200 =	       c[31]*c[96]*k1200;
	r1201 =	       c[31]*c[107]*k1201;
	r1202 =	       c[31]*c[105]*k1202;
	r1203 =	       c[31]*c[104]*k1203;
	r1204 =	       c[31]*c[103]*k1204;
	r1205 =	       c[31]*c[97]*k1205;
	r1206 =	       c[31]*c[106]*k1206;
	r1207 =	       c[31]*c[81]*k1207;
	r1208 =	       c[31]*c[85]*k1208;
	r1209 =	       c[31]*c[89]*k1209;
	r1210 =	       c[31]*c[88]*k1210;
	r1211 =	       c[31]*c[109]*k1211;
	r1212 =	       c[31]*c[83]*k1212;
	r1213 =	       c[31]*c[93]*k1213;
	r1214 =	       c[31]*c[100]*k1214;
	r1215 =	       c[31]*c[69]*k1215;
	r1216 =	       c[31]*c[73]*k1216;
	r1217 =	       c[7]*c[31]*k1217;
	r1218 =	       c[31]*c[62]*k1218;
	r1219 =	       c[31]*c[76]*k1219;
	r1220 =	       c[31]*c[80]*k1220;
	r1221 =	       c[31]*c[90]*k1221;
	r1222 =	       c[31]*c[98]*k1222;
	r1223 =	       c[31]*c[101]*k1223;
	r1224 =	       c[31]*c[102]*k1224;
	r1225 =	       c[31]*c[87]*k1225;
	r1226 =	       c[31]*c[96]*k1226;
	r1227 =	       c[31]*c[107]*k1227;
	r1228 =	       c[31]*c[105]*k1228;
	r1229 =	       c[31]*c[104]*k1229;
	r1230 =	       c[31]*c[103]*k1230;
	r1231 =	       c[31]*c[97]*k1231;
	r1232 =	       c[31]*c[106]*k1232;
	r1233 =	       c[31]*c[85]*k1233;
	r1234 =	       c[31]*c[89]*k1234;
	r1235 =	       c[31]*c[82]*k1235;
	r1236 =	       c[31]*c[88]*k1236;
	r1237 =	       c[31]*c[109]*k1237;
	r1238 =	       c[31]*c[83]*k1238;
	r1239 =	       c[31]*c[93]*k1239;
	r1240 =	       c[31]*c[100]*k1240;
	r1241 =	       c[31]*c[69]*k1241;
	r1242 =	       c[31]*c[73]*k1242;
	r1243 =	       c[7]*c[25]*k1243;
	r1244 =	       c[25]*c[67]*k1244;
	r1245 =	       c[25]*c[62]*k1245;
	r1246 =	       c[25]*c[80]*k1246;
	r1247 =	       c[25]*c[90]*k1247;
	r1248 =	       c[25]*c[98]*k1248;
	r1249 =	       c[25]*c[101]*k1249;
	r1250 =	       c[25]*c[102]*k1250;
	r1251 =	       c[25]*c[87]*k1251;
	r1252 =	       c[25]*c[96]*k1252;
	r1253 =	       c[25]*c[107]*k1253;
	r1254 =	       c[25]*c[105]*k1254;
	r1255 =	       c[25]*c[104]*k1255;
	r1256 =	       c[25]*c[103]*k1256;
	r1257 =	       c[25]*c[97]*k1257;
	r1258 =	       c[25]*c[106]*k1258;
	r1259 =	       c[25]*c[81]*k1259;
	r1260 =	       c[25]*c[85]*k1260;
	r1261 =	       c[25]*c[89]*k1261;
	r1262 =	       c[25]*c[82]*k1262;
	r1263 =	       c[25]*c[88]*k1263;
	r1264 =	       c[25]*c[109]*k1264;
	r1265 =	       c[25]*c[83]*k1265;
	r1266 =	       c[25]*c[93]*k1266;
	r1267 =	       c[25]*c[100]*k1267;
	r1268 =	       c[25]*c[69]*k1268;
	r1269 =	       c[25]*c[73]*k1269;
	r1270 =	       c[7]*c[38]*k1270;
	r1271 =	       c[38]*c[64]*k1271;
	r1272 =	       c[38]*c[67]*k1272;
	r1273 =	       c[38]*c[62]*k1273;
	r1274 =	       c[38]*c[68]*k1274;
	r1275 =	       c[38]*c[76]*k1275;
	r1276 =	       c[38]*c[80]*k1276;
	r1277 =	       c[38]*c[90]*k1277;
	r1278 =	       c[38]*c[98]*k1278;
	r1279 =	       c[38]*c[101]*k1279;
	r1280 =	       c[38]*c[102]*k1280;
	r1281 =	       c[38]*c[87]*k1281;
	r1282 =	       c[38]*c[96]*k1282;
	r1283 =	       c[38]*c[107]*k1283;
	r1284 =	       c[38]*c[105]*k1284;
	r1285 =	       c[38]*c[104]*k1285;
	r1286 =	       c[38]*c[103]*k1286;
	r1287 =	       c[38]*c[97]*k1287;
	r1288 =	       c[38]*c[106]*k1288;
	r1289 =	       c[38]*c[81]*k1289;
	r1290 =	       c[38]*c[85]*k1290;
	r1291 =	       c[38]*c[82]*k1291;
	r1292 =	       c[38]*c[88]*k1292;
	r1293 =	       c[38]*c[109]*k1293;
	r1294 =	       c[38]*c[83]*k1294;
	r1295 =	       c[38]*c[93]*k1295;
	r1296 =	       c[38]*c[100]*k1296;
	r1297 =	       c[38]*c[69]*k1297;
	r1298 =	       c[38]*c[73]*k1298;
	r1299 =	       c[7]*c[38]*k1299;
	r1300 =	       c[38]*c[64]*k1300;
	r1301 =	       c[38]*c[67]*k1301;
	r1302 =	       c[38]*c[62]*k1302;
	r1303 =	       c[38]*c[68]*k1303;
	r1304 =	       c[38]*c[76]*k1304;
	r1305 =	       c[38]*c[80]*k1305;
	r1306 =	       c[38]*c[90]*k1306;
	r1307 =	       c[38]*c[98]*k1307;
	r1308 =	       c[38]*c[101]*k1308;
	r1309 =	       c[38]*c[102]*k1309;
	r1310 =	       c[38]*c[87]*k1310;
	r1311 =	       c[38]*c[96]*k1311;
	r1312 =	       c[38]*c[107]*k1312;
	r1313 =	       c[38]*c[105]*k1313;
	r1314 =	       c[38]*c[104]*k1314;
	r1315 =	       c[38]*c[103]*k1315;
	r1316 =	       c[38]*c[97]*k1316;
	r1317 =	       c[38]*c[106]*k1317;
	r1318 =	       c[38]*c[81]*k1318;
	r1319 =	       c[38]*c[85]*k1319;
	r1320 =	       c[38]*c[89]*k1320;
	r1321 =	       c[38]*c[82]*k1321;
	r1322 =	       c[38]*c[109]*k1322;
	r1323 =	       c[38]*c[83]*k1323;
	r1324 =	       c[38]*c[93]*k1324;
	r1325 =	       c[38]*c[100]*k1325;
	r1326 =	       c[38]*c[69]*k1326;
	r1327 =	       c[38]*c[73]*k1327;
	r1328 =	       c[6]*c[44]*k1328;
	r1329 =	       c[7]*c[44]*k1329;
	r1330 =	       c[44]*c[62]*k1330;
	r1331 =	       c[44]*c[68]*k1331;
	r1332 =	       c[44]*c[76]*k1332;
	r1333 =	       c[44]*c[90]*k1333;
	r1334 =	       c[44]*c[98]*k1334;
	r1335 =	       c[44]*c[101]*k1335;
	r1336 =	       c[44]*c[102]*k1336;
	r1337 =	       c[44]*c[87]*k1337;
	r1338 =	       c[44]*c[96]*k1338;
	r1339 =	       c[44]*c[107]*k1339;
	r1340 =	       c[44]*c[105]*k1340;
	r1341 =	       c[44]*c[104]*k1341;
	r1342 =	       c[44]*c[103]*k1342;
	r1343 =	       c[44]*c[106]*k1343;
	r1344 =	       c[44]*c[81]*k1344;
	r1345 =	       c[44]*c[85]*k1345;
	r1346 =	       c[44]*c[89]*k1346;
	r1347 =	       c[44]*c[82]*k1347;
	r1348 =	       c[44]*c[88]*k1348;
	r1349 =	       c[44]*c[109]*k1349;
	r1350 =	       c[44]*c[83]*k1350;
	r1351 =	       c[44]*c[93]*k1351;
	r1352 =	       c[44]*c[100]*k1352;
	r1353 =	       c[44]*c[69]*k1353;
	r1354 =	       c[44]*c[73]*k1354;
	r1355 =	       c[6]*c[45]*k1355;
	r1356 =	       c[7]*c[45]*k1356;
	r1357 =	       c[45]*c[62]*k1357;
	r1358 =	       c[45]*c[68]*k1358;
	r1359 =	       c[45]*c[76]*k1359;
	r1360 =	       c[45]*c[90]*k1360;
	r1361 =	       c[45]*c[98]*k1361;
	r1362 =	       c[45]*c[101]*k1362;
	r1363 =	       c[45]*c[102]*k1363;
	r1364 =	       c[45]*c[87]*k1364;
	r1365 =	       c[45]*c[107]*k1365;
	r1366 =	       c[45]*c[105]*k1366;
	r1367 =	       c[45]*c[104]*k1367;
	r1368 =	       c[45]*c[103]*k1368;
	r1369 =	       c[45]*c[97]*k1369;
	r1370 =	       c[45]*c[106]*k1370;
	r1371 =	       c[45]*c[81]*k1371;
	r1372 =	       c[45]*c[85]*k1372;
	r1373 =	       c[45]*c[89]*k1373;
	r1374 =	       c[45]*c[82]*k1374;
	r1375 =	       c[45]*c[88]*k1375;
	r1376 =	       c[45]*c[109]*k1376;
	r1377 =	       c[45]*c[83]*k1377;
	r1378 =	       c[45]*c[93]*k1378;
	r1379 =	       c[45]*c[100]*k1379;
	r1380 =	       c[45]*c[69]*k1380;
	r1381 =	       c[45]*c[73]*k1381;
	r1382 =	       c[6]*c[34]*k1382;
	r1383 =	       c[7]*c[34]*k1383;
	r1384 =	       c[34]*c[64]*k1384;
	r1385 =	       c[34]*c[67]*k1385;
	r1386 =	       c[34]*c[62]*k1386;
	r1387 =	       c[34]*c[68]*k1387;
	r1388 =	       c[34]*c[76]*k1388;
	r1389 =	       c[34]*c[80]*k1389;
	r1390 =	       c[34]*c[90]*k1390;
	r1391 =	       c[34]*c[98]*k1391;
	r1392 =	       c[34]*c[101]*k1392;
	r1393 =	       c[34]*c[102]*k1393;
	r1394 =	       c[34]*c[87]*k1394;
	r1395 =	       c[34]*c[96]*k1395;
	r1396 =	       c[34]*c[107]*k1396;
	r1397 =	       c[34]*c[105]*k1397;
	r1398 =	       c[34]*c[104]*k1398;
	r1399 =	       c[34]*c[103]*k1399;
	r1400 =	       c[34]*c[97]*k1400;
	r1401 =	       c[34]*c[106]*k1401;
	r1402 =	       c[34]*c[81]*k1402;
	r1403 =	       c[34]*c[89]*k1403;
	r1404 =	       c[34]*c[82]*k1404;
	r1405 =	       c[34]*c[88]*k1405;
	r1406 =	       c[34]*c[109]*k1406;
	r1407 =	       c[34]*c[83]*k1407;
	r1408 =	       c[34]*c[93]*k1408;
	r1409 =	       c[34]*c[100]*k1409;
	r1410 =	       c[34]*c[69]*k1410;
	r1411 =	       c[6]*c[55]*k1411;
	r1412 =	       c[7]*c[55]*k1412;
	r1413 =	       c[55]*c[64]*k1413;
	r1414 =	       c[55]*c[67]*k1414;
	r1415 =	       c[55]*c[62]*k1415;
	r1416 =	       c[55]*c[68]*k1416;
	r1417 =	       c[55]*c[76]*k1417;
	r1418 =	       c[55]*c[80]*k1418;
	r1419 =	       c[55]*c[90]*k1419;
	r1420 =	       c[55]*c[98]*k1420;
	r1421 =	       c[55]*c[101]*k1421;
	r1422 =	       c[55]*c[102]*k1422;
	r1423 =	       c[55]*c[87]*k1423;
	r1424 =	       c[55]*c[96]*k1424;
	r1425 =	       c[55]*c[107]*k1425;
	r1426 =	       c[55]*c[105]*k1426;
	r1427 =	       c[55]*c[104]*k1427;
	r1428 =	       c[55]*c[103]*k1428;
	r1429 =	       c[55]*c[97]*k1429;
	r1430 =	       c[55]*c[106]*k1430;
	r1431 =	       c[55]*c[81]*k1431;
	r1432 =	       c[55]*c[85]*k1432;
	r1433 =	       c[55]*c[89]*k1433;
	r1434 =	       c[55]*c[82]*k1434;
	r1435 =	       c[55]*c[88]*k1435;
	r1436 =	       c[55]*c[109]*k1436;
	r1437 =	       c[55]*c[83]*k1437;
	r1438 =	       c[55]*c[93]*k1438;
	r1439 =	       c[55]*c[100]*k1439;
	r1440 =	       c[55]*c[69]*k1440;
	r1441 =	       c[55]*c[73]*k1441;
	r1442 =	       c[6]*c[58]*k1442;
	r1443 =	       c[7]*c[58]*k1443;
	r1444 =	       c[58]*c[64]*k1444;
	r1445 =	       c[58]*c[67]*k1445;
	r1446 =	       c[58]*c[62]*k1446;
	r1447 =	       c[58]*c[68]*k1447;
	r1448 =	       c[58]*c[76]*k1448;
	r1449 =	       c[58]*c[80]*k1449;
	r1450 =	       c[58]*c[90]*k1450;
	r1451 =	       c[58]*c[98]*k1451;
	r1452 =	       c[58]*c[101]*k1452;
	r1453 =	       c[58]*c[102]*k1453;
	r1454 =	       c[58]*c[87]*k1454;
	r1455 =	       c[58]*c[96]*k1455;
	r1456 =	       c[58]*c[107]*k1456;
	r1457 =	       c[58]*c[105]*k1457;
	r1458 =	       c[58]*c[104]*k1458;
	r1459 =	       c[58]*c[103]*k1459;
	r1460 =	       c[58]*c[97]*k1460;
	r1461 =	       c[58]*c[106]*k1461;
	r1462 =	       c[58]*c[81]*k1462;
	r1463 =	       c[58]*c[85]*k1463;
	r1464 =	       c[58]*c[89]*k1464;
	r1465 =	       c[58]*c[82]*k1465;
	r1466 =	       c[58]*c[88]*k1466;
	r1467 =	       c[58]*c[109]*k1467;
	r1468 =	       c[58]*c[83]*k1468;
	r1469 =	       c[58]*c[93]*k1469;
	r1470 =	       c[58]*c[100]*k1470;
	r1471 =	       c[58]*c[69]*k1471;
	r1472 =	       c[58]*c[73]*k1472;
	r1473 =	       c[7]*c[56]*k1473;
	r1474 =	       c[56]*c[64]*k1474;
	r1475 =	       c[56]*c[62]*k1475;
	r1476 =	       c[56]*c[68]*k1476;
	r1477 =	       c[56]*c[76]*k1477;
	r1478 =	       c[56]*c[80]*k1478;
	r1479 =	       c[56]*c[90]*k1479;
	r1480 =	       c[56]*c[98]*k1480;
	r1481 =	       c[56]*c[101]*k1481;
	r1482 =	       c[56]*c[102]*k1482;
	r1483 =	       c[56]*c[87]*k1483;
	r1484 =	       c[56]*c[96]*k1484;
	r1485 =	       c[56]*c[107]*k1485;
	r1486 =	       c[56]*c[105]*k1486;
	r1487 =	       c[56]*c[104]*k1487;
	r1488 =	       c[56]*c[103]*k1488;
	r1489 =	       c[56]*c[97]*k1489;
	r1490 =	       c[56]*c[106]*k1490;
	r1491 =	       c[56]*c[81]*k1491;
	r1492 =	       c[56]*c[85]*k1492;
	r1493 =	       c[56]*c[89]*k1493;
	r1494 =	       c[56]*c[82]*k1494;
	r1495 =	       c[56]*c[88]*k1495;
	r1496 =	       c[56]*c[83]*k1496;
	r1497 =	       c[56]*c[93]*k1497;
	r1498 =	       c[56]*c[100]*k1498;
	r1499 =	       c[56]*c[69]*k1499;
	r1500 =	       c[56]*c[73]*k1500;
	r1501 =	       c[6]*c[41]*k1501;
	r1502 =	       c[7]*c[41]*k1502;
	r1503 =	       c[41]*c[64]*k1503;
	r1504 =	       c[41]*c[67]*k1504;
	r1505 =	       c[41]*c[62]*k1505;
	r1506 =	       c[41]*c[68]*k1506;
	r1507 =	       c[41]*c[76]*k1507;
	r1508 =	       c[41]*c[80]*k1508;
	r1509 =	       c[41]*c[90]*k1509;
	r1510 =	       c[41]*c[98]*k1510;
	r1511 =	       c[41]*c[101]*k1511;
	r1512 =	       c[41]*c[102]*k1512;
	r1513 =	       c[41]*c[87]*k1513;
	r1514 =	       c[41]*c[96]*k1514;
	r1515 =	       c[41]*c[107]*k1515;
	r1516 =	       c[41]*c[105]*k1516;
	r1517 =	       c[41]*c[104]*k1517;
	r1518 =	       c[41]*c[103]*k1518;
	r1519 =	       c[41]*c[97]*k1519;
	r1520 =	       c[41]*c[106]*k1520;
	r1521 =	       c[41]*c[81]*k1521;
	r1522 =	       c[41]*c[85]*k1522;
	r1523 =	       c[41]*c[89]*k1523;
	r1524 =	       c[41]*c[82]*k1524;
	r1525 =	       c[41]*c[88]*k1525;
	r1526 =	       c[41]*c[109]*k1526;
	r1527 =	       c[41]*c[83]*k1527;
	r1528 =	       c[41]*c[93]*k1528;
	r1529 =	       c[41]*c[100]*k1529;
	r1530 =	       c[41]*c[69]*k1530;
	r1531 =	       c[41]*c[73]*k1531;
	r1532 =	       c[6]*c[41]*k1532;
	r1533 =	       c[7]*c[41]*k1533;
	r1534 =	       c[41]*c[64]*k1534;
	r1535 =	       c[41]*c[67]*k1535;
	r1536 =	       c[41]*c[62]*k1536;
	r1537 =	       c[41]*c[68]*k1537;
	r1538 =	       c[41]*c[76]*k1538;
	r1539 =	       c[41]*c[80]*k1539;
	r1540 =	       c[41]*c[90]*k1540;
	r1541 =	       c[41]*c[98]*k1541;
	r1542 =	       c[41]*c[101]*k1542;
	r1543 =	       c[41]*c[102]*k1543;
	r1544 =	       c[41]*c[87]*k1544;
	r1545 =	       c[41]*c[96]*k1545;
	r1546 =	       c[41]*c[107]*k1546;
	r1547 =	       c[41]*c[105]*k1547;
	r1548 =	       c[41]*c[104]*k1548;
	r1549 =	       c[41]*c[103]*k1549;
	r1550 =	       c[41]*c[97]*k1550;
	r1551 =	       c[41]*c[106]*k1551;
	r1552 =	       c[41]*c[81]*k1552;
	r1553 =	       c[41]*c[85]*k1553;
	r1554 =	       c[41]*c[89]*k1554;
	r1555 =	       c[41]*c[82]*k1555;
	r1556 =	       c[41]*c[88]*k1556;
	r1557 =	       c[41]*c[109]*k1557;
	r1558 =	       c[41]*c[83]*k1558;
	r1559 =	       c[41]*c[93]*k1559;
	r1560 =	       c[41]*c[100]*k1560;
	r1561 =	       c[41]*c[69]*k1561;
	r1562 =	       c[41]*c[73]*k1562;
	r1563 =	       c[6]*c[41]*k1563;
	r1564 =	       c[7]*c[41]*k1564;
	r1565 =	       c[41]*c[64]*k1565;
	r1566 =	       c[41]*c[67]*k1566;
	r1567 =	       c[41]*c[62]*k1567;
	r1568 =	       c[41]*c[68]*k1568;
	r1569 =	       c[41]*c[76]*k1569;
	r1570 =	       c[41]*c[80]*k1570;
	r1571 =	       c[41]*c[90]*k1571;
	r1572 =	       c[41]*c[98]*k1572;
	r1573 =	       c[41]*c[101]*k1573;
	r1574 =	       c[41]*c[102]*k1574;
	r1575 =	       c[41]*c[87]*k1575;
	r1576 =	       c[41]*c[96]*k1576;
	r1577 =	       c[41]*c[107]*k1577;
	r1578 =	       c[41]*c[105]*k1578;
	r1579 =	       c[41]*c[104]*k1579;
	r1580 =	       c[41]*c[103]*k1580;
	r1581 =	       c[41]*c[97]*k1581;
	r1582 =	       c[41]*c[106]*k1582;
	r1583 =	       c[41]*c[81]*k1583;
	r1584 =	       c[41]*c[85]*k1584;
	r1585 =	       c[41]*c[89]*k1585;
	r1586 =	       c[41]*c[82]*k1586;
	r1587 =	       c[41]*c[88]*k1587;
	r1588 =	       c[41]*c[109]*k1588;
	r1589 =	       c[41]*c[83]*k1589;
	r1590 =	       c[41]*c[93]*k1590;
	r1591 =	       c[41]*c[100]*k1591;
	r1592 =	       c[41]*c[69]*k1592;
	r1593 =	       c[41]*c[73]*k1593;
	r1594 =	       c[6]*c[37]*k1594;
	r1595 =	       c[7]*c[37]*k1595;
	r1596 =	       c[37]*c[64]*k1596;
	r1597 =	       c[37]*c[67]*k1597;
	r1598 =	       c[37]*c[62]*k1598;
	r1599 =	       c[37]*c[68]*k1599;
	r1600 =	       c[37]*c[76]*k1600;
	r1601 =	       c[37]*c[80]*k1601;
	r1602 =	       c[37]*c[90]*k1602;
	r1603 =	       c[37]*c[98]*k1603;
	r1604 =	       c[37]*c[101]*k1604;
	r1605 =	       c[37]*c[102]*k1605;
	r1606 =	       c[37]*c[87]*k1606;
	r1607 =	       c[37]*c[96]*k1607;
	r1608 =	       c[37]*c[107]*k1608;
	r1609 =	       c[37]*c[105]*k1609;
	r1610 =	       c[37]*c[104]*k1610;
	r1611 =	       c[37]*c[103]*k1611;
	r1612 =	       c[37]*c[97]*k1612;
	r1613 =	       c[37]*c[106]*k1613;
	r1614 =	       c[37]*c[81]*k1614;
	r1615 =	       c[37]*c[85]*k1615;
	r1616 =	       c[37]*c[89]*k1616;
	r1617 =	       c[37]*c[82]*k1617;
	r1618 =	       c[37]*c[88]*k1618;
	r1619 =	       c[37]*c[109]*k1619;
	r1620 =	       c[37]*c[83]*k1620;
	r1621 =	       c[37]*c[93]*k1621;
	r1622 =	       c[37]*c[100]*k1622;
	r1623 =	       c[37]*c[69]*k1623;
	r1624 =	       c[37]*c[73]*k1624;
	r1625 =	       c[6]*c[47]*k1625;
	r1626 =	       c[7]*c[47]*k1626;
	r1627 =	       c[47]*c[62]*k1627;
	r1628 =	       c[47]*c[68]*k1628;
	r1629 =	       c[47]*c[76]*k1629;
	r1630 =	       c[47]*c[80]*k1630;
	r1631 =	       c[47]*c[90]*k1631;
	r1632 =	       c[47]*c[98]*k1632;
	r1633 =	       c[47]*c[101]*k1633;
	r1634 =	       c[47]*c[102]*k1634;
	r1635 =	       c[47]*c[87]*k1635;
	r1636 =	       c[47]*c[96]*k1636;
	r1637 =	       c[47]*c[107]*k1637;
	r1638 =	       c[47]*c[105]*k1638;
	r1639 =	       c[47]*c[104]*k1639;
	r1640 =	       c[47]*c[103]*k1640;
	r1641 =	       c[47]*c[97]*k1641;
	r1642 =	       c[47]*c[106]*k1642;
	r1643 =	       c[47]*c[81]*k1643;
	r1644 =	       c[47]*c[85]*k1644;
	r1645 =	       c[47]*c[89]*k1645;
	r1646 =	       c[47]*c[82]*k1646;
	r1647 =	       c[47]*c[88]*k1647;
	r1648 =	       c[47]*c[109]*k1648;
	r1649 =	       c[47]*c[83]*k1649;
	r1650 =	       c[47]*c[93]*k1650;
	r1651 =	       c[47]*c[69]*k1651;
	r1652 =	       c[47]*c[73]*k1652;
	r1653 =	       c[6]*c[48]*k1653;
	r1654 =	       c[7]*c[48]*k1654;
	r1655 =	       c[48]*c[64]*k1655;
	r1656 =	       c[48]*c[67]*k1656;
	r1657 =	       c[48]*c[62]*k1657;
	r1658 =	       c[48]*c[68]*k1658;
	r1659 =	       c[48]*c[76]*k1659;
	r1660 =	       c[48]*c[80]*k1660;
	r1661 =	       c[48]*c[90]*k1661;
	r1662 =	       c[48]*c[98]*k1662;
	r1663 =	       c[48]*c[101]*k1663;
	r1664 =	       c[48]*c[102]*k1664;
	r1665 =	       c[48]*c[87]*k1665;
	r1666 =	       c[48]*c[96]*k1666;
	r1667 =	       c[48]*c[107]*k1667;
	r1668 =	       c[48]*c[105]*k1668;
	r1669 =	       c[48]*c[104]*k1669;
	r1670 =	       c[48]*c[103]*k1670;
	r1671 =	       c[48]*c[97]*k1671;
	r1672 =	       c[48]*c[106]*k1672;
	r1673 =	       c[48]*c[81]*k1673;
	r1674 =	       c[48]*c[85]*k1674;
	r1675 =	       c[48]*c[89]*k1675;
	r1676 =	       c[48]*c[82]*k1676;
	r1677 =	       c[48]*c[88]*k1677;
	r1678 =	       c[48]*c[109]*k1678;
	r1679 =	       c[48]*c[83]*k1679;
	r1680 =	       c[48]*c[93]*k1680;
	r1681 =	       c[48]*c[100]*k1681;
	r1682 =	       c[48]*c[69]*k1682;
	r1683 =	       c[48]*c[73]*k1683;
	r1684 =	       c[6]*c[17]*k1684;
	r1685 =	       c[17]*c[64]*k1685;
	r1686 =	       c[17]*c[67]*k1686;
	r1687 =	       c[17]*c[62]*k1687;
	r1688 =	       c[17]*c[68]*k1688;
	r1689 =	       c[17]*c[76]*k1689;
	r1690 =	       c[17]*c[80]*k1690;
	r1691 =	       c[17]*c[90]*k1691;
	r1692 =	       c[17]*c[98]*k1692;
	r1693 =	       c[17]*c[101]*k1693;
	r1694 =	       c[17]*c[102]*k1694;
	r1695 =	       c[17]*c[87]*k1695;
	r1696 =	       c[17]*c[96]*k1696;
	r1697 =	       c[17]*c[107]*k1697;
	r1698 =	       c[17]*c[105]*k1698;
	r1699 =	       c[17]*c[104]*k1699;
	r1700 =	       c[17]*c[103]*k1700;
	r1701 =	       c[17]*c[97]*k1701;
	r1702 =	       c[17]*c[106]*k1702;
	r1703 =	       c[17]*c[81]*k1703;
	r1704 =	       c[17]*c[85]*k1704;
	r1705 =	       c[17]*c[89]*k1705;
	r1706 =	       c[17]*c[82]*k1706;
	r1707 =	       c[17]*c[88]*k1707;
	r1708 =	       c[17]*c[109]*k1708;
	r1709 =	       c[17]*c[83]*k1709;
	r1710 =	       c[17]*c[93]*k1710;
	r1711 =	       c[17]*c[100]*k1711;
	r1712 =	       c[17]*c[73]*k1712;
	r1713 =	       c[7]*c[21]*k1713;
	r1714 =	       c[21]*c[68]*k1714;
	r1715 =	       c[21]*c[76]*k1715;
	r1716 =	       c[21]*c[101]*k1716;
	r1717 =	       c[21]*c[102]*k1717;
	r1718 =	       c[21]*c[96]*k1718;
	r1719 =	       c[21]*c[107]*k1719;
	r1720 =	       c[21]*c[105]*k1720;
	r1721 =	       c[21]*c[104]*k1721;
	r1722 =	       c[21]*c[103]*k1722;
	r1723 =	       c[21]*c[97]*k1723;
	r1724 =	       c[21]*c[106]*k1724;
	r1725 =	       c[21]*c[81]*k1725;
	r1726 =	       c[21]*c[89]*k1726;
	r1727 =	       c[21]*c[82]*k1727;
	r1728 =	       c[21]*c[88]*k1728;
	r1729 =	       c[21]*c[109]*k1729;
	r1730 =	       c[21]*c[83]*k1730;
	r1731 =	       c[21]*c[93]*k1731;
	r1732 =	       c[21]*c[100]*k1732;
	r1733 =	       c[21]*c[69]*k1733;
	r1734 =	       c[6]*c[28]*k1734;
	r1735 =	       c[7]*c[28]*k1735;
	r1736 =	       c[28]*c[64]*k1736;
	r1737 =	       c[28]*c[67]*k1737;
	r1738 =	       c[28]*c[62]*k1738;
	r1739 =	       c[28]*c[68]*k1739;
	r1740 =	       c[28]*c[76]*k1740;
	r1741 =	       c[28]*c[80]*k1741;
	r1742 =	       c[28]*c[90]*k1742;
	r1743 =	       c[28]*c[98]*k1743;
	r1744 =	       c[28]*c[101]*k1744;
	r1745 =	       c[28]*c[102]*k1745;
	r1746 =	       c[28]*c[87]*k1746;
	r1747 =	       c[28]*c[96]*k1747;
	r1748 =	       c[28]*c[107]*k1748;
	r1749 =	       c[28]*c[105]*k1749;
	r1750 =	       c[28]*c[104]*k1750;
	r1751 =	       c[28]*c[103]*k1751;
	r1752 =	       c[28]*c[97]*k1752;
	r1753 =	       c[28]*c[106]*k1753;
	r1754 =	       c[28]*c[81]*k1754;
	r1755 =	       c[28]*c[85]*k1755;
	r1756 =	       c[28]*c[89]*k1756;
	r1757 =	       c[28]*c[82]*k1757;
	r1758 =	       c[28]*c[88]*k1758;
	r1759 =	       c[28]*c[109]*k1759;
	r1760 =	       c[28]*c[83]*k1760;
	r1761 =	       c[28]*c[93]*k1761;
	r1762 =	       c[28]*c[100]*k1762;
	r1763 =	       c[28]*c[69]*k1763;
	r1764 =	       c[28]*c[73]*k1764;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY SPECIES ===================== 
	// ============================================================ 
	R[1] =	       0.0;
	R[2] =	       0.0;
	R[3] =	       r572-r692+r573+r730+r570+r736+r575+r528+r564+r731+r569+r568+r654+r538+r565+r735+r571+r644-r690+r539+r679+r540-r688+r732+r522+r544+r645;
	R[4] =	       r530+r558-r583+r595+r1746+r1752+2.0*r650-r596+r661+2.0*r734-r694+r646-r573+r620+r1748+r592+r1753+r535+r1764+r597+r627-r561+r1738-r680-r704+r662+r1761+r621-r685-r610-r582+r1754-r586+r1739-r741-r699+r517+r594-r587+r1755+r1749+r738+r622-r705-r528+r537+r1740+r739-r711-r686+r691-r700+r542+r626+r618+r1756-r588+r647+r1741-r693+r643-r752+r1762-r701+r532+r1757+r1734-r589-r696+r1742+r1750+r1747-r702-r726+r1735-r740-r697+r659+r1758-r751-r590+r1743+r543-r728+r628-r679+r1736-r733-r753+r593+r1745-r527+r591-r540+r1763+r1759+r1760-r727+r604-r703+r567+r682+r1751-r695-r698+r1744+r1737+2.0*r625+r652-r544+r617;
	R[5] =	       r529+r541+r561+r566+r574+r576+r578+r580+r582+r585+r596+r598-r645+r651+r680-r691-r730-r731-r732+r733-r734-r735-r736;
	{
double MapleGenVar1 = r619-r153-r226-r312-r640-r210-r330-r225-r211+r12-r310-r646-r1-r308-r285-r4-r146-r212+r13-r290+r484-r219-r213+r5-r909-r344-r1501-r147-r536-r1532-r220-r594+r257+r191-r672-r214-r345-r456+r622-r537+r616-r320-r518-r224-r155+r458-r351+r618-r569-r221-r215-r16-r149-r737-r152-r1625-r398-r309+r735-r216-r1023-r1734; 
	R[6] =	            r7-r357-r222-r17-r993-r1594-r1653-r326-r1563+r469-r157+r476-r150-r217+MapleGenVar1+r624+r483-r543-r457+r521+r479-r223-r158-r159-r204-r497-r206-r207-r208-r209-r506-r797-r1684-r1081-r1411-r1328+r614-r156+r481-r200-r360+r579-r218-r151-r148-r1382-r10-r1442+r480+r478-r199+r625-r160-r468-r496-r201+r475-r198-r202-r203-r1355+r617-r3-r154;
}
	R[7] =	       -r530+r615+2.0*r619+r583-r1243-r529-r1443-r650-r584-r1595-r629-r1111-r620-r675-r1024-r541-r754-r597-2.0*r627-r585-r1299-r1473-r651-r1533-r621-r826-r1163+r586-r1654-r1189-r599+r587-r1502-r854-r738-r622-r725+r653+r616-r739+r746-r1270+r600-r1329-2.0*r626-r612-r755+r601-r623-r1217-r881+r602-r1735-r749+r613-r910-r624+r743-r994-r628-r1564+r603+r745-r798-r1082-r1383-r1412-r1713+r614-r1356+r742-r1626+r604-r939-r966+r748-2.0*r625-r1052+r744;
	R[8] =	       -r595+r608-r596+r573+r606-r592+r515+r609-r597-2.0*r598+2.0*r610+r582+r741+r536+r605-r594+r672+r611+r518+r711+r612+r752+r552+r665+r589+r670+r740+r590-r593-r591+r554+r533-r652;
	R[9] =	       -r574-r575-r576-r577-r578-r579-r580-r581-r582-r583-r584-r585+r675;
	R[10] =	       -r743-r744-r745-r746-r747;
	R[11] =	       r1243+r1443+r1595+r629+r1111+r1024+r597+r585+r1299+r1473+r1533+r826+r1163+r1654+r1189+r599+r1502+r854-r653+r1270-r600+r1329+r588+r612+r755-r601+r1217+r881-r602+r1735+r910+r624+r994+r1564-r603+r798+r1082+r1383+r1412+r1713+r1356+r747+r1626-2.0*r604+r939+r966-r748+r1052;
	R[12] =	       r749-r750;
{double MapleGenVar1 = r266+0.3*r124+r376+r1053+r514+r12-r757+r429+r133+r606+0.15E1*r430-r46-r760-r764+r322+r367+r1444+r535+r433-r630+r1112+r354+r372+r273-r756+r662+r377+r373+r1596+r410+r1474+r911+r531-r47-r758+r131+r508-r765+r303+r361+r699+r517-r762-r599+r557+r32+r524+r827+r61+2.0*r431+r135-r677+r369+r576+r1503-r771-r2+r26+r22+r305;
	R[13] =	             MapleGenVar1+r1271+r565+r385+r370-r763+r50+r1534+r58+r260+0.75*r250+r545-r295+r1300-r768+r185+r743+r317-r382+r417-r9+r371+r130+r416+r363+r882+r140+r136-r769+r1736-r772+r404+0.3*r418+r419+r1083+r1685+r1384+r1413+r132+r591-r766+r182-r767+r45+r423+r486+r408+r1655+r374-r761+r392+r239+r716+r698-r759+r428+r995-r770+r1565+0.15*r412+r445+r1025;
}
	R[14] =	       r523+r524+r546+r549+r551+r553+r555-r556-r557-r558-r559-r560-r561-r562-r563;
	R[15] =	       -r1159+r546-r1146+r534+r529-r1160+r1244+r267+r547+r1301-r1147-r1161+r560-r367+r580+r609+r1566+r243+r1535-r1148-r1162-r1141-r1140+r274+r685+r598+r1113+r244-r1149+r5+r364+r1445+r368-r1158+r1164-r1150+r245-r1157+r967+r1190+r378+r528+r1054+r1597-r1151+r1026+r718+r855+r356+r568+r325+r664+r828-r1142-r22+r601+r455+r383+r519-r1152+r252+r309-r1156+r1504+r11+r251+r678+r634+r362+r1656-r1153+r773+r1272+r476+r492-r1145+r912-r327+r750+r553+r996+r8-r1154+r261+r745-r1143+r593+r509+r1084+r1385+r1686+r1414+r296-r1144+r657+r604+r167+r940+r1737-r1155+r883+r307;
	R[16] =	       -r1174-r1186+r1568+r1537-r1175-r1172-r1187+r262-r1176+r381+r13+r914+r268-r1188+r1140-r1183+r1599+r1628-r1163-r1177+r14-r368+r1739-r1164+r1358+r998-r1185-r1178+r1476+r1115-r1165+r1303-r1182-r369-r1171-r1170+r1447+r375-r1166-r1179-r1173+r379-r1167+r774+r1192-r1180+r857+r1658-r1184+r1028+r275-r1168-r1181+r671+r800+r1086+r1387+r1416+r1688+r1714+r1056+r380+r1506+r1274+r498+r1331+r830-r1169+r885;
	R[17] =	       r595+r1109-r513+r572+r1471+r824+r1499+r1187+r1268+r1162+r548+r1021+r853+r673+r1561+r991+r1326+r1353+r1440+r563+r1215+r611+r964+r1050+r937+r525+r1651+r880+r1733-r1691+r1138+r1530+r908-r1710-r1692+r1241+r772+r603-r1689-r1695+r1380-r1701-r1684-r1694+r1079-r1699+r1682-r1685-r1690-r1700-r1693-r1696-r1702-r1686+r1592-r1709-r1705-r1708-r1697-r1706-r1707+r1410-r1703-r1687-r1704-r1698-r1688-r1711-r1712+r1763+r554+r796+r1297+r1623;
	R[18] =	       r526-r545-r546-r547-r548;
	R[19] =	       r637-r20+r277+r330+r321+2.0*r342+r225+r338-r21+r638+r439+r165+r650+r310+r694+r264+r629+r262+r175+r724+r343+r302+r641+r680+r662+2.0*r344+r323+r341+r642+r632+r281+r320+r270+r304+r246+r215+r346-r16+r352+r331+2.0*r654+r643-r22+r311+r305+r437+r309+r683+r589+r17+r670+r347+r265+r260+r250+r726+r644+r336+2.0*r348-r18+r161+r728+r358-r628+r666+r140+r261+r223+r349+r318-r487+r189+r192+r486+r181+r176+r682+r667+r442+r166+r180+r441+r172+r171+r648-r645+r193+r198-r197-r488+r202+r329+r399+r340+r328-r19;
	R[20] =	       r312+r20-r321+r21+r646+r620+r675+r651+r263+r669+r672+r345+r725+r16+r259+r22-r311+r216-r683+r18+r185+r628+r679+r487+r177+r182+r195+r727+r194-r682+r337+r184+r645+r201+r178+r197+r488-r328+r19;
	R[21] =	       -r637+r714-r1726+r1110-r1727+r1472-r1728+r825+r712+r1764+r724+r1500+r630+r729+r1188-r1729+r1624+r685+r681-r1730+r676-r631+r1269+r1381-r1731-r632-r1732+r709+r691+r700+r992+r1562+r1216-r1733-r633-r737+r701+r713+r1441+r1327+r655-r634+r687+r938+r715+r965+r710+r1298+r690-r635+r728+r707+r1022+r1139+r1531+r1080+r1683+r1712-r1713-r1714-r1715-r1716-r1717-r1718-r1719-r1720-r1721-r1722-r1723-r1724-r1725+r1242+r1051+r1593+r688+r727+r1354-r636+r695+r1652+r723;
	R[22] =	       -r655-r659-r660-r661-r662-r663-r664-r665+r704+r705-r706+r725+r726;
	R[23] =	       r636+r648+r649+r652+r653+r656-r666-r667-r668-r669-r670-r671-r672-r673-r674-r675-r676+r677-r678+r702+r703+r706+r708;
	R[24] =	       r635-r656-r657-r658-r719;
{
	double MapleGenVar2 = -r1243+0.67*r1509+0.67*r1511+r1746+r266-r1246+r321-r1252+r831+r1752+0.5*r225-r1244+r236+0.35*r230-r1256+r661+r1659+0.55*r289-r301+r264-r1266+0.67*r1512+r267+r278+r1748+r308-r1268+0.67*r1526+r464+r1275+r1753+r255+r1764+0.67*r1523+r1359-r1247+0.67*r1513-r1257+r1538+2.0*r484+r268+r1738+r1141+r273-r1264+r279+r256+r1761+r1029+r274+0.67*r1527;  
	double MapleGenVar1 = MapleGenVar2+r1754-r1258+0.67*r1514+0.67*r1501+r147-r1269+r886+r1739+r280+r1219+r915+2.0*r269+r232+r355-r141+0.67*r1502+0.67*r1515+r1755+r1749+0.67*r1528-r1248+0.67*r1522-r1259+2.0*r1740+0.67*r1508+r258+r281+r739+0.67*r1516+r1332+0.67*r1503+r221+r1756+r233-r375+r1477+r1166-r1253-r1260+r1741+0.67*r1510+2.0*r276+0.67*r1517+0.67*r1524+0.67*r1529+r775+r755+r1116+r311+r1304-r1245-r1249; 
	MapleGenVar2 = MapleGenVar1+r752+r1762+r271+r461+0.67*r1504+r1757+r1734+r222+r1448-r370+0.5*r234+0.67*r1518+r1742-r1261+0.67*r1530+r1750-r649+r1747+r476-r150+r1735-r1255-r1250+r1057+r485+r163+r272+r720-r1262+0.67*r1505+r1758+r327+r275+r248+0.67*r1519+r306+r483+r1743+r463+r479-r140+r1736+r319+r223+r1193+r858+r1689+0.67*r1531+r206+r207+r801;
R[25] =	                      MapleGenVar2+0.9*r502+r506+r507+r1388+r1087+0.67*r1521+r1745+r1417+r1715-r1263+r1629-r1267+r235+r183+0.5*r186+0.5*r187+r482-r177-r182+r190+r200+r1763+r218+r1759-r1251+r1760+r969+r471+r1600+r942-r194+r477+0.67*r1506+r239-r1254+r1751+r180+0.67*r1525+2.0*r199+r1744+r1737+r1569+2.0*r496+r201-r1265-r196+r198+r488+0.25*r495+0.167E1*r1507+r162+r999+0.67*r1520;
	}
R[26] =	       r753;
	R[27] =	       r751;
	R[28] =	       -r1746-r1752-r1748-r1753-r1764-r1738-r1761-r1754-r1739-r1755-r1749-r1740-r1756-r1741-r1762-r1757-r1734-r1742-r1750-r1747-r1735-r1758-r1743-r1736-r1745-r1763-r1759-r1760-r742-r1751-r1744-r1737;
	R[29] =	       r754;
	R[30] =	       -r714+r1246+r23+r1418+r802+r1570+r278+r970+r1660-r790+r1601+r1000-r777+r365+r1030+r1220-r291+r1539+r859+r832-r780-r786+r943-r292+r240-r789+r1508-r795+r746-r776-r111+r1276-r293+r916-r779+r1142+r1741+r1630+r49-r775-r149+r271-r792+r1478+r1117+r1167-r774-r782+r265+r1305-r794-r773-r740-r784-r783+r1058-r371+r1449-r781+r51+r393+r366-r788+r1088+r1690+r1389+r1194-r791-r796-r785-r787-r52+r748+r887-r793-r778;
{
double  MapleGenVar1 = r1614+r1643+r1012-r1231+r277-r376+r1129+r1727-r1199-r1210-r1224-r1213+r790+r764-r1200+r902+r1291-r1195-r1222-r1209-r1225+r1015+r1583+r899-r1201-r1220+r279-r1214-r377-r1236+r1289+r1754-r1197-r1189-r1226+r280+r1673-r1219-r1202-r1237+r958+r1431-r1215-r142+r1157-r1190-r1203+r1259+r1178-r378+r1494-r1238+r270+r1344-r1233-r1211+r818-r1227-r1204+r1462-r1216+r1041+r1044+r1491+r1524-r1191+r1617+r1552;  
	R[31] =	          MapleGenVar1+r815-r152+r874-r1239-r1205+r847+r1757+r982-r379+r985-r1228+r928-r1217-r1221-r1192+r1586+r955-r1240-r1206-r1223+r1434+r485+r272+r1070+r1262+r1374-r1229-r1196+r844+r479-r1241+r1154+r1181-r1218-r1193+r1465+r1347+r1371+r1676+r1100+r1103+r1521+r1402+r1404+r1706+r1703+r1725+r1073-r1242-r1194-r1234+r767+r931+r871+r1321-r151-r1212+r1132-r167+r1318-r1232+r787+r1646-r1230+r1555-r143-r1208-r1198;
}
	R[32] =	       r1437+r1160+r850+r1350+r877+r1620+r821+r1527+r1730+r1135+r1649+r1589+r988+r1238+r1558+r905+r1468+r1496-r485+r1184+r1679+r1294+r961+r1076+r1018+r1377+r1106+r1709+r1407+r1047+r1760-r459+r460+r477+r1212+r770+r475+r1265+r934+r793+r1323;
	R[33] =	       -r422-r820-r288+r226+0.7*r241-r332+r93-r802-r824-r819-r803-r57+r386-r46-r825-2.0*r56-r804+r313-r146-r712-r433+r104-r333+r243-r44+r729-r821+r60-r805-r168+r314-r813-r806+r220+r74+r32-r81-r334+2.0*r48-r807-r814-r119+r711-r113-r818+r71-r66-r808-r331-r395-r335-r62-r815-r383-r822-r809+r347+r72-r63-r816+r300+r348-r810+r382+r391-r41-r65+r51+r205-r801-r799-r798-r800-r797+r443+2.0*r134-r396-r192-r190+r188+r31-r823-r811-r181+r449-r432-r64-r454-r42+r359-r67-r812+r196-r198-r203+r87-r817;
	R[34] =	       r226+0.3*r241-r338+r956+r301+r1345+r1319+r290+r1615+r219+r168+r147+r765+r1130+r872+r1584+r1755+r1522-r281+r224+r1233+r1432-r339+r1260+r1179+r900+r252+r1463+r247+r1644+r357-r713+r251+r1492-r1408+r1553+r816-r336+r1013+r929+r1674+r1290+r286+r1372+r788+r505+r506-r1398-r1399-r1388-r1400-r1397-r1390-r1383-r1386-r1393-r1387-r1395-r1391-r1384-r1392+r1101-r1385-r1396-r1394-r1389-r1401-r1402-r1403-r1404-r1405-r1406-r1407-r1409-r1410+r1704-r183+0.5*r186+r1071+r983+r1042-r337-r1382-r166+r164-r180-r184+r845+r1155+r1208-r201-r202-r179-r340;
	R[35] =	       -r715-r716-r717-r718+r719;
{
double MapleGenVar1 = -r153-r836+r863+r1746-r849+r33-r831+r1199+r338-r837+0.3*r230-r57-r850+r757+0.25*r289-r69-r435+r1147+r138-r125+0.25*r430-r851+0.5*r114-r117+r921-r838+r1225+r1513-r44+r53-r852-r839+r60-r420-r826+r70-r835-r47-r832-r853+r780+r891-r840+r115+r1606-r32+r139+r1423+r1035-r287-r827+r1122+r947+r90-r841+r807+r1364+r444-r709+r293+r1170-r848-r828-r82;
	R[36] =	             -r842-r847+r112+r247-r434+r50-r833-r390-r128-r843+r1575-r169+0.5*r250-2.0*r68+r298-r846+r1483-r829+r465+r492-r170-r116+r1310+MapleGenVar1+r1005+r297+r974-r127-2.0*r137+r130-r844+r1665-r393-r204+r205+r208+r1695+0.1*r502+r1635+r511+r1093+r1394-r405+r1544-r472-r394-r494-r423+r1251+r95+0.8*r123-r834-r392+r98-r52+r1454-r199-r845+r172+r171+r1281-r120+r1337+r1063-r830+r249;
}
	R[37] =	       -r1614-r1611-r1595-r1603-r1601-r1605-r1598-r1615-r1624-r1620-r1596-r1599-r1606-r1622-r1616-r1597-r1602-r1621-r1607-r1617-r1613-r1610-r1594-r1618-r1619-r1612-r500-r501-r502-r1609+r499-r1600-r1604-r1608-r1623;
{
double MapleGenVar2 = 0.33*r1509+0.33*r1511+r901+r1726-r1309+r875+r1133+r819+r1210+0.35*r230+0.2*r289+r242+0.33*r1512-r1325-r1311-r1301+0.33*r1526+r1728-r285-r1275-r1291+0.133E1*r1523-r1319+r986-r1307+r1209+0.33*r1513-r1299-r1282+r1495-r1315-r1308+r231+r957+r1236-r1289+0.33*r1527+r903-r1302+0.33*r1514+0.33*r1501-r1317+r1158;      
double MapleGenVar1 = -r1283+0.33*r1502-r1326+0.33*r1515+r789+0.33*r1528+0.33*r1522-r1280+r1616+r1045+0.33*r1508-r1303+r1182-r1312-r1270-r155+0.33*r1516+r1016-r1276+0.33*r1503-r1288+r1756-r1287+r848-r1293+0.33*r1510-r1296+0.33*r1517+0.33*r1524+0.33*r1529+r1585-r1322-r1284+r959-r1304-r1271-r1314+r282+r1647+r1156+r1433+0.33*r1504+r1131+MapleGenVar2;
	R[38] =	             0.33*r1518+r1261+r1180-r1327+0.33*r1530+r169-r1305+r1618+r846-r1272-r1285+r1464-r1279-r1277-r1298+0.33*r1505+r1758-r1310+MapleGenVar1+0.33*r1519-r1300+r768-r185+r1554+r1587-r1313-r1294+r1346+r1348+r1677-r1290-r1316+r932+r1493+r145-r1273-r1306+0.33*r1531+r497+r1072+r501+r1074+r1375+r1102+r1104+0.33*r1521+r1403+r1705+r1405+r1707+r1263-r144+r766+0.5*r187+r200+r984-r195+r1234+r1043+r791+r930+r1435-r1321-r1295+r873-r1318+0.33*r1506-r1274+r1466+r1675+0.133E1*r1525-r1297-r1278+r1373-r1324-r1281+r493+r1014-r178+0.33*r1507+r1645+r1556+r817-r1323-r1286+0.33*r1520+r249;
	}
R[39] =	       r470-r471;
	R[40] =	       r1509-r863+r944-r875-r861+r888+r803+r1419-r864-r876-r708+r1195-r865+r1247+r24-r372+r1571-r877-r860+r971-r866-r859+r1360-r741-r878-r872+r1059+r25-r879-r854-r867+r776+r1602+r111+r1540-r855+r1031-r880-r868-r862+r1691+r1001-r874-r856-r869+r833+r1221+r1742+0.25*r250+r917-r63-r857+r1479+r1277+r1118+r1168+r55-r707+r1661-r130+r1143-r870-r858+r1306+r1390+r1089+r1631-r871-r873+r1333+r1450-r154;
	R[41] =	       -r1547-r1509-r1511-r1568-r1537-r1512-r1570-r1526-r1548-r1560-r1523-r1566-r1513-r1535-r1538-r1533-r1571-r1583-r1549-r1527-r1514-r1501-r1539-r1572-r1532-r1561-r1502-r1584-r1515-r1550-r1590-r1528-r1522-r1589-r1508-r1573-r1546-r1516-r1540-r1551-r1558-r1503-r1562-r1510-r1517-r1524-r1574-r1529-r1585-r1552-r1581-r1504-r1567-r1541-r1518-r1534-r1586-r1575-r1530-r1563-r1553-r492-r1580-r1536-r1591-r1576-r1505-r1519-r1542-r1554-r1587-r1579-r1564-r1531-r1578-r1582-r1521-r1592-r1544-r1593-r490-r489-r1577-r1559-r1506-r1525-r498-r1557-r1588-r1545-r1543-r1569-r1555+r491-r1565-r1507-r1556-r1520;
	R[42] =	       r989+r1266+r1161+r1213+r851+r935+r1650+r1761+r1497+r1469+r878+r1731+r1590+r1528+r1136+r1185+r771+r1621+r822+r1239+r1438+r1408+r794+r906+r1710+r1048-r463+r1077+r1107+r1378+r481+r462+r1680+r1295+r1559+r962+r1019+r1324+r1351;
	R[43] =	       r83-r105-r108+r335+r352+r353+r354+r356-r359-r360;
	R[44] =	       0.25*r225+r211-r425-r1345+0.5*r175-r1334-r104-r365-r1350-r1336+r80-r1330-r1341+r35-r364-r126-r191-r414-r1353-r1335-r1340-r1329-r1332-r1344-r1349+0.5*r246-r389-r121-r1352-r417+r358-r84-r1346-r1348-r1343-r363-r1347-r1328+r132-r396-r1339-r148-r1354-r1333-r1338-r171-r1331-r1342-r1351-r1337;
	R[45] =	       r1252+0.25*r225+r837+r864+r1311+r34+r1200+0.5*r175-r1359+r1282-r80+r1484+r1666+r1006+r76+r131+r1514-r147-r1360+r227-r1381+r1226-r361-2.0*r139-r388-r1358-r1365-r1364+r892+r1424+r1455-r424+r1171+r948+0.5*r246+r808+r1123+r1607-r1357-r395+r26-r62-r1370+r1064-r415-r362+r1747+r922+r122+r1576-r1374+r101-r416-r366-r1372-r1363-r1380-r1379-r1371+r1094-r1375+r1395+r1696-r1369-r1377-r1378+r1718-r186+0.33*r394+r1636-r1356-r1362-r1376-r1361+r975-r1367-r85-r86-r1368-r172+r1545-r1373+r1338-r1355-r1366+r73;
{
double MapleGenVar1 = r1231-r901+r210-r919-r124+r1752-r888-r923-r913-r69-2.0*r138+r1451+r133+r1603-r430-r114+r1420+r945-r935+r804-r889-r902+0.8*r117-r921+r1032+r1334+r1222+r1176-r924+r1307+r777-r884+r1257-r914+r1039-r406-r899+r756-r890+r980+r860-r911-r903-r909-r131+r1641-r925+r1489+r1572-r886+r813+r126+r1460+r1632-r891-r915+r257-r936+r762+r1550+r36+r1248-r904-r926-r892+r972-r933-r920-r898-r893-r916+r109-r937+r1287-r905-r927+r1510+r49+r842-r900+r1662;
	R[46] =	             r1152+r1205+r1581-r894+r1541-r928+r869+0.2*r128-r881+0.5*r250+r88-r917-r173-r938+r91+r1010-r922-r906+r1671-r710-r908+r110-r910-r912+r116+r248+r1519+r27-r895-r929+r75+r1743+0.85*r127+r1692+r1068+r1196+r1316-r882+r1480-r932-r404-r145-r158+r1612+r953+r209+r1701+r1060-r512+r1400+r1090+r1391+r1099+r1369+r1723+r1119-r132+r1127+r1144-r200+0.67*r394-r931-r930-r907-r64+r785+r1361-r123+r176+r834+MapleGenVar1+r1429+r1278-r883-r887-r934+r1002+r1169+r73-r129-r896-r885;
}
	R[47] =	       r1470-r1643+r1186-r1637+r963+r1325+r1439-r1650+r1560+r990-r1642+r852+r1214-r1628-r1648-r1641-r508-r1638-r1632-r1649+r936+r1622+r879+r1732+r795-r1651-r1630+r1137+r1296+r1529-r1625+r1762-r1647+r1352-r1639-r1644+r1020-r1627-r1633+r1240+r1591-r1640+r1681-r503-r504-r1635-r509+r1078+r1379+r1108+r1409+r1711-r1629+r1267-r1631-r1634-r1636-r1626+r823+r1049+r907-r1652+r1498-r1646-r1645;
	R[48] =	       -r1659-r1660-r1663-r1666-r1654-r1673-r1669-r1657-r1668-r1662-r1664-r1653-r1656-r1658-r1671-r1679-r1674-r1661-r1672-r1677-r1665-r1681-r510+r512-r1676-r1682-r1678-r1670-r1667-r1683-r1680-r1655-r1675;
{
double  MapleGenVar1 = r836+r1511-r989+r919+r1309-r944+r1146+r861-r979+r1224-r956-r963+r1512-r133-r970-r976+r1605-r945+r889-r990+r1663-r986+r29-r381+r1336+r53+r1062+r1421+r1308+r890-r980-r373-r957+r805-r968+r835-r971+r1121+r1197+r1422+r1004+r806-r943-r991-r941-r958-r967+r1280-r947+r1335-r988+r1573+r1452-r964-r981-r972+r28+r920-r948-r992+r779+r30+r1574;
	R[49] =	            MapleGenVar1-r959+r862+r1249-r978-r982+r1033-r949+r1664-r985+r1034-r960-r157-r955-r965+r1633+r1250+r1279+r1453+r1223-r950+r1145+r1542-r974-r954-r961-r951-r987-r977-r953+r1363+r1694+r1091+r1092+r1393+r1693+r1392+r1745+r1716+r1717-r156-r952+r1061+r1634-r984-r969+r1362-r942+r1604-r939-r380-r374-r983-r966-r975-r962+r1481-r940+r1482+r1744+r1003+r1543+r1120+r778+r1198;
}
	R[50] =	       r58-r65+r92+r105+r106+r119+r121+r135-r188+r244-r352-r353-r387-r426-r434;
	R[51] =	       r1611-r1012+r107+r979-r1008+r1256+r59+r1175-r435-r175-r1000+r1488-r1015+r1315+r108+r1459-r1021+r1549-r1006-r1004+r139+r245-r998-r1009+r61+r926+r841-r135+r1151-r1016+r1204-r66+r94+r109+r868-r1001-r411+r1038-r993+r1518-r1020+r72-r1010+r1580-r1013+r110+r784+r436-r1017-r996-r1005-r994-r1022-r427+r41+r1640-r997-r1018+r1067+r1399+r1700+r1098+r1670+r1722-r134+r1126+r952-r189-r1011+r45-r432+r1428+r761+r1751-r1019+r1368-r1003-r995+r1230-r174-r67+r812-r1014+r120+r1342-r1002-r999+r1286-r1007+r896;
	R[52] =	       r1174+r43+r439-2.0*r79-r289+r1487+r125-r413+r1548-r1024+r760+r1458-r1032+r96+r212+r99-r433+r44-r1030-r1039+r1341-r1029+r70+r213+r925-r1037+r840-r115+r74-r1035+r1150+r1009+r1203-r1045+r867-r1026-r1050+r1669-r1031-r1041-r1044+r1517+r78+r440-r407+r1314+r1610+r978+r1639-r1038-r1023-r112-r1033-r1034+0.5*r234+0.8*r128+r1750-r122+r1285+r1255-r1046+r1427-r1028+r783+r895+r55-r1027+r75+r1229-r1040-r1048+0.15*r127+r1579+r1125+r136+r951-r404-r418-r419-r205+r1398+r1699+r1097+r1721-r1047-r1051-r1043-r45-r408+r811+r449-r1049-r1036+0.2*r123-r176+r77+r1066+r1367-r1042-r428-r193-r412-r1025+r129;
{
double MapleGenVar1 = -r1109+r1456+0.7*r124-r1053-r1110+r923+r1637+r1172+r138+r1748+r976+0.5*r114+r1753+0.2*r117+r838+r865+r1148+r1642-r1062+r1201+r1430+r758+r1177+r1258+r1317+r786+r1283-r1059+r37+r1515+r1365+r1461-r1065+r1490-r1054+r814+r981+r1546+r1312+r1227+r1551+r1128+r1288+r54+r898+r893+r1253+r927+r38+r1425+r1613+r949+r1370-r1064+r809+r763+r1124+r39+r843+r1485+r1153+r1206-r1057-r1070-r1058+r1040+r954+r137+r1672;  
	R[53] =	           -r1068+r781+r1343-r136+r870-r159-r1075-r1072-r1076-r1060-r1067-r1074-r1077-r1078-r1079-r1080-r1081-r1082-r1083-r1084-r1085-r1086-r1087-r1088-r1089-r1090-r1091+r1582-r1092-r1093-r1094-r1096-r1097-r1098-r1099-r1100-r1101+r1702-r1102+r1396-r1103-r1104-r1105-r1106-r1107-r1108+r1401+r1697+r1667+r1719+r1724-r1073-r187-r1061-r1071-r1055+r1011-r1056+r1339+r1608+MapleGenVar1+r1036+r1577+r77-r1066+r1232+r480-r1052-r1063+r1520+r1007;
}
	R[54] =	       r1547+r1486-r1133-r1129+r1457+r1008-r1111-r1134+r924-r1112+r40+r839-r1113+r1149-r1121+r866-r1135+r76+r1638+r1037+r1202-r1130-r1114+r1749-r1122-r1136+r1065-r1115+r1340+r1516-r1128+r71+r1668-r1123-r1137+r1284-r1116+r78+r1173+r894-r1131-r1117+r782+r1426+r1228-r1124-r1138+r950-r1118+r810+r1313-r1125-r1139+r977+r1578+r1397+r1609+r1096+r1698+r1720-r1119-r1127-r1126-r1132+r1254+r759-r160-r1120+r1366;
	R[55] =	       -r1437-r1418+0.3*r124-r439-r1419+r384-r409-r1439+0.5*r430-r1420-r406-r1421-r1430-r1422-r1423+r388-r1431-r1440-r438-r1424-r1432+r389+r395-r1425-r440-r407-r1433-r1426+r390-r1441-r1438-r1434-r1427+r453-r391+0.7*r418+r393-r1436-r1411-r1412-r1413-r1414-r1415-r1416-r1417-r405+r396-r1435-r1428+r392-r1429-r446+0.85*r412-r445+r399-r447;
{
double MapleGenVar1 = r422+r1470+r820+r1159+r1456+r849-r1486+r1471+r1443+r1457+r425-r1499-r429-r1487+r876+r1451+r1472-r409+r1526+0.5*r430+r413+r1134+r1458+r1444+r433-r1500-r1488-r1473+r406-r1495+r1729+r1264+r1459-r1484-r1497+r1183+r410-r1474+r420+r1648+r1445-r1489+r1460-r397+r1469-r1475+r414+r1237+r1446+r401+r1461+r904-r1476-r1490-r431+r1452-r1494+r444+r1455+r933+r424+r1211+r1349+r1462+r1447-r1477+r426;
	R[56] =	             r1293-r1491+r1322+r1468-r455+r407-r398+r792+r411-r1478+r1463+r1448+r434+r415+r960-r1492-r1485-r1496-r421+2.0*r1467-r1483+r1464-r1479+r1453+r1046+r1017+r417+r427+r1449+r402+r416+r769-r1480-r1493+r404+r1465+r1619+0.3*r418+r987+r419+r1075+r1436+r1678+r1105+r1708+r1406+r405+MapleGenVar1+r1759+r423-r408+r432+r1376+r1466+r1442-r1481+r1454-r1498-r1482+r1557+r1588+r428+r1450-r450+r400+0.15*r412-r399+r447;
}
	R[57] =	       r435;
	R[58] =	       -r1470-r1456-r1471-r1443-r1457-r1451-r1472-r1458-r1444-r1459-r1445-r1460-r1469-r1446-r1461-r1452-r1455-r1462-r1447-r1468+r385-r1463-r1448-r1467-r1464-r1453-r453-r1449-r1465+r452-r1466+r454-r1442-r1454-r1450;
	R[59] =	       r446;
	R[60] =	       r408+r409+r421+r429+r431+r445+r450+r451;
	R[61] =	       -r522+r531+r534-r539-r542-r543-r544+r638+r641-r644-r682-r684-r687-r689+r690+r692+r694+r697-r723-r724-r729;
{
double MapleGenVar1 = -r558+0.7*r241+r640-r332-r546-r608+r330-r559-r342-r638-r439-r236-r230-r913-r734+r1+r308+r730-r592-r515-r175-r717-r1598-r884-r1738-r231-r1330-r516-r968-r168-r1302-r323-r631+r536-r517-r1475-r232-r355-r669-r587-r941-r1114-r287+r214-r15+r240-r1446-r622-r632-r1165-r600-r304+r351+r221-r233-r551-r1657+r16-r352+r693-r2-r331-r259-r1357-r1191-r643; 
	R[62] =	            -r633-r1245-r305-r660-r856-r623-r437-r735-r532-r552-r1567-r7-r234-r670-r228+r326-r1627-r169-r173-r829-r566-r578-r170+r217-r1536-r658-r659-r720-r1505-r668-r18-r1027+r543+r8-r521-r1218-r997-r1273-r799-r512-r1085-r1386-r1687+MapleGenVar1-r1415-r349-r614-r235-r318-r229-r177-r1055-r579-r567-r176-r337+2.0*r10+r695-r180-r441-r172-r174-r171+r544-r178-r744-r179;
	}
R[63] =	       r584-r613-r614-r615-r616-r617-r618-2.0*r619+r623+r626+r627+r750;
{
double  MapleGenVar2 = r422+r1470+0.33*r1509+r1456+0.33*r1511+2.0*r312+r20+r513+r332-r266-r23-r376-r33+r107+r1471+r342-r1053+r1443+r1457-r514+0.35*r230-r12+r684+r757+r310+r301+0.33*r1512-r59+r429-r1+r620+r1451+r1472+r409+0.33*r1526-r606+r413+r46+r760+r764+r515-r322-r4+r1458-r367-r34+2.0*r313+r570+r96+0.33*r1523+r343+r99-r104-r29+r333+0.33*r1513+r630-r1112+r574-r354-r372-r273-r40+r756+r108+r704+r1459-r377-r373-r60+r689-r1596+r403+r410+r523-r621-r1474+r299;   
double   MapleGenVar1 = MapleGenVar2+r420+0.33*r1527+r681-r35-r911+r92-r531+r47+r758+r1445+0.33*r1514+r323+0.33*r1501+r631-r508+r549+r314-r368+r263+r1460+r765-r303-r361+r397+r1469+r605+r141-r341+r762+r599+0.33*r1502+r237+r663+r414-r557-r81+r334+0.33*r1515+r388-r25+r287-r827+r324+r1446-r48+0.33*r1528+r438-r550+0.33*r1522-r642+r705+r1461+r556-r61+0.33*r1508+r431+r1452-r6+r119+r320+r315+r677+0.33*r1516+r111+r1455+2.0*r304-r369+r564+r542-r576+r293-0.67*r1503-r731+r105+r1462+r389+r94+r1447;     
 MapleGenVar2 = MapleGenVar1+r103+r771-r30+r2+0.33*r1510-r82+0.33*r1517+0.33*r1524+r259-r607+0.33*r1529-r26+r335+r1468+2.0*r538+r639-r577+r294-r1271-r565-r282+r411+r532+0.33*r1504+r1463-r11+r722+r1448-r370+r763+0.33*r1518+r102+r415-r1534+r390-r39+r696+r83+0.33*r1530-r58-r260-r545-r655+r88+r350+r238+r687+2.0*r451+r421+r298-r715+r1467+r91+r702+r566+r1464+r1453+r163-r613+r295+r300+0.33*r1505+r327+0.33*r1519-r1300+r768-r453+r539-r27+r436-r743+r306-r317+r382+2.0*r106+r297+r417+r635; 
	R[64] =	           MapleGenVar2-r590+r161-r391-r84+2.0*r9-r371+r41+r1449+r416-r363-r882+r769+r286-r1736+r772+r319+r733+r404+r1465+r393+0.33*r1531+r504-r1083-r1685-r1384+0.33*r1521-r1413+r405+2.0*r318-r591+r766+2.0*r177+r182+r490+r767+r423+r533+2.0*r408-r31-r1655-r732+r703-r374-r460+r761+2.0*r522-r167+r636-r667+0.33*r1506-r85+r1466-r716+r454+r1442-r166+r164+r1454-r86+0.33*r1525+r759-r995+r143+r1450+r770+r493+r178-r1565+r120+0.33*r1507-r3+r162+r329+0.15*r412+r445+r399-r1025+0.33*r1520+r19;
}
	R[65] =	       -r534+r514-r535-r541+r516-r523-r531-r562-r555-r536+r669+r642+r632-r537+r525+r519-2.0*r538-r532-r571-r602-r539+r666-r733-r540-r674+r688-r533+r567;
	R[66] =	       r527+r556+r557+r559+r560+r562+r563-r564-r565-r566-r567-r568-r569-r570-r571-r572-r573+r577+r579+r581+r583+r584;
{
 double MapleGenVar2 = -r615-r637+r1159-r288+r226-r241-r20+r253+r608-r353+r1146+r559-r534+r1160+0.5*r225-r1244+r21+0.3*r230+r913+r254+r596-r661+r310-r289-r242-r267+r1-r547-r1301+r1147+r1161-r560+r592+r367-r535+r146+r255+r541-r580-r609-r343+r1598-r1566-r243+r884-r1535+r1148+r1162+r1738+r1141+r219+r1140-r662+r1330+r516+r256+r621-r274+r968-r1113-r244+r1149; 
double MapleGenVar1 = -r5+r1302-r364+r344-r1445+r586-2.0*r14-r736+r368+r263+r1158+r575+r1475-r1164-r237+r941+r1114+r1150-r15-r245-r240-r324+r142+r1446+r1157-r967-r1190-r378+r537-r1054+r258+r1165+r281+r470+r616+2.0*r6-r1597+r320+r518+r1151+r600+r686-r1026+r700-r542-r718-r855-r356+r721+r731+r551-r568-r246+r1657-r325-r588-r664-r828+r1142-r647+r2+r1357+r607+MapleGenVar2; 
MapleGenVar2 = r1191+r633-r601+r1245-r455-r440-r383-r519+r1152-r639+r577+r660+r856-r252+r701+r1156+r461-r1504-r581+r1567-r11-r247-r665+r7+MapleGenVar1+0.5*r234-r251-r678+r1627+r520-r250+r655-r634-r362-r350-r238-r1656+r1153-r773-r1272+r829+r578-r749+r485-r283+r613+r1145+r1536+r658-r912+r1505+r668-r750-r248-r553-r436-r185-r996+r1027-r306-r473-r635+r463;
	R[67] =	                 -2.0*r8+r719+r1154-r319-r261+r1218+r223-r745-r145+r997+r1273+r1143-r593+r799+r506+r507-r509-r1084+r1085+r1386-r1385-r1686+r1687-r1414+r1415+r527-r296+r540-r183-r186-r189-r187+r1144-r182+r1055-r188+r499-r494-r554+r486-r533-r657+r471-r181+r732+r459+MapleGenVar2-r636-r239+r442-r184-r940-r1737-r359+r1155+r496-r883-r491+r744+r202-r329-r307-r399-r249-r19;
	}
{
double MapleGenVar1 = r615+r153+r1174+r1186+r210-r253-r1568-r21+r211-r254-r12-r1537+r1175+r1172+r1187+r285+r4-r262-r255+r212+r1176-r381-2.0*r13+r290-r914-r268+r1188-r1140-r256+r1183-r1599-r1628+r213+r1163-r5+r1177+r909-r586+r1501+r736-r1739-r263+r1532+r220+r594+r1164-r257-r191+r15-r1358-r998+r1185+r1178-r1476-r1115-r258+r1165-r281-r1303-r616-r6+r1182+r155+r369+r1171+r569+r1170-r1447-r375+r1166+r1179+r149+r737+r152;
R[68] =	             MapleGenVar1+r1625+r398+r1173+r1023+r581-r379+r1734-r7+r1167-r774+r17+r993+r1594+r1653-r1192-r520+r1180+r1563+r157-r476+r150+r465-r857-r1658+r1184-r1028-r275-r624+r1168+r473+r1181-r671+r158+r159+r497+r206+r207+r208+r209-r800+r797-r507+r1684+r1081-r1086-r1387+r1411-r1416-r1688-r1714+r1328+r156-r481-r472-r462-r190-r1056+r151-r380-r1506-r1274-r442+r1382+r1442-r498+r160-r1331-r475+r1355+r3+r154-r830+r1169-r885;
}
	R[69] =	       -r530+r558-r595+r637-r1109+r513-r572-r1471-r824-r529-r514-r1499-r1187-r1268-r515+r561-r1162-r548-r1021-r516-r523+r562+r555-r853-r517-r673-r1561-r991-r1326-2.0*r524-r1353-r1440-r563-r1215+2.0*r550-r611-r528-r964-r518-r1050-r937-2.0*r525-r1651-r880-r1733+r607+r1691-r519+r552-r1138-r520+r571-r1530-2.0*r526+r602-r908+r1710+r1692+r521-r1241-r772-r603+r1689+r1695-r1380+r1701+r1684+r1694-r1079+r1699-r1682+r1685+r1690+r1700+r1693+r1696+r1702+r1686-r1592+r1709+r1705+r1708+r1697+r1706+r1707-r1410+r1703+r1687+r1704+r1698+r1688+r1711+r1712-r527-r1763+r674-r796-r522+r667-r1297-r1623;
	R[70] =	       r520-r521+r530-r605-r606-r607-r608-r609-r610-r611-r612;
	R[71] =	       r545+r547+r548-r549-r550-r551-r552-r553-r554-r555;
	R[72] =	       -r300-r315+r322+r325-r329-r330-r692-r693-r694;
	R[73] =	       -r640-r714+r1726-r1110+r692+r1727-r638-r1472+r1728-r825-r1764-r1500-r630-r1188+r1729-r1624+r689+r1730-r676-r1269-r1381+r1731+r1732-r709-r721-r992-r1562-r1216+r693+r1733+r633-r639+r737-r722-r683-r713-r1441-r1327+r634-r938-r965-r710-r1298+r720-r707-r1022-r1139-r1531-r1080-r1683-r1712+r1713+r1714+r1715+r1716+r1717+r1718+r1719+r1720+r1721+r1722+r1723+r1724+r1725-r1242-r1051-r1593-r1354-r1652;
	R[74] =	       r640-r650-r646-r708-r712+r717-r651-r641-r680+r676+r631+r699+r673+r663-r642-r653-r677+r664-r647-2.0*r654-r643+r639+r660+r683+r678+r696-r649-r644+r658+r668-r679+r671+r674+r657+r698-r652-r648;
	R[75] =	       -r301-r322-r689-r299-r323-r314+r303-r324-r691-r293-r105-r325-r335+r216-r347-r326-r696-r697-r690-r327+r317-r106+r349-r695+r307-r328;
{
double MapleGenVar1 = r1243+r1246-r277+r353+r1252-r831+r1244+r236+r1256-r1659-2.0*r264+r1266-r629-r620+r1268-r1275-r262-r1359+r343+r1247+r1257-r1538-r302-r1141+r1264-r1029+r1258+r1269-r886-r263-r1219-r915-r269+r141+r324+r345+r1248+r1259-r1740-r270-r1332+r215+r375-r1477-r1166+r1253+r1260+r647-r276-r259-r775-r1116-r1304+r1245+r440+r1249+r665+r357-r1448-r589+r370; 
	R[76] =	            -r17+r326+r1261-r265-r260+r173+r649+r150+r1255+r1250+r170-r1057+r283+r697+r659+r1262+r436-r161-r358-r261-r1193+MapleGenVar1-r858-r1689+r204-r801+r500+r511-r1388-r1087-r1417-r1715+r1263-r1629+r1267+r144+r183-r192+r190-r195+r360+r218+r1251-r969+r471-r1600-r942-r194+r148+r1254+r359-r1569+r174-r648+r1265-r193+r202+2.0*r203-r1507+2.0*r179-r999+r328;
}
	R[77] =	       -r312-r338-r310-r308-2.0*r313-r333-r302-r704-r291-r314-r303-r315-r304-r700-r346-r339+r331-r311-r305+r294-r309+r316-r687-r702+r336-r306-r297-r688+r337-r698+r723-r307;
	R[78] =	       -r107-r292-r295+r296-r298-r316-r317-r318-r319-r320-r321-r334+r341-r699-r701-r703-r705;
	R[79] =	       -r681+r684+r686;
{
 double MapleGenVar2 = 0.67*r1509+0.67*r1511+r714-r1246-r23-r1418-r253-r802+0.3*r124+r165+0.35*r230+r425-r684-r384+0.67*r1512-r1570-r278+r125+r409-r970+0.67*r1526+r430-r1660+r790-r1601+0.5*r114+0.2*r117+r255+0.67*r1523-r1000+r717+r104+r777+0.67*r1513-r365-2.0*r24+r302+2.0*r484-r1030-r387+2.0*r406-r108-r1220+r231+r410-r299+0.67*r1527-r685+2.0*r291+0.67*r1514;      double MapleGenVar1 = 0.67*r1501-r1539-r859-r832+r227+r780+r786+0.67*r1502-r943-r237+0.67*r1515-r214-r36+2.0*r292-r240+r142+r789+0.67*r1528+0.67*r1522-r738-r456+r90-0.33*r1508+r795+r739-r746+0.67*r1516+r776-r111-r686-r1276+r424-r28+0.67*r1503+r221-r916+r779+r339-r103-r1142-r1741+r121+0.67*r1510-r1630+0.67*r1517+0.67*r1524-r49-r38+0.67*r1529+r775+r149+MapleGenVar2;      MapleGenVar2 = r407-r294-r271+r792-r1478+0.67*r1504-r112-r722-r1117-r1167+r774+r782+0.67*r1518-2.0*r50-2.0*r102-r228-r265+0.67*r1530-r238-r1305+r794-r298+r715+r773-r448+r170+r740+r295-r300+0.67*r1505+0.67*r1519+r784+r783+r453+r185+r483+r101-r297-r1058+r463+r371-r1449+r781-r719+r404+r145-r753-r51+0.3*r418-r366+r419;
	R[80] =	            0.67*r1531+r500+r788-r502+r503+r505+r510-r1088-r1690-r1389+0.67*r1521+MapleGenVar1+MapleGenVar2+r144-r296+r405+0.5*r186-r1194-r474+r489+r791-r452+r742+r181-r449+r194+r796+r785+r167+r392+0.67*r1506-r239+r787+r166+r52+r184-r748+0.67*r1525+r450+r178+r197+r488+0.25*r495+r87+0.67*r1507-r887+r446+r793+0.85*r412+r778+0.67*r1520-r340;
	}
R[81] =	       -r1614-r1643-r1012+r1231-r277-r1129+r1224-r278+r1235+r464-r764+r1222+r1225-r1583-r273-r899+r1220-r279+r377+r1236-r1289-r274-r1754+r1226-2.0*r280-r1673+r1219+r237+r1237-r1431-r1259-r1178+r378+r1238-r1344+r1233+r1227-r721-r1462-r1041-r276-r1491-r1552-r815+r1239-r982+r379+r1228-r928+r1217+r1221-r955+r1240+r1223+r283-r163-r1070-r275+r1229-r844+r1241-r1154+r1218-r1207-r207-r1371-r1100-r1521-r1402-r1703-r1725+r1242+r489+r1234-r871+r151-r1318+r1232-r787+r1230+r143+0.5*r196;
	R[82] =	       -r266+r253+r376-r1727+r1199+r1210-r267+r1213-r1235-r790+r1200-r902-r754-r1291+r1195+r1209-r268-r1015+r1201-r279+r1214+r1197+r1189+r1202-r269-r958+r214+r1215-r1157+r738+r1190+r1203-r1494-r270+r1211-r818+r1204+r1216-r1044-r1524+r1191-r755-r1617+r152-r752-r874+r1205-r271-r847-r1757+r222-r985+r228+r1192-r1586+r238+r1206-r1434-r485-2.0*r272-r1262-r751-r1374+r483+r473+r1196-r1181+r1193-r1465+r1207+r204-r206-r1347+0.1*r502-r1676-r1103-r1404-r1706-r1073+r487+r482+r1194+2.0*r474-r767-r931-r1321+r459-r477+r1212-r1132+2.0*r478-r1646-r1555+r1208+0.5*r196-r197-r162+r1198;
	R[83] =	       -r1437-r1160-r850-r1350-r877-r1620-r821-r1527-r1730-r1135-r1649+r456-r1589-r988-r1238-r1558-r905-r1468-r461-r1496-r476-r1184-r483-r1679-r473-r1294-2.0*r479-r961-r1076-r1018-r1377-r1106-r1709-r1407-r1047-r487-r474-r486-r1760-r460-r477-r1212-r480-2.0*r478-r770-r475-r1265-r934-r793-r1323;
	R[84] =	       r820-r241+r93+r802+r824+r819+r803-r413+r825+r56+r804+r821+r805+r813+r806+r355+r807+r814-r119+r315+r818-r351+r66-r215+r426+r808-r121+r62+r815+r383+r822-r216+r809-r350+r816+r810-r382-r728+r65+r801+r799+r798+r800+r797-r349-r31+r823+r811+r95+r812-r120-r400+r817;
	R[85] =	       r332-r342-r956+r146+r712-r1345-r724-r1319-r343-r1615-r344-r765-r1130-r872-r341-r1584-r1755-r345-r1522-r725+r224-r1233+r351-r1432-r346+r339-r1260-r1179-r900-r1463-r1644+r713-r347-r1492+r350+r1408-r1553-r726-r816-r1013-2.0*r348-r929-r1674-r1290-r1372-r788+r1398+r1399+r1388+r1400+r1397+r1390+r1383+r1386+r1393+r1387+r1395+r1391+r1384+r1392-r1101+r1385+r1396+r1394+r1389+r1401+r1402+r1403+r1404+r1405+r1406+r1407+r1409+r1410-r1704-r1071+r188+r360-r727-r983-r1042+r1382-r845-r1155-r1208;
	R[86] =	       r716+r718-r720+r721+r722;
	R[87] =	       r153+r836-r863-r1746+r849+0.7*r124-r33-2.0*r43+r831+0.5*r225-r1199+r837-r254+2.0*r57+r850-r757+0.2*r289-r242-r1147+r46+r851+r56-r921+r838-r1225-r1513-r243-r219+r852+r839+r256+r299+r826-r70+r835+r832+r853-r780-r891-r220+r840-r1606-r37+r81-r1423-r1035-r388-r36+r827-r1122-r401-r947+r841-r807-r1364-r711+r709-r71+r233-r54-r1170-r389+r346-r103+r848+r828+r842+r407-r411+r847+r833+r843-r1575+r68+r846-r1483+r829+r63+r448-r217-r1310-r1005-r974+r427-r41+r844-r1665-r51-r1695-r1635-r1093-r1394-r1544+0.5*r186+r192-r229-r218-r1251+r64+r834+r98-r1454-r42+r845+r428-r723+r67-r1281-r196-r1337-r1063-r412+r830;
	R[88] =	       r1614+r288+r1611+r1309-r875-r1133-r819-r1210-r236+r254+0.25*r289+r1595+r1325+r1311+r1301+r1603-r1728+r285+r1601+r1605+r1319-r986+r1598-r290+r1307+r1299+r1615-r1495+r1315+r1624+r1308+r1620+r1596-r1236+r1599-r903+r1302+r1317-r1158+r1606+r1622-r1292+r1326+r287+r1616-r1045+r1303+r1597-r1182+r1312+r1602-r1016+r1320-r848+r1621+r1607+r1322+r1617-r959+r1613+r1304+r1314-r282-r252+r1610-r1647+r1594+r1327+r1305-r283+r217-r1758+r1310+r1300-r768-r1587+r1313-r1348-r1677+r1316-r286-r932-r223+r1619+r1306+r1612+r510-r1074+r1609-r1375-r1104-r1405-r1707-r1263+r229-r791-r1435+r1321+r1600+r1604+r1608+r1318-r284-r1466-r1525+r1324-r1556+r1323+r1623;
	R[89] =	       -r901-r1726-r165+r1275+r1291-r1523-r1209+r1282-r957+r1289+r1283+r1292-r789+r1280-r1616+r1270+r155+r1276+r1288-r1756-r1320+r1287+r1293+r1296-r1585+r1284+r1271-r1156-r1433-r1131-r251-r1261-r1180-r846+r1272+r1285-r1464+r1279+r1277+r1298-r1554+r1294-r1346+r1290-r1493+r1273-r1072+r503+r507-r1102-r1403-r1705-r766-r984-r1234-r1043-r930+r1295-r873+r148+r284+r1274-r164-r1675+r1297+r1278-r1373+r1281-r1014-r1645-r817+r1286;
	R[90] =	       -r1509+r863-r944+r875+r861-r888-r803-r1419-r230+r864+r69+r876+r708-r114+0.8*r117-r255-r1195+r865-r1247-r53+r372-r1571+r877+r860-r971+r47+r866+r859-r1360+r741+r878+r872+r232-r115-r1059-r37-r25+r879+r854+r867-r739-r776-r1602-r1540+r458-r113-r28+r855-r221-r54-r1031+r82+r880+r868+r862-r1691-r1001+r874+r856-r222+r102+r869-r833+0.8*r128-r1221-r1742+r68-r917+r173+r63+r857-r1479-r1277-r1118+r116-r1168-r55+r707+0.15*r127-r1661-r457-r1143+0.7*r418+r870+r858-r1306-r208+0.9*r502-r1390-r1089-r1631+0.5*r187-r462+r195+r871+r873+0.2*r123+r52-r1333-r1450-r491+r154+r340;
	R[91] =	       r1547+r1537+r1548+r1560+r1535+r1538+r1533+r1549+r1539+r1532+r1561+r1550+r1546+r1540+r1551+r1558+r1562+r1552+r1541+r1534+r1553+r1536+r1542+r1554+r1544+r494+r1559+0.33*r498+r1557+r1545+r1543+r1555-r496-r495+r1556;
	R[92] =	       r1568+r1570+r1566+r1571+r1583+r1572+r1584+r1590+r1589+r1573+r1574+r1585+r1581+r1567+r1586+r1575+r1563+r1580+r1591+r1576+r1587+r1579+r1564-r497+r1578+r1582+r1592+r1593+r490+r1577+0.67*r498+r1588+r1569-r493+r1565+0.75*r495;
	R[93] =	       -r989-r1266-r1161-r1213-r851-r935-r1650-2.0*r484-r1761-r1497-r1469-r878-r1731-r1590-r1528-r1136-r1185-r458-r771-r1621-r822+r467-r1239-r1438-r1408-r794-r906-r483-r1710-r1048+r457-r1077-r1107-r1378-r481-r482-r1680-r1295-r1559-r962-r1019-r466-r1324-r488-r1351;
	R[94] =	       -r464-r465+r466-r467-r468+r469+r472-r499;
	R[95] =	       r468-r469-r470;
	R[96] =	       -r107-r1252-r837+r386-r864-r1311-r34-r1200+r1345+r1334+r1359+r333+r365-r1282-r729+r1350-r354+r1336+r1330+r1341-r1484-2.0*r403-r1666-r35-r1006+r364-r1514+r1360+r126+r1381-r1226+r361-r355-r414-r74+r334+r1353+r1358+r1365+r1335+r1364+r1340-r892-r1424+r1329-r1455+r1332+r1344-r1171-r356-r948+r1349-r109-r808-r1123-r1607+r1357+r1352+r1370-r357-r1064-r415-r390-2.0*r72-r83+r362-r1747-r922-r122-r110-r1576+r1374-r106-r358+r1346+r1348-2.0*r402+r1343+r363+r366+r1372+r1363+r1347+r1380+r1379+r1371-r1094+r1375-r1395-r1696+r1369+r1377+r1378-r1718+r1328-r1636+r1356+r1339+r1362+r1354+r1376+r1361-r975+r1367+r1368+r1333-r1545+r1373+r174+r1331+r1355+r1366+r1342+r1351+r1337;
	R[97] =	       -r1231+r919-r1752-r211+r923+r913+0.55*r289-r125+r935+r921-r1176+r924-r1257+r914-r1039-r980+r911+r909-r1641+r925-r1489-r813-r126-r1460+r915-r257+r191+r936-r762-r1550+r926+r258-r897+r933+r920+r916+r937-r1287+r927-r842-r1152-r1205-r385-r1581+0.5*r234+r928-r869+0.1*r128+r917+r938-r1010+r922-r1671+r910+r912-r1519+r929+r84-r1068-r1316+r918+r932-r419-r1612-r953-r1701-r1400-r1099-r1369-r1723+r235-r1127+0.67*r394+r931+r930-r785-r1429+r86-r87+r934;
	R[98] =	       r901-r124+r888+r69-r1451-r1603-r1420-r945-r804+r889+r902-r1032-r1334-r1222-r1307-r777+r884+r899-r756+r890-r860-r256-r410+r903-r76-r1572+r886-r1632+r891-r74-r1248+r904+r892+r897-r972-r233+r898+r893+r103+r905-r1510-r38-r26+r62+r900-r1662-r385+r894+r112-r1541+0.1*r128+r881+r906+r710+r908-r27+r895-r75-r417-r1743+r391+0.85*r127-r1692-r1196-r416+r882-r918-r1480-r418+r158-r1060-r1090-r1391-r1119+r189-r1144+r907+r64-r1361-r123-r834+r85-r480-r1278+r883+r887-r1002-r1169-2.0*r73+r896+r885;
	R[99] =	       r1659+r1660+r1663+r1666+r1654+r1673+r1669+r1657+r1668+r1662+r1664+r1653+r1656+r1658+r1671+r1679+r1674+r1661+r1672+r1677+r1665+r1681-r511+r1676+r1682+r1678+r1670+r1667+r1683+r1680+r1655+r1675;
	R[100] =	       -r1470+r1643-r1186+r1637-r963-r1325-r1439+r1650-r1560-r990+r1642-r852-r1214+r1628+r1648+r1641+r508+r1638+r1632+r1649-r936-r1622-r879-r1732-r795+r1651+r1630-r1137-r1296-r1529+r1625-r1762+r1647-r1352+r1639+r1644-r1020+r1627+r1633-r1240-r1591+r1640-r1681+r504-r505+r1635-r506-r507+r509-r1078-r1379-r1108-r1409-r1711+r1629-r1267+r1631+r1634+r1636+r1626-r823-r1049-r907+r1652-r1498+r1646+r1645;
	R[101] =	       -r1511-r919+r944-r861+r956+r963+r89+0.5*r114+r945-r889-r1663-r29-r1421-r1308+r373+r957-r805-r835+r946-r1197-r232+r943+r941+r958+r947-r1335-r90-r1573-r1452+r964+r948+r118+r959-r1249-r1033+r949-r973+r960+r955-r91+r965-r1633-r1279-r1223+r950-r1145-r116-r1542+r954+r961+r951+r953-r209-r1091-r1693-r1392-r1716+r156+r952+0.5*r187-r1061+0.33*r394-r1362+r942-r1604+r939+r380+r962-r1481+r940-r1744-r1003-r1120-r778+r129;
	R[102] =	       -r836-r210+r989-r1309-r1146+r979-r1224-r1512-r89+r970+r976-r1605-r117+r990+r986+r381-r1336-r53-r1062-r231-r890+r980+r968-r946+r971-r1121-r1422-r1004-r806+r991+r967-r1280+r988+r981+r972-r920+r992-r779-r118-r30-r49-r1574-r862+r978+r982+r973-r1664+r985-r1034-r88+r157-r1250-r1453+r974+r987+r977-r1363-r1694-r1092-r1393-r1745-r1717-r1634+r984+r969+r374+r983+r966+r975-r1482-r1543-r1198;
	R[103] =	       -r1611+r1012-r93-r979+r1008-r1256-r384-r59-r1175+r1000-r1488+r1015-r1315-r1459+r1021-r1549-r420-r244+r1006-r92+r1004+r998-r48-r401+r1009-r926-r841-r1151-r224+r1016-r1204-r246-r868+r1001-r1038+r993-r1518+r1020-r58-r421+r1010-r1580+r1013-r784+r1017+r996+r1005+r994+r1022+r65-r1640+r997+r1018-r1067-r1399-r1700-r1098-r1670-r1722+r443-r1126-r952+r1011-r1428-r761-r1751+r1019-r1368+r1003+r995-r1230+r67-r812+r1014-r1342+r1002+r999-r1286+r1007-r896;
	R[104] =	       -r422-r1174-r226-r225-r425+r79-r429-r1487-r1548+r1024-r760-r1458+r1032+r1030+r1039-r1341-r60+r1029-r925+r1037-r840+r1035-r1150-r245-r1009-r1203-r61+r1045-r867-2.0*r444+r1026-r424+r1050+r66-r1669-r94+r1031-r426+r1041+r1044-r1517-r1314-r1610-r978-r1639+r1038+r1023-r247+r1033+r1034-r1750+r122+r448-r1285-r1255+r1046-r1427+r1028-r783-r895+r1027-r1229+r1040+r1048-r427-r1579-r1125-r951-r1398-r1699-r1097-r1721+r1047+r1051+r1043-r423-r811+r1049-r95+r1036-r1066-r1367+r1042+r442+r42+r441-r428-r400+r1025+r447;
	R[105] =	       -r1547-r1486+r1133+r1129-r1457-r1008+r1111+r1134-r924+r1112-r40-r839-r410+r1113-r1149+r1121-r866+r1135-r76-r1638-r227-r1037-r1202+r1130+r1114-r1749+r1122+r1136-r1065+r1115-r258-r1340-r1516+r100+r1128-r71-r1668+r1123+r1137-r1284+r1116-r78-r1173-r894+r1131+r1117-r782-r1426-r1228+r1124+r1138-r950+r1118-r110-r810-r248-r101-r1313+r1125+r1139-r393-r977-r1578-r1397-r1609-r1096-r1698-r1720-r235+r1119+r1127+r1126-r394+r1132-r1254-r454-r759+r160+r1120-r1366;
	R[106] =	       r1109+r1110-r1753-r99-r1642-r1430-r213-r1177-r1258-r1317-r786-r1461-r1490-r431-r814-r981-r100+r113-r1551-r1128-r1288-r898-r927-r1613-r1370-r763-r128-r843-r1153-r1206-r1040-r954-r97-r1672-r1343-r870+r1081+r1082+r1083+r1084+r1085+r1086+r1087+r1088+r1089+r1090+r1091-r1582+r1092+r1093+r1094+r1095+r1096+r1097+r1098+r1099+r1100+r1101-r1702+r1102+r1103+r1104+r1105+r1106+r1107+r1108-r1401-r1724-r1011+0.8*r123-r1232-r98-r1069-r1520-r129;
	R[107] =	       -r1456+r1053-r923+r79-r1637-r1172-r1748-r430-r976-r838-r96-r212-r865-r1148+r1062-r1201-r70-r758-r1283+r115+r1059-r1515-r1365+r1065+r1054-r1546-r1312-r1227-r893-r109-r1253-r1425-r78-r949+r1064-r809-r234-r1124-r39-r250-r1485+r1057+r1070-r55-r75+r1058-r127+r97+r1068-r781+r159+r1075+r1072+r1076+r1060+r1067+r1074+r1077+r1078+r1079+r1080-r1095-r1396-r1697-r1667-r1719+r1073+r1061+r1071+r1055+r1056-r1339-r1608-r1036-r1577-2.0*r77+r1066-r392+r1052+r193+r1063+r1069-r249-r1007;
	R[108] =	       r1437+r1418+r1419-r386+r1439+r1420+r387+r1421+r1430+r1422+r1423+r1431+r1440+r438+r1424+r1432+r1425+r437+r1433+r1426+r1441+r1438-2.0*r451-r448+r1434+r1427-r436+r1436+r1411+r1412+r1413+r1414+r1415+r1416+r1417-r452+r1435-r449+r1428-r442+r1429-r441-r450-r446-r445-r447;
	R[109] =	       -r820-r1159-r849+r1486+r1499+r1487-r876-r1526-r1134+r1500+r1488+r1473+r1495-r1729-r1264+r1484+r403+r1497-r1183+r1474-r1648+r1489+r397+r1475-r1237-r904+r1476+r1490+r1494-r933-r1211-r1349+r1477-r1293+r1491-r1322+r455+r398-r792-r437+r1478-r960+r1492+r1485+r1496-r1467+r1483+r1479-r1046-r1017-r769+r1480+r1493-r1619-r987-r1075-r1436-r1678-r1105-r1708-r1406-r443-r1759-r1376+r1481+r1498+r1482-r1557-r1588;

}
