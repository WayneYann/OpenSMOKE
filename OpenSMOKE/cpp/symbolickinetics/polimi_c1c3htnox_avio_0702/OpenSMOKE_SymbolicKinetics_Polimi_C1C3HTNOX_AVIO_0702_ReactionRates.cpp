/***************************************************************************
 *   Copyright (C) 2003-2008 by                                            *
 *   Alberto Cuoci		                                                   *
 *   alberto.cuoci@polimi.it                                               *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#include "symbolickinetics/polimi_c1c3htnox_avio_0702/OpenSMOKE_SymbolicKinetics_Polimi_C1C3HTNOX_AVIO_0702.h"

void OpenSMOKE_SymbolicKinetics_Polimi_C1C3HTNOX_AVIO_0702::giveReactionRates(double cTot, BzzVector &c, BzzVector &R) 
{
	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR THIRD BODY REACTIONS ===== 
	// ============================================================ 
	coeffM3 =	       cTot+17.0*c[4]+0.15E1*c[3]+0.26*c[1]-1.0*c[2]+0.2*c[5]+0.14E1*c[6];
	coeffM9 =	       cTot+0.15E1*c[3]+11.0*c[4]+0.9*c[5]+0.28E1*c[6];
	coeffM10 =	       cTot+0.15E1*c[3]+11.0*c[4]+0.9*c[5]+0.28E1*c[6];
	coeffM11 =	       cTot+15.0*c[4]+1.0*c[3]+0.9*c[6];
	coeffM14 =	       cTot+1.0*c[3]+5.0*c[4]+1.0*c[8]+0.5*c[5]+1.0*c[6]+2.0*c[9];
	coeffM15 =	       cTot;
	coeffM18 =	       cTot+11.0*c[4]+1.0*c[3]+0.5*c[5]+1.0*c[6];
	coeffM23 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM24 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM25 =	       cTot+5.0*c[4]+2.0*c[9]+1.0*c[8]+0.5*c[5];
	coeffM30 =	       cTot;
	coeffM31 =	       cTot;
	coeffM33 =	       cTot;
	coeffM34 =	       cTot;
	coeffM36 =	       cTot;
	coeffM81 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM82 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM84 =	       cTot;
	coeffM85 =	       cTot;
	coeffM86 =	       cTot;
	coeffM130 =	       cTot;
	coeffM141 =	       cTot+15.0*c[4]+0.28E1*c[6]+0.15E1*c[3]+0.9*c[5];
	coeffM142 =	       cTot+15.0*c[4]+0.28E1*c[6]+0.15E1*c[3]+0.9*c[5];
	coeffM143 =	       cTot;
	coeffM144 =	       cTot;
	coeffM161 =	       cTot+0.18E1*c[8]+4.0*c[4]+2.0*c[6]+0.9*c[3]+0.9*c[5];
	coeffM162 =	       cTot;
	coeffM163 =	       cTot;
	coeffM165 =	       cTot;
	coeffM229 =	       cTot;
	coeffM295 =	       cTot;
	coeffM316 =	       cTot+19.0*c[43]+2.0*c[4]+3.0*c[13];
	coeffM336 =	       cTot;
	coeffM406 =	       cTot;
	coeffM452 =	       cTot;
	coeffM491 =	       cTot;
	coeffM492 =	       cTot;
	coeffM503 =	       cTot+0.7*c[1]+0.5*c[2]+9.0*c[4];
	coeffM504 =	       cTot;
	coeffM506 =	       cTot+0.31E1*c[4]+0.25*c[3];
	coeffM521 =	       cTot;
	coeffM547 =	       cTot+0.5*c[1];
	coeffM572 =	       cTot+0.5*c[1];
	coeffM587 =	       cTot;
	coeffM636 =	       cTot+0.7*c[1]+0.4*c[2]+11.0*c[4]+2.0*c[6];


	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR FALL OFF REACTIONS ======= 
	// ============================================================ 
	CFO3 =	       coeffM3/(1.0+k3*coeffM3/kFallOff3);
	CFO14 =	       coeffM14/(1.0+k14*coeffM14/kFallOff14);
	CFO18 =	       coeffM18/(1.0+k18*coeffM18/kFallOff18);
	CFO23 =	       coeffM23/(1.0+k23*coeffM23/kFallOff23);
	CFO24 =	       coeffM24/(1.0+k24*coeffM24/kFallOff24);
	CFO25 =	       coeffM25/(1.0+k25*coeffM25/kFallOff25);
	CFO81 =	       coeffM81/(1.0+k81*coeffM81/kFallOff81);
	CFO82 =	       coeffM82/(1.0+k82*coeffM82/kFallOff82);
	CFO84 =	       coeffM84/(1.0+k84*coeffM84/kFallOff84);
	CFO85 =	       coeffM85/(1.0+k85*coeffM85/kFallOff85);
	CFO86 =	       coeffM86/(1.0+k86*coeffM86/kFallOff86);
	CFO143 =	       coeffM143/(1.0+k143*coeffM143/kFallOff143);
	CFO144 =	       coeffM144/(1.0+k144*coeffM144/kFallOff144);
	CFO162 =	       coeffM162/(1.0+k162*coeffM162/kFallOff162);
	CFO336 =	       coeffM336/(1.0+k336*coeffM336/kFallOff336);
	CFO406 =	       coeffM406/(1.0+k406*coeffM406/kFallOff406);
	CFO504 =	       coeffM504/(1.0+k504*coeffM504/kFallOff504);


	lnPr3 =	       log(k3*coeffM3/kFallOff3);
	lnPr14 =	       log(k14*coeffM14/kFallOff14);
	lnPr23 =	       log(k23*coeffM23/kFallOff23);
	lnPr24 =	       log(k24*coeffM24/kFallOff24);
	lnPr25 =	       log(k25*coeffM25/kFallOff25);
	lnPr82 =	       log(k82*coeffM82/kFallOff82);


	wF3 =	pow(10.0, logFcent3/(1.0+BzzPow2((0.434294481903*lnPr3-0.40-0.67*logFcent3)/(0.806-0.0608012274665*lnPr3-1.1762*logFcent3)))); 
	wF14 =	pow(10.0, logFcent14/(1.0+BzzPow2((0.434294481903*lnPr14-0.40-0.67*logFcent14)/(0.806-0.0608012274665*lnPr14-1.1762*logFcent14)))); 
	wF18 =	1.00; 
	wF23 =	pow( logFcent23 , 1.0/(1.0+0.18861169701161387*lnPr23*lnPr23)); 
	wF24 =	pow(10.0, logFcent24/(1.0+BzzPow2((0.434294481903*lnPr24-0.40-0.67*logFcent24)/(0.806-0.0608012274665*lnPr24-1.1762*logFcent24)))); 
	wF25 =	pow(10.0, logFcent25/(1.0+BzzPow2((0.434294481903*lnPr25-0.40-0.67*logFcent25)/(0.806-0.0608012274665*lnPr25-1.1762*logFcent25)))); 
	wF81 =	1.00; 
	wF82 =	pow(10.0, logFcent82/(1.0+BzzPow2((0.434294481903*lnPr82-0.40-0.67*logFcent82)/(0.806-0.0608012274665*lnPr82-1.1762*logFcent82)))); 
	wF84 =	1.00; 
	wF85 =	1.00; 
	wF86 =	1.00; 
	wF143 =	1.00; 
	wF144 =	1.00; 
	wF162 =	1.00; 
	wF336 =	1.00; 
	wF406 =	1.00; 
	wF504 =	1.00; 


	coeffFallOff3 =	       CFO3*wF3;
	coeffFallOff14 =	       CFO14*wF14;
	coeffFallOff18 =	       CFO18*wF18;
	coeffFallOff23 =	       CFO23*wF23;
	coeffFallOff24 =	       CFO24*wF24;
	coeffFallOff25 =	       CFO25*wF25;
	coeffFallOff81 =	       CFO81*wF81;
	coeffFallOff82 =	       CFO82*wF82;
	coeffFallOff84 =	       CFO84*wF84;
	coeffFallOff85 =	       CFO85*wF85;
	coeffFallOff86 =	       CFO86*wF86;
	coeffFallOff143 =	       CFO143*wF143;
	coeffFallOff144 =	       CFO144*wF144;
	coeffFallOff162 =	       CFO162*wF162;
	coeffFallOff336 =	       CFO336*wF336;
	coeffFallOff406 =	       CFO406*wF406;
	coeffFallOff504 =	       CFO504*wF504;


	// ============================================================ 
	// ===== REACTION RATES FOR THIRD BODY REACTIONS (Flat) ======= 
	// ============================================================ 
	rFlat3 =	       (c[2]*c[43]-c[46]*uK3)*k3;
	rFlat9 =	       (c[3]-c[43]*c[43]*uK9)*k9;
	rFlat10 =	       (c[2]-c[45]*c[45]*uK10)*k10;
	rFlat11 =	       (c[43]*c[44]-c[4]*uK11)*k11;
	rFlat14 =	       (c[44]*c[44]-c[7]*uK14)*k14;
	rFlat15 =	       (c[44]*c[45]-c[46]*uK15)*k15;
	rFlat18 =	       (c[5]*c[45]-c[6]*uK18)*k18;
	rFlat23 =	       (c[43]*c[48]-c[8]*uK23)*k23;
	rFlat24 =	       (c[48]*c[48]-c[9]*uK24)*k24;
	rFlat25 =	       (c[43]*c[49]-c[9]*uK25)*k25;
	rFlat30 =	       (c[13]-c[43]*c[52]*uK30)*k30;
	rFlat31 =	       (c[14]-c[43]*c[53]*uK31)*k31;
	rFlat33 =	       (c[10]-c[43]*c[54]*uK33)*k33;
	rFlat34 =	       (c[15]-c[43]*c[54]*uK34)*k34;
	rFlat36 =	       (c[16]-c[52]*c[52]*uK36)*k36;
	rFlat81 =	       (c[13]*c[43]-c[53]*uK81)*k81;
	rFlat82 =	       (c[14]*c[43]-c[49]*uK82)*k82;
	rFlat84 =	       (c[15]*c[43]-c[56]*uK84)*k84;
	rFlat85 =	       (c[10]*c[43]-c[50]*uK85)*k85;
	rFlat86 =	       (c[10]*c[43]-c[56]*uK86)*k86;
	rFlat130 =	       (c[14]-c[3]*c[13]*uK130)*k130;
	rFlat141 =	       (c[22]-c[3]*c[5]*uK141)*k141;
	rFlat142 =	       (c[22]-c[43]*c[47]*uK142)*k142;
	rFlat143 =	       (c[23]-c[44]*c[48]*uK143)*k143;
	rFlat144 =	       (c[23]-c[43]*c[64]*uK144)*k144;
	rFlat161 =	       (c[47]-c[5]*c[43]*uK161)*k161;
	rFlat162 =	       (c[67]-c[22]*c[43]*uK162)*k162;
	rFlat163 =	       (c[64]-c[22]*c[43]*uK163)*k163;
	rFlat165 =	       (c[66]-c[5]*c[48]*uK165)*k165;
	rFlat229 =	       c[45]*c[48]*k229;
	rFlat295 =	       (c[48]-c[43]*c[69]*uK295)*k295;
	rFlat316 =	       (c[63]-c[69]*uK316)*k316;
	rFlat336 =	       (c[25]-c[5]*c[69]*uK336)*k336;
	rFlat406 =	       (c[54]*c[54]-c[27]*uK406)*k406;
	rFlat452 =	       (c[30]-c[43]*c[73]*uK452)*k452;
	rFlat491 =	       (c[35]-c[34]*c[43]*uK491)*k491;
	rFlat492 =	       (c[35]-c[1]*c[44]*uK492)*k492;
	rFlat503 =	       (c[32]*c[45]-c[33]*uK503)*k503;
	rFlat504 =	       (c[32]*c[44]-c[36]*uK504)*k504;
	rFlat506 =	       (c[32]*c[43]-c[31]*uK506)*k506;
	rFlat521 =	       (c[75]-c[31]*c[43]*uK521)*k521;
	rFlat547 =	       (c[79]-c[5]*c[76]*uK547)*k547;
	rFlat572 =	       (c[39]-c[5]*c[74]*uK572)*k572;
	rFlat587 =	       (c[80]-c[37]*c[43]*uK587)*k587;
	rFlat636 =	       (c[34]-c[1]*c[45]*uK636)*k636;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY REACTION ==================== 
	// ============================================================ 
	r1 =	       (c[2]*c[43]-c[44]*c[45]*uK1)*k1;
	r2 =	       (c[3]*c[45]-c[43]*c[44]*uK2)*k2;
	r3 =	       rFlat3*coeffFallOff3;
	r4 =	       (c[2]*c[2]*c[43]-c[2]*c[46]*uK4)*k4;
	r5 =	       (c[44]*c[46]-c[2]*c[4]*uK5)*k5;
	r6 =	       (c[43]*c[46]-c[44]*c[44]*uK6)*k6;
	r7 =	       (c[45]*c[46]-c[2]*c[44]*uK7)*k7;
	r8 =	       (c[44]*c[44]-c[4]*c[45]*uK8)*k8;
	r9 =	       rFlat9*coeffM9;
	r10 =	       rFlat10*coeffM10;
	r11 =	       rFlat11*coeffM11;
	r12 =	       (c[43]*c[46]-c[2]*c[3]*uK12)*k12;
	r13 =	       (c[46]*c[46]-c[2]*c[7]*uK13)*k13;
	r14 =	       rFlat14*coeffFallOff14;
	r15 =	       rFlat15*coeffM15;
	r16 =	       (c[2]*c[5]-c[6]*c[45]*uK16)*k16;
	r17 =	       (c[2]*c[47]-c[5]*c[46]*uK17)*k17;
	r18 =	       rFlat18*coeffFallOff18;
	r19 =	       (c[5]*c[44]-c[6]*c[43]*uK19)*k19;
	r20 =	       (c[5]*c[44]-c[6]*c[43]*uK20)*k20;
	r21 =	       (c[5]*c[46]-c[6]*c[44]*uK21)*k21;
	r22 =	       (c[4]*c[5]-c[3]*c[6]*uK22)*k22;
	r23 =	       rFlat23*coeffFallOff23;
	r24 =	       rFlat24*coeffFallOff24;
	r25 =	       rFlat25*coeffFallOff25;
	r26 =	       (c[43]*c[50]-c[3]*c[10]*uK26)*k26;
	r27 =	       (c[43]*c[50]-c[11]*uK27)*k27;
	r28 =	       (c[12]-c[48]*c[49]*uK28)*k28;
	r29 =	       (c[12]-c[43]*c[51]*uK29)*k29;
	r30 =	       rFlat30*coeffM30;
	r31 =	       rFlat31*coeffM31;
	r32 =	       (c[15]-c[48]*c[52]*uK32)*k32;
	r33 =	       rFlat33*coeffM33;
	r34 =	       rFlat34*coeffM34;
	r35 =	       (c[11]-c[48]*c[53]*uK35)*k35;
	r36 =	       rFlat36*coeffM36;
	r37 =	       (c[17]-c[52]*c[53]*uK37)*k37;
	r38 =	       (c[18]-c[48]*c[50]*uK38)*k38;
	r39 =	       (c[19]-c[43]*c[55]*uK39)*k39;
	r40 =	       (c[19]-c[48]*c[56]*uK40)*k40;
	r41 =	       (c[53]*c[53]-c[20]*uK41)*k41;
	r42 =	       (c[13]*c[14]-c[20]*uK42)*k42;
	r43 =	       (c[20]-c[3]*c[17]*uK43)*k43;
	r44 =	       (c[3]*c[13]-c[43]*c[53]*uK44)*k44;
	r45 =	       (c[3]*c[14]-c[43]*c[49]*uK45)*k45;
	r46 =	       (c[43]*c[57]-c[13]*c[13]*uK46)*k46;
	r47 =	       c[48]*c[51]*k47;
	r48 =	       c[48]*c[48]*k48;
	r49 =	       c[48]*c[54]*k49;
	r50 =	       (c[8]*c[13]-c[48]*c[53]*uK50)*k50;
	r51 =	       c[8]*c[14]*k51;
	r52 =	       c[49]*c[51]*k52;
	r53 =	       c[49]*c[53]*k53;
	r54 =	       c[49]*c[58]*k54;
	r55 =	       (c[13]*c[13]-c[52]*c[53]*uK55)*k55;
	r56 =	       (c[13]*c[14]-c[53]*c[53]*uK56)*k56;
	r57 =	       (c[43]*c[57]-c[3]*c[16]*uK57)*k57;
	r58 =	       (c[43]*c[57]-c[17]*uK58)*k58;
	r59 =	       (c[43]*c[59]-c[13]*c[14]*uK59)*k59;
	r60 =	       (c[43]*c[59]-c[3]*c[17]*uK60)*k60;
	r61 =	       (c[10]*c[13]-c[50]*c[52]*uK61)*k61;
	r62 =	       (c[9]*c[13]-c[49]*c[53]*uK62)*k62;
	r63 =	       (c[11]*c[13]-c[50]*c[53]*uK63)*k63;
	r64 =	       (c[13]*c[16]-c[52]*c[57]*uK64)*k64;
	r65 =	       (c[13]*c[17]-c[52]*c[59]*uK65)*k65;
	r66 =	       (c[13]*c[17]-c[53]*c[57]*uK66)*k66;
	r67 =	       (c[14]*c[14]-c[49]*c[53]*uK67)*k67;
	r68 =	       (c[11]*c[14]-c[49]*c[50]*uK68)*k68;
	r69 =	       c[53]*c[58]*k69;
	r70 =	       c[53]*c[55]*k70;
	r71 =	       c[54]*c[54]*k71;
	r72 =	       c[50]*c[50]*k72;
	r73 =	       c[50]*c[54]*k73;
	r74 =	       c[50]*c[58]*k74;
	r75 =	       c[50]*c[55]*k75;
	r76 =	       c[58]*c[58]*k76;
	r77 =	       c[55]*c[58]*k77;
	r78 =	       (c[20]*c[20]-c[58]*c[59]*uK78)*k78;
	r79 =	       c[10]*k79;
	r80 =	       c[15]*k80;
	r81 =	       rFlat81*coeffFallOff81;
	r82 =	       rFlat82*coeffFallOff82;
	r83 =	       (c[54]-c[21]*c[43]*uK83)*k83;
	r84 =	       rFlat84*coeffFallOff84;
	r85 =	       rFlat85*coeffFallOff85;
	r86 =	       rFlat86*coeffFallOff86;
	r87 =	       (c[51]-c[11]*c[43]*uK87)*k87;
	r88 =	       (c[51]-c[60]*uK88)*k88;
	r89 =	       (c[60]-c[14]*c[48]*uK89)*k89;
	r90 =	       (c[60]-c[11]*c[43]*uK90)*k90;
	r91 =	       (c[57]-c[16]*c[43]*uK91)*k91;
	r92 =	       (c[57]-c[13]*c[52]*uK92)*k92;
	r93 =	       (c[59]-c[17]*c[43]*uK93)*k93;
	r94 =	       (c[59]-c[14]*c[52]*uK94)*k94;
	r95 =	       (c[59]-c[13]*c[53]*uK95)*k95;
	r96 =	       (c[58]-c[20]*c[43]*uK96)*k96;
	r97 =	       (c[61]-c[58]*uK97)*k97;
	r98 =	       (c[61]-c[14]*c[53]*uK98)*k98;
	r99 =	       (c[61]-c[20]*c[43]*uK99)*k99;
	r100 =	       c[61]*k100;
	r101 =	       (c[55]-c[10]*c[48]*uK101)*k101;
	r102 =	       (c[48]*c[48]-c[43]*c[49]*uK102)*k102;
	r103 =	       (c[48]*c[53]-c[43]*c[50]*uK103)*k103;
	r104 =	       (c[15]*c[43]-c[13]*c[48]*uK104)*k104;
	r105 =	       (c[21]*c[62]-c[16]*c[43]*uK105)*k105;
	r106 =	       (c[54]*c[62]-c[16]*c[43]*c[43]*uK106)*k106;
	r107 =	       (c[54]*c[63]-c[17]*c[43]*uK107)*k107;
	r108 =	       (c[21]*c[48]-c[17]*c[43]*uK108)*k108;
	r109 =	       c[54]*c[58]*k109;
	r110 =	       c[54]*c[55]*k110;
	r111 =	       c[8]*c[48]*k111;
	r112 =	       c[20]*c[48]*k112;
	r113 =	       c[13]*c[49]*k113;
	r114 =	       c[11]*c[49]*k114;
	r115 =	       c[20]*c[49]*k115;
	r116 =	       c[14]*c[60]*k116;
	r117 =	       c[14]*c[51]*k117;
	r118 =	       c[11]*c[51]*k118;
	r119 =	       (c[13]*c[53]-c[17]*c[43]*uK119)*k119;
	r120 =	       (c[13]*c[52]-c[16]*c[43]*uK120)*k120;
	r121 =	       (c[14]*c[52]-c[17]*c[43]*uK121)*k121;
	r122 =	       c[15]*c[52]*k122;
	r123 =	       (c[20]*c[54]-c[10]*c[59]*uK123)*k123;
	r124 =	       c[11]*c[50]*k124;
	r125 =	       c[14]*c[56]*k125;
	r126 =	       c[15]*c[56]*k126;
	r127 =	       c[14]*c[58]*k127;
	r128 =	       c[14]*c[61]*k128;
	r129 =	       c[11]*c[61]*k129;
	r130 =	       rFlat130*coeffM130;
	r131 =	       (c[9]-c[3]*c[14]*uK131)*k131;
	r132 =	       (c[11]-c[3]*c[10]*uK132)*k132;
	r133 =	       (c[11]-c[3]*c[15]*uK133)*k133;
	r134 =	       (c[12]-c[3]*c[11]*uK134)*k134;
	r135 =	       (c[17]-c[13]*c[13]*uK135)*k135;
	r136 =	       (c[17]-c[3]*c[16]*uK136)*k136;
	r137 =	       (c[18]-c[3]*c[20]*uK137)*k137;
	r138 =	       (c[14]*c[14]-c[18]*uK138)*k138;
	r139 =	       (c[11]*c[11]-c[14]*c[18]*uK139)*k139;
	r140 =	       c[10]*c[10]*k140;
	r141 =	       rFlat141*coeffM141;
	r142 =	       rFlat142*coeffM142;
	r143 =	       rFlat143*coeffFallOff143;
	r144 =	       rFlat144*coeffFallOff144;
	r145 =	       (c[24]-c[47]*c[48]*uK145)*k145;
	r146 =	       (c[2]*c[13]-c[44]*c[65]*uK146)*k146;
	r147 =	       c[2]*c[10]*k147;
	r148 =	       c[2]*c[15]*k148;
	r149 =	       (c[2]*c[8]-c[46]*c[48]*uK149)*k149;
	r150 =	       (c[2]*c[22]-c[46]*c[47]*uK150)*k150;
	r151 =	       (c[2]*c[23]-c[46]*c[64]*uK151)*k151;
	r152 =	       (c[2]*c[23]-c[46]*c[67]*uK152)*k152;
	r153 =	       (c[2]*c[14]-c[46]*c[53]*uK153)*k153;
	r154 =	       (c[2]*c[9]-c[46]*c[49]*uK154)*k154;
	r155 =	       (c[2]*c[24]-c[46]*c[66]*uK155)*k155;
	r156 =	       (c[2]*c[12]-c[46]*c[60]*uK156)*k156;
	r157 =	       (c[2]*c[12]-c[46]*c[51]*uK157)*k157;
	r158 =	       (c[2]*c[11]-c[46]*c[50]*uK158)*k158;
	r159 =	       (c[2]*c[18]-c[46]*c[58]*uK159)*k159;
	r160 =	       (c[2]*c[19]-c[46]*c[55]*uK160)*k160;
	r161 =	       rFlat161*coeffM161;
	r162 =	       rFlat162*coeffFallOff162;
	r163 =	       rFlat163*coeffM163;
	r164 =	       (c[66]-c[25]*c[43]*uK164)*k164;
	r165 =	       rFlat165*coeffM165;
	r166 =	       c[25]*c[43]*k166;
	r167 =	       c[23]*c[43]*k167;
	r168 =	       c[13]*c[45]*k168;
	r169 =	       c[14]*c[45]*k169;
	r170 =	       (c[14]*c[45]-c[47]*c[48]*uK170)*k170;
	r171 =	       (c[15]*c[45]-c[5]*c[14]*uK171)*k171;
	r172 =	       c[10]*c[45]*k172;
	r173 =	       c[11]*c[45]*k173;
	r174 =	       (c[17]*c[45]-c[47]*c[54]*uK174)*k174;
	r175 =	       c[17]*c[45]*k175;
	r176 =	       c[20]*c[45]*k176;
	r177 =	       c[22]*c[45]*k177;
	r178 =	       c[24]*c[45]*k178;
	r179 =	       c[25]*c[45]*k179;
	r180 =	       c[25]*c[45]*k180;
	r181 =	       c[13]*c[44]*k181;
	r182 =	       c[22]*c[44]*k182;
	r183 =	       c[25]*c[44]*k183;
	r184 =	       c[25]*c[44]*k184;
	r185 =	       c[24]*c[44]*k185;
	r186 =	       c[10]*c[44]*k186;
	r187 =	       c[18]*c[44]*k187;
	r188 =	       (c[16]*c[44]-c[13]*c[65]*uK188)*k188;
	r189 =	       c[17]*c[44]*k189;
	r190 =	       c[13]*c[46]*k190;
	r191 =	       c[15]*c[46]*k191;
	r192 =	       c[13]*c[47]*k192;
	r193 =	       c[20]*c[47]*k193;
	r194 =	       (c[22]*c[47]-c[6]*c[48]*uK194)*k194;
	r195 =	       c[24]*c[47]*k195;
	r196 =	       c[22]*c[53]*k196;
	r197 =	       (c[5]*c[67]-c[6]*c[48]*uK197)*k197;
	r198 =	       c[2]*c[13]*k198;
	r199 =	       c[2]*c[14]*k199;
	r200 =	       c[2]*c[11]*k200;
	r201 =	       c[2]*c[25]*k201;
	r202 =	       c[2]*c[25]*k202;
	r203 =	       c[2]*c[13]*k203;
	r204 =	       c[2]*c[14]*k204;
	r205 =	       c[2]*c[20]*k205;
	r206 =	       c[2]*c[67]*k206;
	r207 =	       (c[2]*c[64]-c[22]*c[46]*uK207)*k207;
	r208 =	       c[2]*c[49]*k208;
	r209 =	       c[2]*c[60]*k209;
	r210 =	       c[2]*c[51]*k210;
	r211 =	       c[2]*c[56]*k211;
	r212 =	       c[2]*c[58]*k212;
	r213 =	       c[2]*c[61]*k213;
	r214 =	       (c[2]*c[48]-c[45]*c[67]*uK214)*k214;
	r215 =	       (c[2]*c[52]-c[5]*c[47]*uK215)*k215;
	r216 =	       (c[2]*c[52]-c[6]*c[62]*uK216)*k216;
	r217 =	       (c[2]*c[53]-c[45]*c[68]*uK217)*k217;
	r218 =	       c[2]*c[53]*k218;
	r219 =	       c[2]*c[53]*k219;
	r220 =	       (c[2]*c[53]-c[13]*c[46]*uK220)*k220;
	r221 =	       c[2]*c[49]*k221;
	r222 =	       c[2]*c[49]*k222;
	r223 =	       c[2]*c[68]*k223;
	r224 =	       (c[2]*c[57]-c[25]*c[65]*uK224)*k224;
	r225 =	       c[2]*c[59]*k225;
	r226 =	       c[2]*c[59]*k226;
	r227 =	       c[2]*c[55]*k227;
	r228 =	       c[45]*c[48]*k228;
	r229 =	       rFlat229*coeffM229;
	r230 =	       c[45]*c[53]*k230;
	r231 =	       c[45]*c[49]*k231;
	r232 =	       c[45]*c[51]*k232;
	r233 =	       c[45]*c[60]*k233;
	r234 =	       c[45]*c[50]*k234;
	r235 =	       c[45]*c[58]*k235;
	r236 =	       c[45]*c[55]*k236;
	r237 =	       c[45]*c[68]*k237;
	r238 =	       (c[44]*c[48]-c[43]*c[64]*uK238)*k238;
	r239 =	       (c[44]*c[48]-c[43]*c[67]*uK239)*k239;
	r240 =	       (c[44]*c[48]-c[3]*c[22]*uK240)*k240;
	r241 =	       (c[44]*c[48]-c[8]*c[45]*uK241)*k241;
	r242 =	       c[44]*c[52]*k242;
	r243 =	       c[44]*c[53]*k243;
	r244 =	       (c[44]*c[53]-c[4]*c[13]*uK244)*k244;
	r245 =	       (c[44]*c[57]-c[4]*c[16]*uK245)*k245;
	r246 =	       (c[44]*c[59]-c[4]*c[17]*uK246)*k246;
	r247 =	       c[44]*c[57]*k247;
	r248 =	       c[44]*c[59]*k248;
	r249 =	       c[44]*c[55]*k249;
	r250 =	       c[44]*c[58]*k250;
	r251 =	       c[44]*c[58]*k251;
	r252 =	       c[44]*c[66]*k252;
	r253 =	       c[44]*c[68]*k253;
	r254 =	       (c[46]*c[48]-c[44]*c[67]*uK254)*k254;
	r255 =	       c[46]*c[53]*k255;
	r256 =	       c[46]*c[49]*k256;
	r257 =	       c[46]*c[50]*k257;
	r258 =	       c[46]*c[56]*k258;
	r259 =	       c[46]*c[55]*k259;
	r260 =	       (c[45]*c[47]-c[6]*c[43]*uK260)*k260;
	r261 =	       (c[43]*c[47]-c[3]*c[5]*uK261)*k261;
	r262 =	       (c[44]*c[47]-c[4]*c[5]*uK262)*k262;
	r263 =	       (c[46]*c[47]-c[5]*c[7]*uK263)*k263;
	r264 =	       c[46]*c[47]*k264;
	r265 =	       (c[47]*c[47]-c[5]*c[22]*uK265)*k265;
	r266 =	       c[47]*c[48]*k266;
	r267 =	       c[43]*c[67]*k267;
	r268 =	       c[44]*c[67]*k268;
	r269 =	       c[46]*c[67]*k269;
	r270 =	       (c[47]*c[67]-c[22]*c[22]*uK270)*k270;
	r271 =	       c[47]*c[67]*k271;
	r272 =	       c[48]*c[67]*k272;
	r273 =	       c[67]*c[67]*k273;
	r274 =	       c[43]*c[64]*k274;
	r275 =	       c[44]*c[64]*k275;
	r276 =	       c[46]*c[64]*k276;
	r277 =	       c[47]*c[64]*k277;
	r278 =	       c[47]*c[64]*k278;
	r279 =	       c[48]*c[64]*k279;
	r280 =	       c[64]*c[67]*k280;
	r281 =	       c[64]*c[64]*k281;
	r282 =	       c[25]*c[46]*k282;
	r283 =	       c[43]*c[68]*k283;
	r284 =	       c[44]*c[68]*k284;
	r285 =	       (c[68]-c[66]*uK285)*k285;
	r286 =	       (c[2]*c[24]-c[46]*c[68]*uK286)*k286;
	r287 =	       (c[68]-c[25]*c[43]*uK287)*k287;
	r288 =	       c[14]*c[45]*k288;
	r289 =	       c[13]*c[44]*k289;
	r290 =	       c[20]*c[44]*k290;
	r291 =	       c[2]*c[68]*k291;
	r292 =	       (c[8]*c[69]-c[48]*c[48]*uK292)*k292;
	r293 =	       (c[8]*c[63]-c[48]*c[48]*uK293)*k293;
	r294 =	       (c[8]*c[62]-c[14]*c[43]*uK294)*k294;
	r295 =	       rFlat295*coeffM295;
	r296 =	       (c[3]*c[63]-c[43]*c[48]*uK296)*k296;
	r297 =	       (c[44]*c[48]-c[4]*c[63]*uK297)*k297;
	r298 =	       (c[48]*c[69]-c[14]*c[43]*uK298)*k298;
	r299 =	       (c[48]*c[63]-c[14]*c[43]*uK299)*k299;
	r300 =	       (c[48]*c[62]-c[43]*c[53]*uK300)*k300;
	r301 =	       (c[48]*c[70]-c[13]*c[43]*uK301)*k301;
	r302 =	       (c[22]*c[62]-c[25]*c[43]*uK302)*k302;
	r303 =	       (c[47]*c[69]-c[5]*c[48]*uK303)*k303;
	r304 =	       (c[43]*c[69]-c[3]*c[62]*uK304)*k304;
	r305 =	       (c[45]*c[69]-c[5]*c[43]*c[43]*uK305)*k305;
	r306 =	       (c[45]*c[69]-c[3]*c[5]*uK306)*k306;
	r307 =	       (c[44]*c[69]-c[22]*c[43]*uK307)*k307;
	r308 =	       (c[44]*c[69]-c[4]*c[62]*uK308)*k308;
	r309 =	       (c[2]*c[69]-c[22]*c[45]*uK309)*k309;
	r310 =	       (c[2]*c[69]-c[4]*c[5]*uK310)*k310;
	r311 =	       (c[2]*c[69]-c[5]*c[43]*c[44]*uK311)*k311;
	r312 =	       (c[6]*c[69]-c[5]*c[22]*uK312)*k312;
	r313 =	       (c[69]*c[69]-c[13]*c[43]*c[43]*uK313)*k313;
	r314 =	       (c[62]*c[69]-c[13]*c[43]*uK314)*k314;
	r315 =	       (c[69]*c[70]-c[43]*c[52]*uK315)*k315;
	r316 =	       rFlat316*coeffM316;
	r317 =	       (c[43]*c[63]-c[3]*c[62]*uK317)*k317;
	r318 =	       (c[45]*c[63]-c[5]*c[43]*c[43]*uK318)*k318;
	r319 =	       (c[44]*c[63]-c[22]*c[43]*uK319)*k319;
	r320 =	       (c[2]*c[63]-c[5]*c[43]*c[44]*uK320)*k320;
	r321 =	       (c[6]*c[63]-c[5]*c[22]*uK321)*k321;
	r322 =	       (c[43]*c[62]-c[3]*c[70]*uK322)*k322;
	r323 =	       (c[45]*c[62]-c[5]*c[43]*uK323)*k323;
	r324 =	       (c[44]*c[62]-c[43]*c[47]*uK324)*k324;
	r325 =	       (c[44]*c[62]-c[4]*c[70]*uK325)*k325;
	r326 =	       (c[2]*c[62]-c[45]*c[47]*uK326)*k326;
	r327 =	       (c[4]*c[62]-c[22]*c[43]*uK327)*k327;
	r328 =	       (c[6]*c[62]-c[5]*c[47]*uK328)*k328;
	r329 =	       (c[44]*c[70]-c[5]*c[43]*uK329)*k329;
	r330 =	       (c[2]*c[70]-c[5]*c[45]*uK330)*k330;
	r331 =	       (c[13]*c[45]-c[5]*c[69]*uK331)*k331;
	r332 =	       (c[13]*c[45]-c[43]*c[65]*uK332)*k332;
	r333 =	       (c[13]*c[69]-c[43]*c[54]*uK333)*k333;
	r334 =	       (c[13]*c[63]-c[43]*c[54]*uK334)*k334;
	r335 =	       (c[13]*c[62]-c[21]*c[43]*uK335)*k335;
	r336 =	       rFlat336*coeffFallOff336;
	r337 =	       (c[25]*c[45]-c[6]*c[69]*uK337)*k337;
	r338 =	       (c[25]*c[69]-c[5]*c[14]*uK338)*k338;
	r339 =	       (c[25]*c[69]-c[48]*c[65]*uK339)*k339;
	r340 =	       (c[25]*c[48]-c[5]*c[49]*uK340)*k340;
	r341 =	       (c[43]*c[65]-c[5]*c[63]*uK341)*k341;
	r342 =	       (c[45]*c[65]-c[5]*c[5]*c[43]*uK342)*k342;
	r343 =	       (c[44]*c[65]-c[5]*c[43]*c[47]*uK343)*k343;
	r344 =	       (c[2]*c[65]-c[5]*c[5]*c[44]*uK344)*k344;
	r345 =	       (c[65]*c[69]-c[5]*c[53]*uK345)*k345;
	r346 =	       (c[62]*c[65]-c[5]*c[13]*uK346)*k346;
	r347 =	       (c[65]*c[65]-c[5]*c[5]*c[13]*uK347)*k347;
	r348 =	       (c[45]*c[52]-c[5]*c[62]*uK348)*k348;
	r349 =	       (c[44]*c[52]-c[43]*c[65]*uK349)*k349;
	r350 =	       (c[2]*c[52]-c[45]*c[65]*uK350)*k350;
	r351 =	       (c[16]*c[45]-c[5]*c[21]*uK351)*k351;
	r352 =	       (c[16]*c[44]-c[21]*c[47]*uK352)*k352;
	r353 =	       (c[43]*c[54]-c[3]*c[21]*uK353)*k353;
	r354 =	       (c[45]*c[54]-c[22]*c[52]*uK354)*k354;
	r355 =	       (c[44]*c[54]-c[4]*c[21]*uK355)*k355;
	r356 =	       (c[44]*c[54]-c[47]*c[53]*uK356)*k356;
	r357 =	       (c[2]*c[54]-c[25]*c[47]*uK357)*k357;
	r358 =	       (c[47]*c[54]-c[5]*c[15]*uK358)*k358;
	r359 =	       (c[21]*c[44]-c[13]*c[47]*uK359)*k359;
	r360 =	       (c[2]*c[21]-c[47]*c[65]*uK360)*k360;
	r361 =	       (c[10]*c[43]-c[3]*c[54]*uK361)*k361;
	r362 =	       (c[10]*c[44]-c[4]*c[54]*uK362)*k362;
	r363 =	       (c[15]*c[43]-c[3]*c[54]*uK363)*k363;
	r364 =	       (c[15]*c[44]-c[4]*c[54]*uK364)*k364;
	r365 =	       (c[15]*c[48]-c[8]*c[54]*uK365)*k365;
	r366 =	       (c[10]*c[48]-c[8]*c[54]*uK366)*k366;
	r367 =	       (c[4]*c[43]-c[3]*c[44]*uK367)*k367;
	r368 =	       (c[7]*c[43]-c[4]*c[44]*uK368)*k368;
	r369 =	       (c[7]*c[43]-c[3]*c[46]*uK369)*k369;
	r370 =	       (c[22]*c[43]-c[3]*c[47]*uK370)*k370;
	r371 =	       (c[8]*c[43]-c[3]*c[48]*uK371)*k371;
	r372 =	       (c[9]*c[43]-c[3]*c[49]*uK372)*k372;
	r373 =	       (c[12]*c[43]-c[3]*c[60]*uK373)*k373;
	r374 =	       (c[12]*c[43]-c[3]*c[51]*uK374)*k374;
	r375 =	       c[22]*c[46]*k375;
	r376 =	       c[23]*c[43]*k376;
	r377 =	       c[23]*c[43]*k377;
	r378 =	       c[23]*c[44]*k378;
	r379 =	       c[23]*c[46]*k379;
	r380 =	       (c[3]*c[52]-c[13]*c[43]*uK380)*k380;
	r381 =	       (c[13]*c[44]-c[4]*c[52]*uK381)*k381;
	r382 =	       (c[26]-c[43]*c[71]*uK382)*k382;
	r383 =	       c[48]*c[57]*k383;
	r384 =	       c[50]*c[56]*k384;
	r385 =	       c[71]*k385;
	r386 =	       c[16]*c[48]*k386;
	r387 =	       c[10]*c[53]*k387;
	r388 =	       c[15]*c[53]*k388;
	r389 =	       (c[14]*c[54]-c[26]*c[43]*uK389)*k389;
	r390 =	       c[11]*c[50]*k390;
	r391 =	       c[14]*c[58]*k391;
	r392 =	       c[19]*c[58]*k392;
	r393 =	       c[13]*c[55]*k393;
	r394 =	       c[14]*c[55]*k394;
	r395 =	       c[14]*c[55]*k395;
	r396 =	       (c[10]*c[13]-c[26]*uK396)*k396;
	r397 =	       (c[13]*c[15]-c[26]*uK397)*k397;
	r398 =	       c[26]*c[45]*k398;
	r399 =	       c[26]*c[44]*k399;
	r400 =	       c[2]*c[26]*k400;
	r401 =	       (c[27]-c[43]*c[72]*uK401)*k401;
	r402 =	       (c[2]*c[27]-c[46]*c[72]*uK402)*k402;
	r403 =	       c[27]*c[44]*k403;
	r404 =	       c[52]*c[59]*k404;
	r405 =	       c[53]*c[57]*k405;
	r406 =	       rFlat406*coeffFallOff406;
	r407 =	       (c[54]*c[54]-c[43]*c[72]*uK407)*k407;
	r408 =	       c[11]*c[20]*k408;
	r409 =	       c[14]*c[26]*k409;
	r410 =	       c[11]*c[26]*k410;
	r411 =	       c[20]*c[26]*k411;
	r412 =	       c[20]*c[27]*k412;
	r413 =	       c[26]*c[27]*k413;
	r414 =	       c[50]*c[55]*k414;
	r415 =	       c[58]*c[58]*k415;
	r416 =	       c[17]*c[53]*k416;
	r417 =	       c[20]*c[53]*k417;
	r418 =	       c[20]*c[52]*k418;
	r419 =	       c[15]*c[54]*k419;
	r420 =	       c[10]*c[54]*k420;
	r421 =	       c[10]*c[50]*k421;
	r422 =	       c[15]*c[50]*k422;
	r423 =	       c[20]*c[50]*k423;
	r424 =	       c[20]*c[56]*k424;
	r425 =	       c[14]*c[57]*k425;
	r426 =	       c[27]*c[57]*k426;
	r427 =	       (c[13]*c[59]-c[27]*c[43]*uK427)*k427;
	r428 =	       c[14]*c[59]*k428;
	r429 =	       c[10]*c[59]*k429;
	r430 =	       c[15]*c[59]*k430;
	r431 =	       c[16]*c[59]*k431;
	r432 =	       c[17]*c[59]*k432;
	r433 =	       c[20]*c[59]*k433;
	r434 =	       c[27]*c[59]*k434;
	r435 =	       c[11]*c[58]*k435;
	r436 =	       c[27]*c[61]*k436;
	r437 =	       (c[13]*c[17]-c[27]*uK437)*k437;
	r438 =	       c[13]*c[20]*k438;
	r439 =	       c[14]*c[20]*k439;
	r440 =	       c[14]*c[16]*k440;
	r441 =	       c[14]*c[17]*k441;
	r442 =	       c[44]*c[71]*k442;
	r443 =	       c[45]*c[72]*k443;
	r444 =	       c[46]*c[71]*k444;
	r445 =	       c[72]*k445;
	r446 =	       (c[59]*c[59]-c[14]*c[27]*uK446)*k446;
	r447 =	       c[26]*c[71]*k447;
	r448 =	       c[27]*c[71]*k448;
	r449 =	       c[71]*c[71]*k449;
	r450 =	       c[27]*c[44]*k450;
	r451 =	       c[29]*k451;
	r452 =	       rFlat452*coeffM452;
	r453 =	       (c[43]*c[73]-c[3]*c[74]*uK453)*k453;
	r454 =	       (c[45]*c[73]-c[31]*c[43]*uK454)*k454;
	r455 =	       (c[45]*c[73]-c[44]*c[74]*uK455)*k455;
	r456 =	       (c[45]*c[73]-c[3]*c[32]*uK456)*k456;
	r457 =	       (c[2]*c[73]-c[31]*c[44]*uK457)*k457;
	r458 =	       (c[44]*c[73]-c[4]*c[74]*uK458)*k458;
	r459 =	       (c[46]*c[73]-c[44]*c[75]*uK459)*k459;
	r460 =	       (c[45]*c[75]-c[2]*c[73]*uK460)*k460;
	r461 =	       (c[73]*c[76]-c[1]*c[43]*c[43]*uK461)*k461;
	r462 =	       (c[73]*c[73]-c[30]*c[74]*uK462)*k462;
	r463 =	       (c[32]*c[73]-c[44]*c[77]*uK463)*k463;
	r464 =	       (c[32]*c[73]-c[1]*c[4]*uK464)*k464;
	r465 =	       (c[33]*c[73]-c[4]*c[34]*uK465)*k465;
	r466 =	       (c[33]*c[73]-c[32]*c[75]*uK466)*k466;
	r467 =	       (c[43]*c[74]-c[3]*c[76]*uK467)*k467;
	r468 =	       (c[45]*c[74]-c[32]*c[43]*uK468)*k468;
	r469 =	       (c[44]*c[74]-c[31]*c[43]*uK469)*k469;
	r470 =	       (c[44]*c[74]-c[4]*c[76]*uK470)*k470;
	r471 =	       (c[44]*c[74]-c[3]*c[32]*uK471)*k471;
	r472 =	       (c[2]*c[74]-c[31]*c[45]*uK472)*k472;
	r473 =	       (c[2]*c[74]-c[32]*c[44]*uK473)*k473;
	r474 =	       (c[74]*c[74]-c[1]*c[43]*c[43]*uK474)*k474;
	r475 =	       (c[74]*c[76]-c[1]*c[43]*uK475)*k475;
	r476 =	       (c[32]*c[74]-c[1]*c[44]*uK476)*k476;
	r477 =	       (c[33]*c[74]-c[34]*c[44]*uK477)*k477;
	r478 =	       (c[44]*c[76]-c[32]*c[43]*uK478)*k478;
	r479 =	       (c[2]*c[76]-c[32]*c[45]*uK479)*k479;
	r480 =	       (c[32]*c[76]-c[1]*c[45]*uK480)*k480;
	r481 =	       (c[77]-c[1]*c[43]*uK481)*k481;
	r482 =	       (c[43]*c[77]-c[1]*c[3]*uK482)*k482;
	r483 =	       (c[45]*c[77]-c[34]*c[43]*uK483)*k483;
	r484 =	       (c[45]*c[77]-c[32]*c[74]*uK484)*k484;
	r485 =	       (c[44]*c[77]-c[1]*c[4]*uK485)*k485;
	r486 =	       (c[2]*c[77]-c[1]*c[46]*uK486)*k486;
	r487 =	       (c[2]*c[77]-c[1]*c[2]*c[43]*uK487)*k487;
	r488 =	       (c[74]*c[77]-c[1]*c[73]*uK488)*k488;
	r489 =	       (c[73]*c[77]-c[1]*c[30]*uK489)*k489;
	r490 =	       (c[32]*c[77]-c[1]*c[31]*uK490)*k490;
	r491 =	       rFlat491*coeffM491;
	r492 =	       rFlat492*coeffM492;
	r493 =	       (c[35]*c[43]-c[3]*c[34]*uK493)*k493;
	r494 =	       (c[35]*c[43]-c[44]*c[77]*uK494)*k494;
	r495 =	       (c[35]*c[45]-c[34]*c[44]*uK495)*k495;
	r496 =	       (c[35]*c[45]-c[2]*c[77]*uK496)*k496;
	r497 =	       (c[35]*c[44]-c[4]*c[34]*uK497)*k497;
	r498 =	       (c[35]*c[44]-c[46]*c[77]*uK498)*k498;
	r499 =	       (c[32]*c[35]-c[31]*c[34]*uK499)*k499;
	r500 =	       (c[32]*c[35]-c[33]*c[77]*uK500)*k500;
	r501 =	       (c[33]*c[35]-c[34]*c[36]*uK501)*k501;
	r502 =	       (c[32]*c[46]-c[33]*c[44]*uK502)*k502;
	r503 =	       rFlat503*coeffM503;
	r504 =	       rFlat504*coeffFallOff504;
	r505 =	       (c[32]*c[47]-c[5]*c[31]*uK505)*k505;
	r506 =	       rFlat506*coeffM506;
	r507 =	       (c[31]*c[43]-c[3]*c[32]*uK507)*k507;
	r508 =	       (c[31]*c[45]-c[32]*c[44]*uK508)*k508;
	r509 =	       (c[31]*c[44]-c[4]*c[32]*uK509)*k509;
	r510 =	       (c[2]*c[31]-c[32]*c[46]*uK510)*k510;
	r511 =	       (c[31]*c[73]-c[30]*c[32]*uK511)*k511;
	r512 =	       (c[31]*c[32]-c[34]*c[44]*uK512)*k512;
	r513 =	       (c[31]*c[33]-c[32]*c[36]*uK513)*k513;
	r514 =	       (c[31]*c[31]-c[4]*c[34]*uK514)*k514;
	r515 =	       (c[3]*c[33]-c[36]*c[43]*uK515)*k515;
	r516 =	       (c[36]*c[45]-c[33]*c[44]*uK516)*k516;
	r517 =	       (c[36]*c[44]-c[4]*c[33]*uK517)*k517;
	r518 =	       (c[36]*c[74]-c[33]*c[73]*uK518)*k518;
	r519 =	       (c[36]*c[73]-c[30]*c[33]*uK519)*k519;
	r520 =	       (c[36]*c[36]-c[4]*c[32]*c[33]*uK520)*k520;
	r521 =	       rFlat521*coeffM521;
	r522 =	       (c[43]*c[75]-c[3]*c[31]*uK522)*k522;
	r523 =	       (c[43]*c[75]-c[44]*c[73]*uK523)*k523;
	r524 =	       (c[45]*c[75]-c[31]*c[44]*uK524)*k524;
	r525 =	       (c[44]*c[75]-c[4]*c[31]*uK525)*k525;
	r526 =	       (c[32]*c[75]-c[31]*c[31]*uK526)*k526;
	r527 =	       (c[73]*c[75]-c[30]*c[31]*uK527)*k527;
	r528 =	       (c[33]*c[75]-c[31]*c[36]*uK528)*k528;
	r529 =	       (c[33]*c[47]-c[6]*c[32]*c[43]*uK529)*k529;
	r530 =	       (c[33]*c[43]-c[32]*c[44]*uK530)*k530;
	r531 =	       (c[33]*c[45]-c[2]*c[32]*uK531)*k531;
	r532 =	       (c[33]*c[46]-c[2]*c[36]*uK532)*k532;
	r533 =	       (c[33]*c[33]-c[2]*c[32]*c[32]*uK533)*k533;
	r534 =	       (c[5]*c[33]-c[6]*c[32]*uK534)*k534;
	r535 =	       (c[33]*c[47]-c[5]*c[36]*uK535)*k535;
	r536 =	       (c[3]*c[78]-c[37]*c[43]*uK536)*k536;
	r537 =	       (c[37]*c[45]-c[43]*c[79]*uK537)*k537;
	r538 =	       (c[37]*c[45]-c[5]*c[74]*uK538)*k538;
	r539 =	       (c[37]*c[45]-c[44]*c[78]*uK539)*k539;
	r540 =	       (c[37]*c[44]-c[4]*c[78]*uK540)*k540;
	r541 =	       (c[37]*c[44]-c[38]*c[43]*uK541)*k541;
	r542 =	       (c[37]*c[44]-c[39]*c[43]*uK542)*k542;
	r543 =	       (c[37]*c[44]-c[5]*c[73]*uK543)*k543;
	r544 =	       (c[45]*c[78]-c[5]*c[76]*uK544)*k544;
	r545 =	       (c[44]*c[78]-c[43]*c[79]*uK545)*k545;
	r546 =	       (c[2]*c[78]-c[45]*c[79]*uK546)*k546;
	r547 =	       rFlat547*coeffM547;
	r548 =	       (c[43]*c[79]-c[5]*c[74]*uK548)*k548;
	r549 =	       (c[45]*c[79]-c[5]*c[32]*uK549)*k549;
	r550 =	       (c[76]*c[79]-c[1]*c[5]*uK550)*k550;
	r551 =	       (c[5]*c[34]-c[1]*c[6]*uK551)*k551;
	r552 =	       (c[2]*c[79]-c[6]*c[32]*uK552)*k552;
	r553 =	       (c[44]*c[79]-c[32]*c[47]*uK553)*k553;
	r554 =	       (c[47]*c[79]-c[5]*c[39]*uK554)*k554;
	r555 =	       (c[22]*c[79]-c[39]*c[47]*uK555)*k555;
	r556 =	       (c[33]*c[79]-c[5]*c[32]*c[32]*uK556)*k556;
	r557 =	       (c[33]*c[79]-c[6]*c[34]*uK557)*k557;
	r558 =	       (c[31]*c[79]-c[32]*c[39]*uK558)*k558;
	r559 =	       (c[36]*c[79]-c[33]*c[39]*uK559)*k559;
	r560 =	       (c[79]*c[79]-c[1]*c[5]*c[5]*uK560)*k560;
	r561 =	       (c[40]*c[43]-c[37]*c[44]*uK561)*k561;
	r562 =	       (c[38]*c[43]-c[39]*c[43]*uK562)*k562;
	r563 =	       (c[38]*c[44]-c[4]*c[79]*uK563)*k563;
	r564 =	       (c[38]*c[45]-c[44]*c[79]*uK564)*k564;
	r565 =	       (c[40]*c[45]-c[32]*c[47]*uK565)*k565;
	r566 =	       (c[40]*c[45]-c[44]*c[79]*uK566)*k566;
	r567 =	       (c[40]*c[44]-c[22]*c[32]*uK567)*k567;
	r568 =	       (c[40]*c[44]-c[3]*c[5]*c[32]*uK568)*k568;
	r569 =	       (c[40]*c[44]-c[43]*c[44]*c[79]*uK569)*k569;
	r570 =	       (c[40]*c[44]-c[4]*c[79]*uK570)*k570;
	r571 =	       (c[40]*c[44]-c[31]*c[47]*uK571)*k571;
	r572 =	       rFlat572*coeffM572;
	r573 =	       (c[39]*c[43]-c[5]*c[73]*uK573)*k573;
	r574 =	       (c[39]*c[45]-c[44]*c[79]*uK574)*k574;
	r575 =	       (c[39]*c[45]-c[6]*c[74]*uK575)*k575;
	r576 =	       (c[39]*c[45]-c[5]*c[31]*uK576)*k576;
	r577 =	       (c[39]*c[46]-c[7]*c[79]*uK577)*k577;
	r578 =	       (c[2]*c[39]-c[6]*c[31]*uK578)*k578;
	r579 =	       (c[39]*c[73]-c[30]*c[79]*uK579)*k579;
	r580 =	       (c[39]*c[74]-c[73]*c[79]*uK580)*k580;
	r581 =	       (c[33]*c[39]-c[6]*c[35]*uK581)*k581;
	r582 =	       (c[39]*c[78]-c[37]*c[79]*uK582)*k582;
	r583 =	       (c[3]*c[79]-c[39]*c[43]*uK583)*k583;
	r584 =	       (c[39]*c[44]-c[4]*c[79]*uK584)*k584;
	r585 =	       (c[32]*c[79]-c[1]*c[6]*uK585)*k585;
	r586 =	       (c[32]*c[79]-c[5]*c[34]*uK586)*k586;
	r587 =	       rFlat587*coeffM587;
	r588 =	       (c[6]*c[76]-c[5]*c[32]*uK588)*k588;
	r589 =	       (c[6]*c[78]-c[5]*c[79]*uK589)*k589;
	r590 =	       (c[48]*c[76]-c[43]*c[80]*uK590)*k590;
	r591 =	       (c[32]*c[48]-c[4]*c[37]*uK591)*k591;
	r592 =	       (c[32]*c[48]-c[44]*c[80]*uK592)*k592;
	r593 =	       (c[69]*c[76]-c[37]*c[43]*uK593)*k593;
	r594 =	       (c[1]*c[69]-c[37]*c[74]*uK594)*k594;
	r595 =	       (c[62]*c[76]-c[43]*c[78]*uK595)*k595;
	r596 =	       (c[1]*c[62]-c[37]*c[76]*uK596)*k596;
	r597 =	       (c[34]*c[62]-c[32]*c[37]*uK597)*k597;
	r598 =	       (c[1]*c[70]-c[76]*c[78]*uK598)*k598;
	r599 =	       (c[32]*c[70]-c[45]*c[78]*uK599)*k599;
	r600 =	       (c[32]*c[70]-c[5]*c[76]*uK600)*k600;
	r601 =	       (c[32]*c[62]-c[37]*c[45]*uK601)*k601;
	r602 =	       (c[32]*c[62]-c[43]*c[79]*uK602)*k602;
	r603 =	       (c[32]*c[62]-c[47]*c[76]*uK603)*k603;
	r604 =	       (c[32]*c[69]-c[3]*c[79]*uK604)*k604;
	r605 =	       (c[32]*c[63]-c[3]*c[79]*uK605)*k605;
	r606 =	       (c[32]*c[69]-c[37]*c[44]*uK606)*k606;
	r607 =	       (c[32]*c[63]-c[37]*c[44]*uK607)*k607;
	r608 =	       (c[32]*c[69]-c[39]*c[43]*uK608)*k608;
	r609 =	       (c[32]*c[63]-c[39]*c[43]*uK609)*k609;
	r610 =	       (c[32]*c[69]-c[40]*c[43]*uK610)*k610;
	r611 =	       (c[32]*c[63]-c[40]*c[43]*uK611)*k611;
	r612 =	       (c[40]*c[43]-c[39]*c[43]*uK612)*k612;
	r613 =	       (c[9]*c[78]-c[37]*c[49]*uK613)*k613;
	r614 =	       (c[9]*c[79]-c[39]*c[49]*uK614)*k614;
	r615 =	       (c[14]*c[78]-c[37]*c[53]*uK615)*k615;
	r616 =	       (c[11]*c[78]-c[37]*c[50]*uK616)*k616;
	r617 =	       (c[32]*c[53]-c[13]*c[31]*uK617)*k617;
	r618 =	       (c[13]*c[79]-c[37]*c[65]*uK618)*k618;
	r619 =	       (c[25]*c[78]-c[37]*c[65]*uK619)*k619;
	r620 =	       (c[8]*c[78]-c[37]*c[48]*uK620)*k620;
	r621 =	       (c[41]*c[43]-c[37]*c[48]*uK621)*k621;
	r622 =	       (c[41]*c[43]-c[3]*c[81]*uK622)*k622;
	r623 =	       (c[41]*c[45]-c[48]*c[79]*uK623)*k623;
	r624 =	       (c[41]*c[44]-c[4]*c[81]*uK624)*k624;
	r625 =	       (c[38]*c[48]-c[41]*c[44]*uK625)*k625;
	r626 =	       (c[45]*c[81]-c[22]*c[78]*uK626)*k626;
	r627 =	       (c[64]*c[78]-c[44]*c[81]*uK627)*k627;
	r628 =	       (c[48]*c[78]-c[43]*c[81]*uK628)*k628;
	r629 =	       (c[53]*c[76]-c[37]*c[69]*uK629)*k629;
	r630 =	       (c[65]*c[76]-c[5]*c[37]*uK630)*k630;
	r631 =	       (c[33]*c[65]-c[6]*c[40]*uK631)*k631;
	r632 =	       (c[32]*c[65]-c[5]*c[40]*uK632)*k632;
	r633 =	       (c[32]*c[65]-c[6]*c[37]*uK633)*k633;
	r634 =	       (c[32]*c[52]-c[5]*c[37]*uK634)*k634;
	r635 =	       (c[54]*c[76]-c[13]*c[37]*uK635)*k635;
	r636 =	       rFlat636*coeffM636;
	r637 =	       (c[34]*c[43]-c[1]*c[44]*uK637)*k637;
	r638 =	       (c[34]*c[43]-c[1]*c[44]*uK638)*k638;
	r639 =	       (c[32]*c[74]-c[34]*c[43]*uK639)*k639;
	r640 =	       (c[34]*c[45]-c[32]*c[32]*uK640)*k640;
	r641 =	       (c[34]*c[45]-c[1]*c[2]*uK641)*k641;
	r642 =	       (c[34]*c[44]-c[1]*c[46]*uK642)*k642;
	r643 =	       (c[2]*c[37]-c[46]*c[78]*uK643)*k643;
	r644 =	       (c[33]*c[48]-c[32]*c[67]*uK644)*k644;
	r645 =	       (c[8]*c[32]-c[31]*c[48]*uK645)*k645;
	r646 =	       (c[9]*c[32]-c[31]*c[49]*uK646)*k646;
	r647 =	       (c[42]*c[43]-c[3]*c[33]*uK647)*k647;
	r648 =	       (c[42]*c[45]-c[33]*c[44]*uK648)*k648;
	r649 =	       (c[42]*c[44]-c[4]*c[33]*uK649)*k649;
	r650 =	       (c[42]*c[48]-c[8]*c[33]*uK650)*k650;
	r651 =	       (c[42]-c[36]*uK651)*k651;
	r652 =	       (c[36]*c[48]-c[8]*c[33]*uK652)*k652;
	r653 =	       (c[32]*c[67]-c[22]*c[31]*uK653)*k653;
	r654 =	       (c[33]*c[67]-c[22]*c[36]*uK654)*k654;
	r655 =	       c[3]*c[43]*k655;
	r656 =	       c[3]*c[50]*k656;
	r657 =	       c[3]*c[53]*k657;
	r658 =	       c[3]*c[55]*k658;
	r659 =	       c[3]*c[56]*k659;
	r660 =	       c[3]*c[57]*k660;
	r661 =	       c[3]*c[58]*k661;
	r662 =	       c[3]*c[59]*k662;
	r663 =	       c[3]*c[61]*k663;
	r664 =	       c[3]*c[64]*k664;
	r665 =	       c[3]*c[65]*k665;
	r666 =	       c[3]*c[66]*k666;
	r667 =	       c[3]*c[67]*k667;
	r668 =	       c[3]*c[68]*k668;
	r669 =	       c[3]*c[72]*k669;
	r670 =	       c[3]*c[73]*k670;
	r671 =	       c[8]*c[44]*k671;
	r672 =	       c[8]*c[46]*k672;
	r673 =	       c[8]*c[47]*k673;
	r674 =	       c[8]*c[48]*k674;
	r675 =	       c[8]*c[49]*k675;
	r676 =	       c[8]*c[50]*k676;
	r677 =	       c[8]*c[51]*k677;
	r678 =	       c[8]*c[53]*k678;
	r679 =	       c[8]*c[55]*k679;
	r680 =	       c[8]*c[56]*k680;
	r681 =	       c[8]*c[57]*k681;
	r682 =	       c[8]*c[58]*k682;
	r683 =	       c[8]*c[59]*k683;
	r684 =	       c[8]*c[60]*k684;
	r685 =	       c[8]*c[61]*k685;
	r686 =	       c[8]*c[64]*k686;
	r687 =	       c[8]*c[65]*k687;
	r688 =	       c[8]*c[66]*k688;
	r689 =	       c[8]*c[67]*k689;
	r690 =	       c[8]*c[68]*k690;
	r691 =	       c[8]*c[72]*k691;
	r692 =	       c[8]*c[73]*k692;
	r693 =	       c[2]*c[13]*k693;
	r694 =	       c[13]*c[33]*k694;
	r695 =	       c[13]*c[45]*k695;
	r696 =	       c[13]*c[46]*k696;
	r697 =	       c[13]*c[47]*k697;
	r698 =	       c[13]*c[48]*k698;
	r699 =	       c[13]*c[49]*k699;
	r700 =	       c[13]*c[50]*k700;
	r701 =	       c[13]*c[51]*k701;
	r702 =	       c[13]*c[53]*k702;
	r703 =	       c[13]*c[54]*k703;
	r704 =	       c[13]*c[55]*k704;
	r705 =	       c[13]*c[56]*k705;
	r706 =	       c[13]*c[57]*k706;
	r707 =	       c[13]*c[58]*k707;
	r708 =	       c[13]*c[59]*k708;
	r709 =	       c[13]*c[60]*k709;
	r710 =	       c[13]*c[61]*k710;
	r711 =	       c[13]*c[64]*k711;
	r712 =	       c[13]*c[65]*k712;
	r713 =	       c[13]*c[66]*k713;
	r714 =	       c[13]*c[67]*k714;
	r715 =	       c[13]*c[68]*k715;
	r716 =	       c[13]*c[72]*k716;
	r717 =	       c[13]*c[73]*k717;
	r718 =	       c[13]*c[78]*k718;
	r719 =	       c[14]*c[33]*k719;
	r720 =	       c[14]*c[43]*k720;
	r721 =	       c[14]*c[44]*k721;
	r722 =	       c[14]*c[45]*k722;
	r723 =	       c[14]*c[46]*k723;
	r724 =	       c[14]*c[47]*k724;
	r725 =	       c[14]*c[48]*k725;
	r726 =	       c[14]*c[49]*k726;
	r727 =	       c[14]*c[50]*k727;
	r728 =	       c[14]*c[51]*k728;
	r729 =	       c[14]*c[53]*k729;
	r730 =	       c[14]*c[54]*k730;
	r731 =	       c[14]*c[55]*k731;
	r732 =	       c[14]*c[56]*k732;
	r733 =	       c[14]*c[57]*k733;
	r734 =	       c[14]*c[58]*k734;
	r735 =	       c[14]*c[59]*k735;
	r736 =	       c[14]*c[60]*k736;
	r737 =	       c[14]*c[61]*k737;
	r738 =	       c[14]*c[64]*k738;
	r739 =	       c[14]*c[65]*k739;
	r740 =	       c[14]*c[66]*k740;
	r741 =	       c[14]*c[67]*k741;
	r742 =	       c[14]*c[68]*k742;
	r743 =	       c[14]*c[72]*k743;
	r744 =	       c[14]*c[73]*k744;
	r745 =	       c[9]*c[33]*k745;
	r746 =	       c[9]*c[44]*k746;
	r747 =	       c[9]*c[45]*k747;
	r748 =	       c[9]*c[46]*k748;
	r749 =	       c[9]*c[47]*k749;
	r750 =	       c[9]*c[48]*k750;
	r751 =	       c[9]*c[49]*k751;
	r752 =	       c[9]*c[50]*k752;
	r753 =	       c[9]*c[51]*k753;
	r754 =	       c[9]*c[53]*k754;
	r755 =	       c[9]*c[54]*k755;
	r756 =	       c[9]*c[55]*k756;
	r757 =	       c[9]*c[56]*k757;
	r758 =	       c[9]*c[57]*k758;
	r759 =	       c[9]*c[58]*k759;
	r760 =	       c[9]*c[59]*k760;
	r761 =	       c[9]*c[60]*k761;
	r762 =	       c[9]*c[61]*k762;
	r763 =	       c[9]*c[64]*k763;
	r764 =	       c[9]*c[65]*k764;
	r765 =	       c[9]*c[66]*k765;
	r766 =	       c[9]*c[67]*k766;
	r767 =	       c[9]*c[68]*k767;
	r768 =	       c[9]*c[72]*k768;
	r769 =	       c[9]*c[73]*k769;
	r770 =	       c[11]*c[33]*k770;
	r771 =	       c[11]*c[43]*k771;
	r772 =	       c[11]*c[44]*k772;
	r773 =	       c[11]*c[45]*k773;
	r774 =	       c[11]*c[46]*k774;
	r775 =	       c[11]*c[47]*k775;
	r776 =	       c[11]*c[48]*k776;
	r777 =	       c[11]*c[49]*k777;
	r778 =	       c[11]*c[50]*k778;
	r779 =	       c[11]*c[51]*k779;
	r780 =	       c[11]*c[53]*k780;
	r781 =	       c[11]*c[54]*k781;
	r782 =	       c[11]*c[55]*k782;
	r783 =	       c[11]*c[56]*k783;
	r784 =	       c[11]*c[57]*k784;
	r785 =	       c[11]*c[58]*k785;
	r786 =	       c[11]*c[59]*k786;
	r787 =	       c[11]*c[60]*k787;
	r788 =	       c[11]*c[61]*k788;
	r789 =	       c[11]*c[64]*k789;
	r790 =	       c[11]*c[65]*k790;
	r791 =	       c[11]*c[66]*k791;
	r792 =	       c[11]*c[67]*k792;
	r793 =	       c[11]*c[68]*k793;
	r794 =	       c[11]*c[72]*k794;
	r795 =	       c[11]*c[73]*k795;
	r796 =	       c[2]*c[11]*k796;
	r797 =	       c[11]*c[33]*k797;
	r798 =	       c[11]*c[43]*k798;
	r799 =	       c[11]*c[44]*k799;
	r800 =	       c[11]*c[45]*k800;
	r801 =	       c[11]*c[46]*k801;
	r802 =	       c[11]*c[47]*k802;
	r803 =	       c[11]*c[48]*k803;
	r804 =	       c[11]*c[49]*k804;
	r805 =	       c[11]*c[50]*k805;
	r806 =	       c[11]*c[51]*k806;
	r807 =	       c[11]*c[53]*k807;
	r808 =	       c[11]*c[54]*k808;
	r809 =	       c[11]*c[55]*k809;
	r810 =	       c[11]*c[56]*k810;
	r811 =	       c[11]*c[57]*k811;
	r812 =	       c[11]*c[58]*k812;
	r813 =	       c[11]*c[59]*k813;
	r814 =	       c[11]*c[60]*k814;
	r815 =	       c[11]*c[61]*k815;
	r816 =	       c[11]*c[64]*k816;
	r817 =	       c[11]*c[65]*k817;
	r818 =	       c[11]*c[66]*k818;
	r819 =	       c[11]*c[67]*k819;
	r820 =	       c[11]*c[68]*k820;
	r821 =	       c[11]*c[72]*k821;
	r822 =	       c[11]*c[73]*k822;
	r823 =	       c[11]*c[78]*k823;
	r824 =	       c[12]*c[33]*k824;
	r825 =	       c[12]*c[44]*k825;
	r826 =	       c[12]*c[45]*k826;
	r827 =	       c[12]*c[46]*k827;
	r828 =	       c[12]*c[47]*k828;
	r829 =	       c[12]*c[48]*k829;
	r830 =	       c[12]*c[49]*k830;
	r831 =	       c[12]*c[50]*k831;
	r832 =	       c[12]*c[51]*k832;
	r833 =	       c[12]*c[53]*k833;
	r834 =	       c[12]*c[54]*k834;
	r835 =	       c[12]*c[55]*k835;
	r836 =	       c[12]*c[56]*k836;
	r837 =	       c[12]*c[57]*k837;
	r838 =	       c[12]*c[58]*k838;
	r839 =	       c[12]*c[59]*k839;
	r840 =	       c[12]*c[60]*k840;
	r841 =	       c[12]*c[61]*k841;
	r842 =	       c[12]*c[64]*k842;
	r843 =	       c[12]*c[65]*k843;
	r844 =	       c[12]*c[66]*k844;
	r845 =	       c[12]*c[67]*k845;
	r846 =	       c[12]*c[68]*k846;
	r847 =	       c[12]*c[72]*k847;
	r848 =	       c[12]*c[73]*k848;
	r849 =	       c[12]*c[78]*k849;
	r850 =	       c[12]*c[33]*k850;
	r851 =	       c[12]*c[44]*k851;
	r852 =	       c[12]*c[45]*k852;
	r853 =	       c[12]*c[46]*k853;
	r854 =	       c[12]*c[47]*k854;
	r855 =	       c[12]*c[48]*k855;
	r856 =	       c[12]*c[49]*k856;
	r857 =	       c[12]*c[50]*k857;
	r858 =	       c[12]*c[51]*k858;
	r859 =	       c[12]*c[53]*k859;
	r860 =	       c[12]*c[54]*k860;
	r861 =	       c[12]*c[55]*k861;
	r862 =	       c[12]*c[56]*k862;
	r863 =	       c[12]*c[57]*k863;
	r864 =	       c[12]*c[58]*k864;
	r865 =	       c[12]*c[59]*k865;
	r866 =	       c[12]*c[60]*k866;
	r867 =	       c[12]*c[61]*k867;
	r868 =	       c[12]*c[64]*k868;
	r869 =	       c[12]*c[65]*k869;
	r870 =	       c[12]*c[66]*k870;
	r871 =	       c[12]*c[67]*k871;
	r872 =	       c[12]*c[68]*k872;
	r873 =	       c[12]*c[72]*k873;
	r874 =	       c[12]*c[73]*k874;
	r875 =	       c[12]*c[78]*k875;
	r876 =	       c[2]*c[17]*k876;
	r877 =	       c[17]*c[33]*k877;
	r878 =	       c[17]*c[43]*k878;
	r879 =	       c[17]*c[44]*k879;
	r880 =	       c[17]*c[45]*k880;
	r881 =	       c[17]*c[46]*k881;
	r882 =	       c[17]*c[47]*k882;
	r883 =	       c[17]*c[48]*k883;
	r884 =	       c[17]*c[49]*k884;
	r885 =	       c[17]*c[50]*k885;
	r886 =	       c[17]*c[51]*k886;
	r887 =	       c[17]*c[53]*k887;
	r888 =	       c[17]*c[54]*k888;
	r889 =	       c[17]*c[55]*k889;
	r890 =	       c[17]*c[56]*k890;
	r891 =	       c[17]*c[57]*k891;
	r892 =	       c[17]*c[58]*k892;
	r893 =	       c[17]*c[59]*k893;
	r894 =	       c[17]*c[60]*k894;
	r895 =	       c[17]*c[61]*k895;
	r896 =	       c[17]*c[64]*k896;
	r897 =	       c[17]*c[65]*k897;
	r898 =	       c[17]*c[66]*k898;
	r899 =	       c[17]*c[67]*k899;
	r900 =	       c[17]*c[68]*k900;
	r901 =	       c[17]*c[72]*k901;
	r902 =	       c[17]*c[73]*k902;
	r903 =	       c[17]*c[78]*k903;
	r904 =	       c[2]*c[20]*k904;
	r905 =	       c[20]*c[33]*k905;
	r906 =	       c[20]*c[43]*k906;
	r907 =	       c[20]*c[44]*k907;
	r908 =	       c[20]*c[45]*k908;
	r909 =	       c[20]*c[46]*k909;
	r910 =	       c[20]*c[47]*k910;
	r911 =	       c[20]*c[48]*k911;
	r912 =	       c[20]*c[49]*k912;
	r913 =	       c[20]*c[50]*k913;
	r914 =	       c[20]*c[51]*k914;
	r915 =	       c[20]*c[53]*k915;
	r916 =	       c[20]*c[55]*k916;
	r917 =	       c[20]*c[56]*k917;
	r918 =	       c[20]*c[57]*k918;
	r919 =	       c[20]*c[58]*k919;
	r920 =	       c[20]*c[59]*k920;
	r921 =	       c[20]*c[60]*k921;
	r922 =	       c[20]*c[61]*k922;
	r923 =	       c[20]*c[64]*k923;
	r924 =	       c[20]*c[65]*k924;
	r925 =	       c[20]*c[66]*k925;
	r926 =	       c[20]*c[67]*k926;
	r927 =	       c[20]*c[68]*k927;
	r928 =	       c[20]*c[72]*k928;
	r929 =	       c[20]*c[73]*k929;
	r930 =	       c[20]*c[78]*k930;
	r931 =	       c[18]*c[33]*k931;
	r932 =	       c[18]*c[43]*k932;
	r933 =	       c[18]*c[44]*k933;
	r934 =	       c[18]*c[45]*k934;
	r935 =	       c[18]*c[46]*k935;
	r936 =	       c[18]*c[47]*k936;
	r937 =	       c[18]*c[48]*k937;
	r938 =	       c[18]*c[49]*k938;
	r939 =	       c[18]*c[50]*k939;
	r940 =	       c[18]*c[51]*k940;
	r941 =	       c[18]*c[53]*k941;
	r942 =	       c[18]*c[54]*k942;
	r943 =	       c[18]*c[55]*k943;
	r944 =	       c[18]*c[56]*k944;
	r945 =	       c[18]*c[57]*k945;
	r946 =	       c[18]*c[58]*k946;
	r947 =	       c[18]*c[59]*k947;
	r948 =	       c[18]*c[60]*k948;
	r949 =	       c[18]*c[61]*k949;
	r950 =	       c[18]*c[64]*k950;
	r951 =	       c[18]*c[65]*k951;
	r952 =	       c[18]*c[66]*k952;
	r953 =	       c[18]*c[67]*k953;
	r954 =	       c[18]*c[68]*k954;
	r955 =	       c[18]*c[72]*k955;
	r956 =	       c[18]*c[73]*k956;
	r957 =	       c[18]*c[78]*k957;
	r958 =	       c[2]*c[18]*k958;
	r959 =	       c[18]*c[33]*k959;
	r960 =	       c[18]*c[43]*k960;
	r961 =	       c[18]*c[44]*k961;
	r962 =	       c[18]*c[45]*k962;
	r963 =	       c[18]*c[46]*k963;
	r964 =	       c[18]*c[47]*k964;
	r965 =	       c[18]*c[48]*k965;
	r966 =	       c[18]*c[49]*k966;
	r967 =	       c[18]*c[50]*k967;
	r968 =	       c[18]*c[51]*k968;
	r969 =	       c[18]*c[53]*k969;
	r970 =	       c[18]*c[54]*k970;
	r971 =	       c[18]*c[55]*k971;
	r972 =	       c[18]*c[56]*k972;
	r973 =	       c[18]*c[57]*k973;
	r974 =	       c[18]*c[58]*k974;
	r975 =	       c[18]*c[59]*k975;
	r976 =	       c[18]*c[60]*k976;
	r977 =	       c[18]*c[61]*k977;
	r978 =	       c[18]*c[64]*k978;
	r979 =	       c[18]*c[65]*k979;
	r980 =	       c[18]*c[66]*k980;
	r981 =	       c[18]*c[67]*k981;
	r982 =	       c[18]*c[68]*k982;
	r983 =	       c[18]*c[72]*k983;
	r984 =	       c[18]*c[73]*k984;
	r985 =	       c[18]*c[78]*k985;
	r986 =	       c[19]*c[33]*k986;
	r987 =	       c[19]*c[43]*k987;
	r988 =	       c[19]*c[44]*k988;
	r989 =	       c[19]*c[45]*k989;
	r990 =	       c[19]*c[46]*k990;
	r991 =	       c[19]*c[47]*k991;
	r992 =	       c[19]*c[48]*k992;
	r993 =	       c[19]*c[49]*k993;
	r994 =	       c[19]*c[50]*k994;
	r995 =	       c[19]*c[51]*k995;
	r996 =	       c[19]*c[53]*k996;
	r997 =	       c[19]*c[54]*k997;
	r998 =	       c[19]*c[55]*k998;
	r999 =	       c[19]*c[56]*k999;
	r1000 =	       c[19]*c[57]*k1000;
	r1001 =	       c[19]*c[58]*k1001;
	r1002 =	       c[19]*c[59]*k1002;
	r1003 =	       c[19]*c[60]*k1003;
	r1004 =	       c[19]*c[61]*k1004;
	r1005 =	       c[19]*c[64]*k1005;
	r1006 =	       c[19]*c[65]*k1006;
	r1007 =	       c[19]*c[66]*k1007;
	r1008 =	       c[19]*c[67]*k1008;
	r1009 =	       c[19]*c[68]*k1009;
	r1010 =	       c[19]*c[72]*k1010;
	r1011 =	       c[19]*c[73]*k1011;
	r1012 =	       c[19]*c[78]*k1012;
	r1013 =	       c[4]*c[44]*k1013;
	r1014 =	       c[4]*c[46]*k1014;
	r1015 =	       c[4]*c[47]*k1015;
	r1016 =	       c[4]*c[48]*k1016;
	r1017 =	       c[4]*c[49]*k1017;
	r1018 =	       c[4]*c[50]*k1018;
	r1019 =	       c[4]*c[51]*k1019;
	r1020 =	       c[4]*c[53]*k1020;
	r1021 =	       c[4]*c[55]*k1021;
	r1022 =	       c[4]*c[56]*k1022;
	r1023 =	       c[4]*c[57]*k1023;
	r1024 =	       c[4]*c[58]*k1024;
	r1025 =	       c[4]*c[59]*k1025;
	r1026 =	       c[4]*c[60]*k1026;
	r1027 =	       c[4]*c[61]*k1027;
	r1028 =	       c[4]*c[64]*k1028;
	r1029 =	       c[4]*c[65]*k1029;
	r1030 =	       c[4]*c[66]*k1030;
	r1031 =	       c[4]*c[67]*k1031;
	r1032 =	       c[4]*c[68]*k1032;
	r1033 =	       c[4]*c[72]*k1033;
	r1034 =	       c[4]*c[73]*k1034;
	r1035 =	       c[7]*c[33]*k1035;
	r1036 =	       c[7]*c[44]*k1036;
	r1037 =	       c[7]*c[45]*k1037;
	r1038 =	       c[7]*c[46]*k1038;
	r1039 =	       c[7]*c[47]*k1039;
	r1040 =	       c[7]*c[48]*k1040;
	r1041 =	       c[7]*c[49]*k1041;
	r1042 =	       c[7]*c[50]*k1042;
	r1043 =	       c[7]*c[51]*k1043;
	r1044 =	       c[7]*c[53]*k1044;
	r1045 =	       c[7]*c[54]*k1045;
	r1046 =	       c[7]*c[55]*k1046;
	r1047 =	       c[7]*c[56]*k1047;
	r1048 =	       c[7]*c[57]*k1048;
	r1049 =	       c[7]*c[58]*k1049;
	r1050 =	       c[7]*c[59]*k1050;
	r1051 =	       c[7]*c[60]*k1051;
	r1052 =	       c[7]*c[61]*k1052;
	r1053 =	       c[7]*c[64]*k1053;
	r1054 =	       c[7]*c[65]*k1054;
	r1055 =	       c[7]*c[66]*k1055;
	r1056 =	       c[7]*c[67]*k1056;
	r1057 =	       c[7]*c[68]*k1057;
	r1058 =	       c[7]*c[72]*k1058;
	r1059 =	       c[7]*c[73]*k1059;
	r1060 =	       c[7]*c[78]*k1060;
	r1061 =	       c[23]*c[33]*k1061;
	r1062 =	       c[23]*c[44]*k1062;
	r1063 =	       c[23]*c[45]*k1063;
	r1064 =	       c[23]*c[46]*k1064;
	r1065 =	       c[23]*c[47]*k1065;
	r1066 =	       c[23]*c[48]*k1066;
	r1067 =	       c[23]*c[49]*k1067;
	r1068 =	       c[23]*c[50]*k1068;
	r1069 =	       c[23]*c[51]*k1069;
	r1070 =	       c[23]*c[53]*k1070;
	r1071 =	       c[23]*c[54]*k1071;
	r1072 =	       c[23]*c[55]*k1072;
	r1073 =	       c[23]*c[56]*k1073;
	r1074 =	       c[23]*c[57]*k1074;
	r1075 =	       c[23]*c[58]*k1075;
	r1076 =	       c[23]*c[59]*k1076;
	r1077 =	       c[23]*c[60]*k1077;
	r1078 =	       c[23]*c[61]*k1078;
	r1079 =	       c[23]*c[64]*k1079;
	r1080 =	       c[23]*c[65]*k1080;
	r1081 =	       c[23]*c[66]*k1081;
	r1082 =	       c[23]*c[67]*k1082;
	r1083 =	       c[23]*c[68]*k1083;
	r1084 =	       c[23]*c[72]*k1084;
	r1085 =	       c[23]*c[73]*k1085;
	r1086 =	       c[23]*c[78]*k1086;
	r1087 =	       c[23]*c[33]*k1087;
	r1088 =	       c[23]*c[45]*k1088;
	r1089 =	       c[23]*c[47]*k1089;
	r1090 =	       c[23]*c[48]*k1090;
	r1091 =	       c[23]*c[49]*k1091;
	r1092 =	       c[23]*c[50]*k1092;
	r1093 =	       c[23]*c[51]*k1093;
	r1094 =	       c[23]*c[53]*k1094;
	r1095 =	       c[23]*c[54]*k1095;
	r1096 =	       c[23]*c[55]*k1096;
	r1097 =	       c[23]*c[56]*k1097;
	r1098 =	       c[23]*c[57]*k1098;
	r1099 =	       c[23]*c[58]*k1099;
	r1100 =	       c[23]*c[59]*k1100;
	r1101 =	       c[23]*c[60]*k1101;
	r1102 =	       c[23]*c[61]*k1102;
	r1103 =	       c[23]*c[64]*k1103;
	r1104 =	       c[23]*c[65]*k1104;
	r1105 =	       c[23]*c[66]*k1105;
	r1106 =	       c[23]*c[67]*k1106;
	r1107 =	       c[23]*c[68]*k1107;
	r1108 =	       c[23]*c[72]*k1108;
	r1109 =	       c[23]*c[73]*k1109;
	r1110 =	       c[23]*c[78]*k1110;
	r1111 =	       c[22]*c[33]*k1111;
	r1112 =	       c[22]*c[44]*k1112;
	r1113 =	       c[22]*c[45]*k1113;
	r1114 =	       c[22]*c[47]*k1114;
	r1115 =	       c[22]*c[48]*k1115;
	r1116 =	       c[22]*c[49]*k1116;
	r1117 =	       c[22]*c[50]*k1117;
	r1118 =	       c[22]*c[51]*k1118;
	r1119 =	       c[22]*c[53]*k1119;
	r1120 =	       c[22]*c[54]*k1120;
	r1121 =	       c[22]*c[55]*k1121;
	r1122 =	       c[22]*c[56]*k1122;
	r1123 =	       c[22]*c[57]*k1123;
	r1124 =	       c[22]*c[58]*k1124;
	r1125 =	       c[22]*c[59]*k1125;
	r1126 =	       c[22]*c[60]*k1126;
	r1127 =	       c[22]*c[61]*k1127;
	r1128 =	       c[22]*c[64]*k1128;
	r1129 =	       c[22]*c[65]*k1129;
	r1130 =	       c[22]*c[66]*k1130;
	r1131 =	       c[22]*c[67]*k1131;
	r1132 =	       c[22]*c[68]*k1132;
	r1133 =	       c[22]*c[72]*k1133;
	r1134 =	       c[22]*c[73]*k1134;
	r1135 =	       c[22]*c[78]*k1135;
	r1136 =	       c[24]*c[33]*k1136;
	r1137 =	       c[24]*c[43]*k1137;
	r1138 =	       c[24]*c[44]*k1138;
	r1139 =	       c[24]*c[45]*k1139;
	r1140 =	       c[24]*c[46]*k1140;
	r1141 =	       c[24]*c[47]*k1141;
	r1142 =	       c[24]*c[48]*k1142;
	r1143 =	       c[24]*c[49]*k1143;
	r1144 =	       c[24]*c[50]*k1144;
	r1145 =	       c[24]*c[51]*k1145;
	r1146 =	       c[24]*c[53]*k1146;
	r1147 =	       c[24]*c[54]*k1147;
	r1148 =	       c[24]*c[55]*k1148;
	r1149 =	       c[24]*c[56]*k1149;
	r1150 =	       c[24]*c[57]*k1150;
	r1151 =	       c[24]*c[58]*k1151;
	r1152 =	       c[24]*c[59]*k1152;
	r1153 =	       c[24]*c[60]*k1153;
	r1154 =	       c[24]*c[61]*k1154;
	r1155 =	       c[24]*c[64]*k1155;
	r1156 =	       c[24]*c[65]*k1156;
	r1157 =	       c[24]*c[66]*k1157;
	r1158 =	       c[24]*c[67]*k1158;
	r1159 =	       c[24]*c[68]*k1159;
	r1160 =	       c[24]*c[72]*k1160;
	r1161 =	       c[24]*c[73]*k1161;
	r1162 =	       c[24]*c[78]*k1162;
	r1163 =	       c[24]*c[33]*k1163;
	r1164 =	       c[24]*c[43]*k1164;
	r1165 =	       c[24]*c[44]*k1165;
	r1166 =	       c[24]*c[45]*k1166;
	r1167 =	       c[24]*c[46]*k1167;
	r1168 =	       c[24]*c[47]*k1168;
	r1169 =	       c[24]*c[48]*k1169;
	r1170 =	       c[24]*c[49]*k1170;
	r1171 =	       c[24]*c[50]*k1171;
	r1172 =	       c[24]*c[51]*k1172;
	r1173 =	       c[24]*c[53]*k1173;
	r1174 =	       c[24]*c[54]*k1174;
	r1175 =	       c[24]*c[55]*k1175;
	r1176 =	       c[24]*c[56]*k1176;
	r1177 =	       c[24]*c[57]*k1177;
	r1178 =	       c[24]*c[58]*k1178;
	r1179 =	       c[24]*c[59]*k1179;
	r1180 =	       c[24]*c[60]*k1180;
	r1181 =	       c[24]*c[61]*k1181;
	r1182 =	       c[24]*c[64]*k1182;
	r1183 =	       c[24]*c[65]*k1183;
	r1184 =	       c[24]*c[66]*k1184;
	r1185 =	       c[24]*c[67]*k1185;
	r1186 =	       c[24]*c[68]*k1186;
	r1187 =	       c[24]*c[72]*k1187;
	r1188 =	       c[24]*c[73]*k1188;
	r1189 =	       c[24]*c[78]*k1189;
	r1190 =	       c[2]*c[15]*k1190;
	r1191 =	       c[15]*c[33]*k1191;
	r1192 =	       c[15]*c[45]*k1192;
	r1193 =	       c[15]*c[46]*k1193;
	r1194 =	       c[15]*c[47]*k1194;
	r1195 =	       c[15]*c[49]*k1195;
	r1196 =	       c[15]*c[50]*k1196;
	r1197 =	       c[15]*c[51]*k1197;
	r1198 =	       c[15]*c[53]*k1198;
	r1199 =	       c[15]*c[54]*k1199;
	r1200 =	       c[15]*c[55]*k1200;
	r1201 =	       c[15]*c[57]*k1201;
	r1202 =	       c[15]*c[58]*k1202;
	r1203 =	       c[15]*c[59]*k1203;
	r1204 =	       c[15]*c[60]*k1204;
	r1205 =	       c[15]*c[61]*k1205;
	r1206 =	       c[15]*c[64]*k1206;
	r1207 =	       c[15]*c[65]*k1207;
	r1208 =	       c[15]*c[66]*k1208;
	r1209 =	       c[15]*c[67]*k1209;
	r1210 =	       c[15]*c[68]*k1210;
	r1211 =	       c[15]*c[72]*k1211;
	r1212 =	       c[15]*c[73]*k1212;
	r1213 =	       c[15]*c[78]*k1213;
	r1214 =	       c[2]*c[10]*k1214;
	r1215 =	       c[10]*c[33]*k1215;
	r1216 =	       c[10]*c[45]*k1216;
	r1217 =	       c[10]*c[46]*k1217;
	r1218 =	       c[10]*c[47]*k1218;
	r1219 =	       c[10]*c[49]*k1219;
	r1220 =	       c[10]*c[50]*k1220;
	r1221 =	       c[10]*c[51]*k1221;
	r1222 =	       c[10]*c[53]*k1222;
	r1223 =	       c[10]*c[54]*k1223;
	r1224 =	       c[10]*c[55]*k1224;
	r1225 =	       c[10]*c[56]*k1225;
	r1226 =	       c[10]*c[57]*k1226;
	r1227 =	       c[10]*c[58]*k1227;
	r1228 =	       c[10]*c[60]*k1228;
	r1229 =	       c[10]*c[61]*k1229;
	r1230 =	       c[10]*c[64]*k1230;
	r1231 =	       c[10]*c[65]*k1231;
	r1232 =	       c[10]*c[66]*k1232;
	r1233 =	       c[10]*c[67]*k1233;
	r1234 =	       c[10]*c[68]*k1234;
	r1235 =	       c[10]*c[72]*k1235;
	r1236 =	       c[10]*c[73]*k1236;
	r1237 =	       c[10]*c[78]*k1237;
	r1238 =	       c[2]*c[25]*k1238;
	r1239 =	       c[25]*c[33]*k1239;
	r1240 =	       c[25]*c[43]*k1240;
	r1241 =	       c[25]*c[44]*k1241;
	r1242 =	       c[25]*c[45]*k1242;
	r1243 =	       c[25]*c[46]*k1243;
	r1244 =	       c[25]*c[47]*k1244;
	r1245 =	       c[25]*c[48]*k1245;
	r1246 =	       c[25]*c[49]*k1246;
	r1247 =	       c[25]*c[50]*k1247;
	r1248 =	       c[25]*c[51]*k1248;
	r1249 =	       c[25]*c[53]*k1249;
	r1250 =	       c[25]*c[54]*k1250;
	r1251 =	       c[25]*c[55]*k1251;
	r1252 =	       c[25]*c[56]*k1252;
	r1253 =	       c[25]*c[57]*k1253;
	r1254 =	       c[25]*c[58]*k1254;
	r1255 =	       c[25]*c[59]*k1255;
	r1256 =	       c[25]*c[60]*k1256;
	r1257 =	       c[25]*c[61]*k1257;
	r1258 =	       c[25]*c[64]*k1258;
	r1259 =	       c[25]*c[65]*k1259;
	r1260 =	       c[25]*c[66]*k1260;
	r1261 =	       c[25]*c[67]*k1261;
	r1262 =	       c[25]*c[68]*k1262;
	r1263 =	       c[25]*c[72]*k1263;
	r1264 =	       c[25]*c[73]*k1264;
	r1265 =	       c[2]*c[26]*k1265;
	r1266 =	       c[26]*c[33]*k1266;
	r1267 =	       c[26]*c[43]*k1267;
	r1268 =	       c[26]*c[44]*k1268;
	r1269 =	       c[26]*c[45]*k1269;
	r1270 =	       c[26]*c[46]*k1270;
	r1271 =	       c[26]*c[47]*k1271;
	r1272 =	       c[26]*c[48]*k1272;
	r1273 =	       c[26]*c[49]*k1273;
	r1274 =	       c[26]*c[50]*k1274;
	r1275 =	       c[26]*c[51]*k1275;
	r1276 =	       c[26]*c[53]*k1276;
	r1277 =	       c[26]*c[54]*k1277;
	r1278 =	       c[26]*c[55]*k1278;
	r1279 =	       c[26]*c[56]*k1279;
	r1280 =	       c[26]*c[57]*k1280;
	r1281 =	       c[26]*c[58]*k1281;
	r1282 =	       c[26]*c[59]*k1282;
	r1283 =	       c[26]*c[60]*k1283;
	r1284 =	       c[26]*c[61]*k1284;
	r1285 =	       c[26]*c[64]*k1285;
	r1286 =	       c[26]*c[65]*k1286;
	r1287 =	       c[26]*c[66]*k1287;
	r1288 =	       c[26]*c[67]*k1288;
	r1289 =	       c[26]*c[68]*k1289;
	r1290 =	       c[26]*c[72]*k1290;
	r1291 =	       c[26]*c[73]*k1291;
	r1292 =	       c[26]*c[78]*k1292;
	r1293 =	       c[27]*c[33]*k1293;
	r1294 =	       c[27]*c[43]*k1294;
	r1295 =	       c[27]*c[45]*k1295;
	r1296 =	       c[27]*c[46]*k1296;
	r1297 =	       c[27]*c[47]*k1297;
	r1298 =	       c[27]*c[48]*k1298;
	r1299 =	       c[27]*c[49]*k1299;
	r1300 =	       c[27]*c[50]*k1300;
	r1301 =	       c[27]*c[51]*k1301;
	r1302 =	       c[27]*c[53]*k1302;
	r1303 =	       c[27]*c[54]*k1303;
	r1304 =	       c[27]*c[55]*k1304;
	r1305 =	       c[27]*c[56]*k1305;
	r1306 =	       c[27]*c[57]*k1306;
	r1307 =	       c[27]*c[58]*k1307;
	r1308 =	       c[27]*c[59]*k1308;
	r1309 =	       c[27]*c[60]*k1309;
	r1310 =	       c[27]*c[61]*k1310;
	r1311 =	       c[27]*c[64]*k1311;
	r1312 =	       c[27]*c[65]*k1312;
	r1313 =	       c[27]*c[66]*k1313;
	r1314 =	       c[27]*c[67]*k1314;
	r1315 =	       c[27]*c[68]*k1315;
	r1316 =	       c[27]*c[72]*k1316;
	r1317 =	       c[27]*c[73]*k1317;
	r1318 =	       c[27]*c[78]*k1318;
	r1319 =	       c[2]*c[29]*k1319;
	r1320 =	       c[29]*c[33]*k1320;
	r1321 =	       c[29]*c[43]*k1321;
	r1322 =	       c[29]*c[44]*k1322;
	r1323 =	       c[29]*c[45]*k1323;
	r1324 =	       c[29]*c[46]*k1324;
	r1325 =	       c[29]*c[47]*k1325;
	r1326 =	       c[29]*c[48]*k1326;
	r1327 =	       c[29]*c[49]*k1327;
	r1328 =	       c[29]*c[50]*k1328;
	r1329 =	       c[29]*c[51]*k1329;
	r1330 =	       c[29]*c[53]*k1330;
	r1331 =	       c[29]*c[54]*k1331;
	r1332 =	       c[29]*c[55]*k1332;
	r1333 =	       c[29]*c[56]*k1333;
	r1334 =	       c[29]*c[57]*k1334;
	r1335 =	       c[29]*c[58]*k1335;
	r1336 =	       c[29]*c[59]*k1336;
	r1337 =	       c[29]*c[60]*k1337;
	r1338 =	       c[29]*c[61]*k1338;
	r1339 =	       c[29]*c[64]*k1339;
	r1340 =	       c[29]*c[65]*k1340;
	r1341 =	       c[29]*c[66]*k1341;
	r1342 =	       c[29]*c[67]*k1342;
	r1343 =	       c[29]*c[68]*k1343;
	r1344 =	       c[29]*c[72]*k1344;
	r1345 =	       c[29]*c[73]*k1345;
	r1346 =	       c[29]*c[78]*k1346;
	r1347 =	       c[2]*c[30]*k1347;
	r1348 =	       c[30]*c[43]*k1348;
	r1349 =	       c[30]*c[44]*k1349;
	r1350 =	       c[30]*c[45]*k1350;
	r1351 =	       c[30]*c[46]*k1351;
	r1352 =	       c[30]*c[47]*k1352;
	r1353 =	       c[30]*c[48]*k1353;
	r1354 =	       c[30]*c[49]*k1354;
	r1355 =	       c[30]*c[50]*k1355;
	r1356 =	       c[30]*c[51]*k1356;
	r1357 =	       c[30]*c[53]*k1357;
	r1358 =	       c[30]*c[54]*k1358;
	r1359 =	       c[30]*c[55]*k1359;
	r1360 =	       c[30]*c[56]*k1360;
	r1361 =	       c[30]*c[57]*k1361;
	r1362 =	       c[30]*c[58]*k1362;
	r1363 =	       c[30]*c[59]*k1363;
	r1364 =	       c[30]*c[60]*k1364;
	r1365 =	       c[30]*c[61]*k1365;
	r1366 =	       c[30]*c[64]*k1366;
	r1367 =	       c[30]*c[65]*k1367;
	r1368 =	       c[30]*c[66]*k1368;
	r1369 =	       c[30]*c[67]*k1369;
	r1370 =	       c[30]*c[68]*k1370;
	r1371 =	       c[30]*c[72]*k1371;
	r1372 =	       c[30]*c[73]*k1372;
	r1373 =	       c[30]*c[78]*k1373;
	r1374 =	       c[33]*c[37]*k1374;
	r1375 =	       c[37]*c[46]*k1375;
	r1376 =	       c[37]*c[47]*k1376;
	r1377 =	       c[37]*c[51]*k1377;
	r1378 =	       c[37]*c[54]*k1378;
	r1379 =	       c[37]*c[55]*k1379;
	r1380 =	       c[37]*c[56]*k1380;
	r1381 =	       c[37]*c[57]*k1381;
	r1382 =	       c[37]*c[58]*k1382;
	r1383 =	       c[37]*c[59]*k1383;
	r1384 =	       c[37]*c[60]*k1384;
	r1385 =	       c[37]*c[61]*k1385;
	r1386 =	       c[37]*c[64]*k1386;
	r1387 =	       c[37]*c[66]*k1387;
	r1388 =	       c[37]*c[67]*k1388;
	r1389 =	       c[37]*c[68]*k1389;
	r1390 =	       c[37]*c[72]*k1390;
	r1391 =	       c[37]*c[73]*k1391;
	r1392 =	       c[37]*c[78]*k1392;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY SPECIES ===================== 
	// ============================================================ 
	R[1] =	       r476+r488+r485+r481+r486+r551+r585-r594-r596+r560-r598+r489+r641+r482+r480+r636+r492+r487+r464+r637+r474+r642+r638+r550+r461+r490+r475;
	R[2] =	       r191-r146-r1190-r223-r202-r215-r457-r1238+r496-r226-r693-r958-r326-r157-r220-r578-r213-r486+r460+r258-r1265-r214-r147-r286-r643-r151-r552+r12-r156-r221-r904-r1-r3-r4+r5-r309-r310-r1214-r546-r291-r311-r200-r17-r357-r160+r532-r1347-r876+r641+r7-r148-r472-r510-r152-r211+r531-r208-r16-r400-r219-r153+r13-r473-r206-r479-r203-r199-r217-r159-r201-r198-r344-r222-r350-r212-r330-r209-r154-r360-r150-r158-r796+r533-r10-r207-r210-r320-r216-r204-r1319-r149-r225-r402-r224-r218-r155;
	R[3] =	       r137-r661+r133+r322-r44+r414+r906+r421+2.0*r436+r798+r433+r317+r374+0.15E1*r435-r583+r412+r372-r662+r471+r134+r467+r12+r434+r1267+r1137-r296+r353-r536-r663+r240+r306+r304-r2+r605+r48+r376+r373+r1240-r664-r666+r960+r26+0.3*r423+r377-r45+r367+r438+0.15*r417-r667+r428+r482+r453+r363-r656+r522+2.0*r439+r22+r1348+r878+r987-r657+r261+r60-r668+r274+r130+r647+r408+r369+0.75*r251-r658+r1294-r9+r568+r415+0.4*r390-r380+r932-r515-r669+r720+r771+r422+r136+r424-r659+r441+r131+r370+r185+r57+r1164+r507+r493+r182+r604-r665-r670+r391+r1321+r622-r660+r43+r132+r456+r371+r361+r141+r447+r267;
	R[4] =	       r671+r11-r1033-r1018+r540+r1241+r485+r167+r362-r1016-r1034+r624+r275+r245+r253+r879-r1024+r246+r772+r591+r1112+r450+r563+r297+r570+r5+r308+r310-r1014-r1026-r327+r458+r1268+r470+r355-r367-r1019-r1028+r497-r1025+r851+r509+r378+r525+r961+r1322+r368+r517-r22+r8-r1029-r1020+r1062+r799+r514-r1021+r464-r1030-r1017+r1349+r825+r746+r988-r1015+r262+r907+r520+r325-r1031-r1022+r465+r252+r381+r721+r933+r649+r1138+r584+r364+r244+r268+r1165-r1027-r1032+r1036-r1023;
	R[5] =	       r192+r165+r443+r223+r202+r215+r321+r572+2.0*r342+r538-r20+r556-r551+r166+r398+r265+r444+r278-r197-r534+r548+r403+r282+r586+r634+r303+r588+r271+r343+r247+r266+r547+2.0*r560+r543+r306+r305+r600+r310+r336+r311+r180+r346+r630-r21+r17-r18+r263+r193+r175+r549+r312+2.0*r347+r189+r328+r544+r358-r16+r161+r323-r22+r338+r318+r181+r348+r261+r400+r535+r632+r171+r329+r251+r568+r198+r589+2.0*r344+r573+r262-r19+r340+r330+r172+r550+r505+r554+r176+r320+r576+r351+r341+r225+r345+r331+r141;
	R[6] =	       -r321+r529+r20+r578+r177+r551+r585+r184+r197+r552+r534-r588+r631+r21+r18+r337+r581+r194-r312-r328+r16+r22+r178+r195+r201-r589+r19+r185+r260+r182+r264+r557+r575+r216+r633;
	R[7] =	       -r1043+r1351-r1059-r1055+r881-r1047+r723+r577+r748-r1056+r672-r1044+r1375+r935+r1167-r1049+r801-r1045+r276-r1058+r909+r1193+r1217+r1014+r963-r1039+r774+r263-r1050+r696-r368-r1051-r1040+r1270+r1324+r379-r1037-r1048-r1046+r13-r1052-r369+r375-r1041+r1140-r1053+r14+r1064-r1035+r1243-r1057+r269-r1042-r1054+r1296+r853-r1036-r1060+r990+r827;
	R[8] =	       -r671+r650+r241+r1066-r682+r366-r683-r676+r883+r855+r1016-r686-r292+r1169+r1353+r937-r672+r272-r294+r384+r1298+r829-r293+r266+r1245+r1142+r803+r911+r992+r365-r687+r394-r645+r1326+r698-r677+r750-r675-r688+r47-r673-r685-r678+r1040+r1115-r50-r689+r965-r620-r679+r652+r1090-r690+r725+r23+r1272+r776-r51-r680-r684-r691+r279-r681-r692-r149-r371-r111;
	R[9] =	       r54-r759+r25-r755-r769-r372-r748-r760-r745+r1091-r756+r1067+r1195+r1170-r747+r1143-r614-r764-r613+r912-r762+r1299+r1246-r757-r750+r675-r761+r884-r765+r726-r646+r699+r1327+r1354+r804+r938-r766+r1219-r752+0.25*r251+r1017+r966+r1041-r746+r856+r830-r758-r767-r131-r753+r1273-r154+r1116-r763+r24-r62-r754+r777-r768+r111+r993-r749;
	R[10] =	       -r421+r755+r123+r703+r1174+r227+r1331+r1071-r186-r1233-r366-r86-r362+r970-r147+r1045+r1277+0.5*r247-r1234+r860+r1199-r1214-r1215-r1216-r1217-r1218-r1220-r1221-r1222-r1224-r396-r1225-r387+r26+r1303-r1226+r1358+0.5*r175+r942+r834-2.0*r140-r1227+r997+r1095+r1120-r79-r429+r888-r1228-r1219+r80-r85+r730-r1235+r75-r1229+r808-r61-r1236+0.33*r395-r1230-r33-r172+r781-r420+r72-r1231+r101-r1237+r132+r1250+0.25*r225-r361+r1378+r1147-r1232;
	{
double MapleGenVar1 = r1323-r773-r133+r1341-r788+r1355+r831-r822+r126-r793+r1335-r806+r1325+r1018-r173+r1047+0.8*r117-r798+r1117+r1320+r1331-r797-r63+r1073+r1300-r35-r435+r1342+r258+r676-r811-r789-r780-r816-r124+r74+r134+r1122+r1144-r815-r772-r801+r1196+r1343+r1171-r803+r1252-r616+r913+r917+r1220+r1225-r200-r817-r818+r1326-r68+r862+r1068+0.2*r128-r774+r757+r1336-r809+r249-r794-r812+r47+r1380+r656-r792+r836+r1334-r129+r90+r1322+r1327+r1345+r1247+r1337-r784-r804+r116;       
	R[11] =	      MapleGenVar1+r705-r807-r799+r1305+r890-2.0*r139+r1324-r775-r821+r994-r114-r782+r87-r795-r408+r700+r109+r752+r1360+r1338+0.5*r251-r785+r999+2.0*r1328-r819+r27+r1092+r944-r390+r1279-r813-r779-r776-r791+2.0*r1333-r790+r1176+r1344+r1332-r771-r808+0.67*r395+r110+r1339+r967+r659+r680+r1149-r786+r1329+r209+r1097-r781+r1022-r158+r939-r796+r1042+r1321-r823+r72+r857+r176-r410+r210-r770-r132+r1340+0.85*r127+r972-r777+r1274-r787-r814+r885-r802+r727+r1319-r800+r1346+r1330+r732-r820;
}
	R[12] =	       r894+r1043-r854+r736+r1275+r1309-r831+r806-r852+r1180-r868-r867+r940-r157-r826-r28-r374-r872+r1172-r855-r864+r1364+r1003-r833-r874-r134-r841-r850-r859+r886-r156-r829-r828+r995-r869-r860-r871+r1126-r865-r875+r1197+r914+r1204+r921+r1221+r1256-r373+r1026+r709-r824-r845+r728+r677-r862+r1019-r839+r948+r761-r834-r843-r851+r1093-r836+r1153+r976+r1384+r1051+r1337+r1356-r849+r1228+r1077-r873+r1248-r848+r1283+r1301-r825-r856-r830+r779+r1069-r842+r1377-r835+r1145+r701+r684-r837+r753+r1329-r846-r863+r1101+r968-r857+r52+r1118-r861-r847-r29+r787+r814-r844-r838-r853-r870-r827;
	R[13] =	       -r192-r146+r73-r44+r226-r697-r703-r693-r168+r220-r63+r385-r56-r332-r393-r289-r113-r335-r64-r694+r301-r396-r717-r427+r617-r709+r346+r205-r30+r635-r698-r714+2.0*r135-r438-r618+r445-r333+0.7*r242-r696+r347+r59-r710-r718+r104-r699-r707-r66-r119-r705+2.0*r46+r313-r50-r181-r716+r70+r130-r120-r700-r711+r188-r203+r314-r695+r359-2.0*r55-r198-r190-r715+r380-r61+r71-r42-r397-r701+r92-r81-r712+r196-r334-r381-r437-r704-r62+r244-r702-r708-r65-r706-r331-r713+r95;
{	double MapleGenVar1 = r1323-r744+r1341-r736+r115-r169+r1335+r1325-r738+0.25*r290-r117+r94+r1320-r125-r723+r1331-2.0*r138+0.25*r435+r1342-r56+r887-r733+r1173+r780+r112-r734+r1357+0.8*r124+r1276+r833+r1044-r425+0.5*r393+r294+r1198+r859-r724+r1094+r1302+r1343+r299+r298+r248-r615+r915+r1222-r288+r48-2.0*r67+r89+r941+r205-r394+r996-r728+r1326+r250-r170-r68-r45-r128-r739+r1336-r428+r140+r59-r726+r1334+r208-r439+r1322;
	R[14] =	             MapleGenVar1+r69+r1327-r740-r737+r1345-r31+r1337+r98+r678-r116+r1020+r338+r807-r735-r389+r657+r139+r1324-r719+0.5*r114-r440-r153-r130-r741+r171+r1338-r730+0.5*r251-r199+0.3*r231-r725+r1328-r409-r51-r720+r1333-r742+r1344+r1332+r446+r1146-r395-r42-r121+r1249+r1339-r441+r131+r1119+r451+r1329+r172-r731-r721-r391+r1321+r52-r743+r1340-r127+r754+r702-r82-r204-r727+r1319+r1346+2.0*r1330+r1070-r722+r969-r732;
}
	R[15] =	       -r191+r133-r1190-r126-r1206-r1198-r1195+0.5*r247-r1196-r1192-r1203-r1207-r1199-r1201-r1205-r1200-r1197-r1194-r1209-r1202-r1208-r1204-r1193-r1210-r1211-r1212-r1213-r84-r365+0.5*r175-r148-r388-r363+r211-r104+r358+r79-r171-r80-r32-r430-r419-r422-r397-r364-r122+0.25*r225-r1191-r34;
	R[16] =	       -r36+r57-r64+r91+r105+r106+r120+r122+r136-r188+r245-r351-r352-r386-r431-r440;
	R[17] =	       -r894+r93-r897-r881-r416-r883+r811-r887+r733-r879-r877+r246+r1150-r886+r1177-r889-r895-r882-r893-r900-r901+r1201-r896-r899-r898-r902-r892-r880+r918-r37+r1280+r107+r58+r1381+r1226-r876-r135-r175-r174+r140-r884-r189+r1123+r108+r1334-r66+r784+r119+r1253-r878-r890-r888+r60+r1048+r109+r973+r1306+r1074+r758-r136+r71+r121+r110-r441+r1000+r1361+r837-r903+r945+r863-r437+r660+r43+r442+r681-r885+r1098-r432-r65+r706+r1023;
	{
	double MapleGenVar1 = -r951-r137+r661-r187+r53+r788-r934+r759+r1335-r980+r1099+0.2*r117-r958+r1075+r867-r940-r971+r682+r138-r983-r970+r1127+r864+r1310-r947+r734-r937+r1024-r950-r959-r935+r841+r815+r1049+r1178-r981+r895+r663+r1181+r1205+r892+r1202+r919-r962+r922-r38-r941-r936+r762-r985-r960+r1004-r952-r963-r975+r1257+r1281-r948;       
	R[18] =	      -r942+r812+r76+r1227-r953+r710-r964+r685-r961+r737-r976+r707-r938-r943+r139-r965-r931-r954+0.5*r114+r1102+r1052+r1338+r1385-r159+r1229-r982+r785-r973-r966-r944+0.6*r390-r955+r1124+r1078+r1365-r932-r984-r967+r1307+r1284-r978+r1154-r945-r956+MapleGenVar1-r939-r933-r968+r1382+r1362+r1001+r1254-r972+r1027-r979+r1151+r838-r957-r969;
	}
	R[19] =	       -r1002+r77+r1251+r971+r1278+r1379-r991-r1003+r756+r1072+r1148-r995+r889-r1005+r1200+r916+r1224-r992-r1007-r1004-r996-r160-r39+r1175+r809-r1008-r986+r1304-r997-r40+r1359+r943-r987-r1009-r994+r1046+r782+r70+r1021+r679+r658+r75-r999+r1096-r988-r1010+r1332+r835-r1000+r731-r989-r1011+r704-r1006+r1121-r1001+r861-r993-r990-r392-r1012;
	R[20] =	       r73+r137+r1363+r54-r115+r1002-r929-r906+r77-r123-r290-r433+r125+r213-r412+r683+r760+r947+r1152+r662-r112+r1100+r398+0.2*r124-r930+r74+r1255+r1383-r904+r865+r893+r1203-r905-r908-r909-r910-r911-r912-r913-r914-r915-r916-r917-r918-r919-r921-r922-r205-r923+r1076-r423-2.0*r78+r49+0.8*r128+r975-r438+r1336+r839-r417-r193+r1050+r1025+r399+r76-r924+r1179-r439+r129+r1282+r69+r735-r418-r925-r408+r41+r99-r926+r813-r424+r42-r907+r212+r786+0.5*r235-r927+r96-r176-r43+0.15*r127+r1308+r708-r928+r1125-r411;
	R[21] =	       r83-r105-r108+r335+r351+r352+r353+r355-r359-r360;
	{
		double MapleGenVar1 = -r1134+r854+0.5*r187+r223+r1244+r1325-r1131+r697+0.55*r290+r1297+2.0*r270+r321+r1141+r256-r1117-r1113+0.5*r186+r183+r1089+r234-r177-r1127+r991+r147+r1352+r275+r265+r280+2.0*r277+r567+r272+r273-r1122+r653+r654-r1133+r282+r724-r1112+r828+r281+r276-r302+r882-r1126+r221+r240+r307+r309+r1194+r910+r1218+r936+r327+r200+r180-r142-r1135+r1039-r1129; 
		R[22] =	            MapleGenVar1-r194+r249+r312-r1123+r228+r673+r964+r354-r1120+r1376-r1115+r233+r775+r257+r274-r1128+r1271+r206+r162+2.0*r199+0.35*r231-r375+r201+r198+r626+r319+r190-r1124+r1015-r1130+r259+r222-r370+r163-r1119+0.5*r235+r269+r237-r1116-r182-r196-r150+r1168+r279-r1118+r207-r1121+r1065+r268+r236-r1111+r802-r1132+0.5*r225-r555-r1125+r218-r141+r267+r749;
}
	R[23] =	       -r1066-r1080+r1131+r738-r1099-r1083+r1182+r1185+r868-r1075-r1104-r1071-r1073-r167+r1233+r1342+r1314-r1108-r1089+r1206+r789+r686-r1091+r1056+r816-r1100+r280+r1388+r273+r950+r278-r1067-r151-r1072+r281-r1081+r271+r981-r1094+r871+r1005+r1366+r896+r899+r1209-r376+r664+r845-r1085+r923+r714-r1076+r1369-r377-r1068-r1105+r1028-r1061+r667-r1110+r1008-r1093-r152+r953+r792+r1258-r378-r1095-r1062-r143-r1086+r689-r379-r1077+r1128+r766+r741+r1155-r1102+r711+r1288-r1063-r1090+r926-r144-r1096+r819-r1092-r1074-r1087-r1078-r1069+r842+r1230+r1339+r1053+r978+r1158-r1064+r1031-r1097+r1261-r1084+r763-r1107-r1101+r1386+r1311-r1065-r1098+r1285-r1088-r1070-r1109;
	{
double MapleGenVar1 = 0.5*r187+r1341-r1139+r1387+r169+r1055-r1183+r793+r1289+0.2*r290+r980+r1083-r1182-r1180-r1185-r1141-r1174+r1287+r872-r1172-r1173-r1152+r1389-r286-r1169+r283-r1144-r1150-r1167-r1170-r1137-r1148+r1081-r1143-r1178-r1177+r1234+r1343-r1166-r1142-r1171+r900-r1181+r898+r1208+r1210-r1162+r666+r1007+r200+r952+r818+r250+r1105+r1315-r1175+r688+r765-r1179;
		R[24] =	            r740-r1153+r1370-r178+r668+r925+r1009+r1313+MapleGenVar1+r954+r232-r1155-r195+0.35*r231-r1156+r982+r1030+r690+r243-r1163+r1260+r715+r1130-r1140-r1188+r791+r742-r1176-r1146-r1145+r767-r1160-r185-r1149-r1158-r1154-r1164+r1057-r1161+r927+r846-r1168-r145-r1136+r1107-r1138-r1189-r1165-r1187+r1032+r844+r1132-r1151+r870+r1262+r713+r1368-r1147+r1232-r155+r820;
	}
R[25] =	       r951-r202-r179-r1244+r897-r1238+r1183+r1080+r226-r1263+r1286-r1251-r1241+r168+r1104+0.5*r186-r183-r166+r147+r253-r184-r1264-r1239-r282+r764+r869-r1255+r302+r1367+r287-r1245+r248-r1252+r1207-r1256-r336-r1240+r291-r180+r687+r357+r817-r1246-r337+r1129+r739-r1257+0.3*r242+r843+r924-r1258-r1242-r619-r1247+r1029-r338-r1253+r219-r1248-r339+r1156-r201-r1260+r790-r1249-r340-r1243+r712-r1261+r252+r665+r1006+r1231+r1054+r1340-r1250+r164+r1312-r1254+r979-r1262+r224;
	R[26] =	       -r1275-r1289-r1286-r1278-r1287+r383+0.5*r435-r1265-r398-r1276+r393+r384+r403-r1267-r1277-r1291-r1280+r396+r387-r1266-r1268+r394+0.7*r423-r1281-r1292+0.85*r417-r1269+r388-r399-r1282-r1270+r389-r400-r1271-r1288-r1290-r1283+0.4*r390-r1279-r1272-r409+r397-r1284-r1273+r391-r410-r1274-r1285-r382-r411-r447+r392-r413;
	R[27] =	       r414-r1309+r1033+r421-r436+r1263-r1297+r433-r448+r416+r983-r1300+0.5*r435-r1314+r1108-r412-r1310+r425-r434-r1298-r403+r1133-r450-r1302+r1058+r901+r1211+r406+r427-r1299-r1303+0.3*r423+r438-r1315+0.15*r417+r794+r428-r1304+r439-r1293-r1305+r429+r418+r716+r821-r1313+r873+r440+r408+r1235+r405+r1290-r1294+r415-r1317+r430-r1306+r1371-r1301+r419+r955+r669+r409+r1010+r1344+r446+r422-r401+r424-r1295-r426+r441+r1160-r1307+r404-r1318+r691+r431+r1084+r437+r1390+r420+r743+r410-r1311-r1308-r1312+r1187-r1296+r847+r928+r768+r432-r402+r411-r413;
	R[28] =	       r412+r413+r426+r434+r436+r447+r448+r449;
	R[29] =	       -r1323-r1341-r1335-r1325-r1320-r1331-r1342-r1343-r1326-r1336-r1334-r1322-r1327-r1345-r1337-r1324-r1338-r1328-r1333-r1344-r1332-r1339-r451-r1329-r1321-r1340-r1319-r1346-r1330;
	R[30] =	       r1134-r1351+r744-r1363-r1355+r929+r1059+r822+r511+r769+r1034-r1364-r1352-r1357-r1353+r874+r1264+r519-r1367-r1366+r902+r1212-r452+r1291+r489+r717+r462+r1085-r1347-r1369+r527-r1358+r1345-r1356-r1354-r1359-r1348-r1370+r579+r795-r1360+r848+r1317-r1349-r1371-r1365+r1391+r1188+r1236+r984-r1361+r1161+r956-r1350+r1011+r670-r1362-r1373+r692-r1368+r1109;
	R[31] =	       r457-r511+r499+r578+r571-r508+r653-r558+r617+r645+r527+2.0*r526+r524-r509+r472+r469-r510+r522+r646+r525-r512+r506+r454-2.0*r514+r528+r521-r507+r505+r490+r576-r513;
	R[32] =	       -r476+r565+r466+r468+r511+r529-r499+r644+2.0*r556+r508-r585+2.0*r640+r471+r567-r653+r558-r503+r552+r534-r591-r586-r634+r588+r553-r601-r602-r599-r600-r603-r605-r606-r607-r608-r609-r610-r611-r617-r645-r526-r500+r549+r509+r510-r646-r480+r531-r463-r512+r478-r506-r632+r473+r479-r464+r530+r568+r520+r507-r604+2.0*r533+r484-r505-r502-r490+r513-r592-r504+r456-r633-r639+r597;
	R[33] =	       r650-r466-r529-r1320-r1374-r797-r644-r477-r556-r745-r877+r519-r959+r503-r850-r534-r1239-r654-r694+r559-r905-r1215-r631-r824-r1266-r532+r500-r581-r1061-r986-r531+r517-r1293-r931-r719-r535+r647-r530+r652-r501-r1163-r1087-r515+r648-r528+r520+r516-r1035+r518-r465-r1136-2.0*r533+r649+r502-r557-r770-r513-r1111-r1191;
	R[34] =	       r465+r477+r483+r491+r493+r495+r497+r499+r501+r512+r514-r551+r557+r586-r597-r636-r637-r638+r639-r640-r641-r642;
	R[35] =	       -r491-r492-r493-r494-r495-r496-r497-r498-r499-r500-r501+r581;
	R[36] =	       r1320+r1374+r797+r651+r745+r877-r519+r959+r850+r1239+r654+r694-r559+r905+r1215+r824+r1266+r532+r1061+r986-r517+r1293+r931+r719+r535-r652+r501+r1163+r1087+r515+r528-2.0*r520-r516+r1035-r518+r1136+r770+r513+r504+r1111+r1191;
	R[37] =	       -r541-r1387-r540-r1374-r538-r1379+r561-r1389+r930-r1388-r643-r1375+r587+r591+r582+r634+r593+r594+r596+r536-r1383+r601-r543+r606+r607+r875+r613+r615+r616+r1162+r1213-r539+r985+r629+r630+r635-r1381+r1135+r618+r1292+r1110-r1380-r537+r718+r619-r1376-r1384+r849+r1086+r620-r1385-r1391+r621-r1377+r1318+r903+r823-r1390-r542-r1386-r1382+r1237+r1189+r1373+r633+r1346+r957+r1060+r597-r1378+r1012;
	R[38] =	       r541-r562-r563-r564-r625;
	R[39] =	       r542+r554+r555+r558+r559+r562-r572-r573-r574-r575-r576-r577-r578-r579-r580-r581-r582+r583-r584+r608+r609+r612+r614;
	R[40] =	       -r561-r565-r566-r567-r568-r569-r570-r571+r610+r611-r612+r631+r632;
	R[41] =	       -r621-r622-r623-r624+r625;
	R[42] =	       -r647-r648-r649-r650-r651;
	{
double  MapleGenVar1 = r541+r661+r628+r93-r322-r11+r44+r414+r102-r906+r545-r25+r421+r468+r436-r798+r83+r529+r342+r416-r494-r317+r20+r481-r374-r167+r583-r86+2.0*r412+2.0*r177-r372+r332+r239-r561-r166+r103+r295+r662+r425+r393+r569-r283+r294-r467-r548+r335-r12+r434+r587+r403-r1267+r300+r593-r1137+r343+r491+r595+r590+r296-r353+r302+r536+r663+r287+r299+r602+2.0*r305-r304+r301-r1+r2-r3+r298-r4+r307+r608+r609+r610+r611+r452-r84+r288-r376-r373-r1240+2.0*r449+r664+r107+r666+r387-r6+r427-r960+r311+r327-r26-r58+r30+r105+r394+r142-r377+r45-r367+r39+r333+0.15*r417+r667+r428-r482+r388-r453+r324-r59+r469; 
R[43] =	           MapleGenVar1-r363+r228+r656-r522+r537-r104+r108+r407+r161+r90-r368+r31+r323+r119-r1348+r478+r178-r46+2.0*r313-r878+2.0*r318-r987+r418-r506+r389+r657-r261-r60+r668+r454-r274+r87-r647+r408+r120+r91-r85+r329+r99+r162-r369+r487+r483+r658+0.35*r231+r349+r314-r1294-r530+2.0*r9-r637+r144-r27-r23+r419+r319+r380-r932+r515+r669-r621-r573+r409-r720-r771+r422+r401+2.0*r474+r121+r426+r521+r659+r19-r370+2.0*r106+r163-r57+r260-r1164-r81+r33+r315-r507-r638-r493+r182+r334+2.0*r461+r665+r670+r238-r1321+r96+r420+r542+r264-r622-r523+r475+r660+r320+r442+r164-r82+r29-r341+r34-r371+r111+r639-r361+r382+r447+r392+r413-r267;
}
{
	double MapleGenVar1 = -r671+r1323+r476+r146-r541+r773-r352-r187-r11+r934+r1139+r223+r202+r457-r545-r241+r1033+r226+r1018-r540-r290+r852-r1241+r256-r485+r1113+r494-r20+r826-r186-r356+r477-r183-r571-r362+r508+r1016-r239+r1034+r561-r624-r275-r245-r253-r184-r879-r471+r444-r567+r1024+r564-r246-r284-r289-r772-r403+r282-r1112-r450+r747-r563-r343+r254+r566-r247-r553-r297-r570+r1166-r240-r543+r1192+r1+r2-r248-r5-r307-r308+r606+r607+r880+r908+r1216+r962+r1014+r1026+2.0*r6+r539+r311-r458+r21-r1268-r470-r250+r574-r355+r367+r1019+r1028+r7-r497-r242+r1025-r249+r524;  
	R[44] =	           r1269-r399-r851-r324-r509-r189-r469-r378+r463-r525-r961+r1242-r1322+r368-r517+r459-2.0*r8+r512+r1029+r1020-r478-r1062+r143-r799-r181+r625+r492+r1037+r257+r400+MapleGenVar1+r219+r473-r329-r188+r1021-r498-r251+0.3*r231+r1063-r349+r1030+r1017+r530+r695-r359-r568+r637-r1349-r243-r825-r746-r988-r319+r455+r1015+r344+r648+r259-r262+r1295-r19-r907-r642-r185-2.0*r14+r516+0.5*r235-r325+r1031+r638+r1350+r1022-r182+r989-r252+r255-r381+r627-r721-r933-r649-r238-r1138-r542+r264+r502+r523-r584-r364+r320+r495-r442-r244+r592-r268-r504-r1165+r1027+r1032+0.5*r225+r1088+r800-r1036+r722+r1023-r15;
	}
R[45] =	       -r1323-r565-r773-r623-r934-r443-r1139-r179-r169+r241-r496-r468-r173-r852-r168-r342+r326-r1113-r538-r826-r460-r234-r177-r508-r332-r640+r214-r398-r564-r503-r747-r566+r221-r1166+r601-r306-r305-r1192+r1-r2+r599+r309-r880-r908-r1216-r962+r546-r288-r539-r180-r18-r170-r574-r337-r641-r7+0.7*r242-r175-r549-r524-r1269-r174+r472-r228-r537+r480-r531-r544+r16-r354-r1242-r323+r636+r8-r178-r233-r318-r348-r1037-r454-r232-r171+r479-r483-r231-r1063+r217-r695-r626-r455-r648-r1295+r350-r260-r516-r235+r330-r237-r172-r1350-r989-r230-r484+2.0*r10-r176-r576-r495-r575-r351-r236-r456-r1088-r800-r331-r229-r722-r15;
{
double MapleGenVar1 = -r191+r1043-r1351+r1190+r1059+r1238+r1055-r881+r693+r1047+r958-r256+r157-r723+r220+r213-r577+r486-r258-r748+r1265+r1056+r286-r672-r444+r1044+r643+r151-r1375-r935-r12-r1167-r282+r156+r1049-r801+r1045-r276-r254+r1058+r904+r3+r4-r5-r909-r1193+r1214-r1217-r1014-r6+r291-r21+r17+r160-r532+r1347+r876-r963+r1039-r774; 
	R[46] =	            MapleGenVar1-r263-r7+r1050-r696+r510+r152+r211+r208+r1051-r459+r1040-r1270-r1324-r379+r1037-r257+r1048+r1046+r153-2.0*r13+r206+r1052+r369+r498+r159-r375+r1041-r190-r1140-r259+r1053+r642+r212-r1064+r1035-r1243+r1057-r269+r209+r154+r150+r158+r796-r255+r1042-r264-r502+r207+r210+r1054-r1296+r1319+r149-r853+r402+r1036+r1060-r990+r155+r15-r827;
}
	R[47] =	       -r192+r1134+r565-r854+r352+r202+2.0*r179-r1244+r215-r1325+r1131-r697+r173-r1297-r270-r1141-r529+r1117+r326+r1113+r356+r183-r1089+r571+r1127-r991-r1352-2.0*r265-r277-r278+r1122+r284+r1133-r724+r1112-r303-r828-r271+r343+r553-r266-r882+r1126+r603-r1194-r910-r1218-r936-r17+r357+r142+r170+r1135-r1039+r1129-r263-r194-r193+r148+r174+r399+r324+r1123+r328-r673-r964-r358-r161+r1120-r1376+r1115-r261-r775-r535+r1128-r1271+2.0*r203-r195+r375+r359+r190+r1124-r1015+r1130-r262+r370-r260+r1119+r237+r360+r1116+r150-r1168+r145-r505-r554-r264+r1118+r1121+r442-r1065+r1111-r802+r204+r1132+r555+r1125+r218-r749;
{
double MapleGenVar1 = r671-r650+r165+r623-r628+r414-2.0*r102-r241-r1066+0.2*r117+r256+r125+r227+r682+r448-r644+r28+0.5*r186+r35+r167-r366-r383+r435+r683+r676-r883-r855-r1016+r686-r239+r166-r103-r214-r295+2.0*r292-r112+r184-r1169-r1353-r937+r672-r272+r197-r1298-r591-r829-r300+r303-r254+2.0*r293-r590+r296-r266-r297+r221-r240-r299-r301-r1245-r298-r1142-r803-r911-r992-2.0*r48+r89+r38-r365+r687+r645-r1326-r698; 
	R[48] =	            MapleGenVar1+r170+0.3*r423+r677-r49-r750+r194+r675+0.85*r417+r688-r47-r228+r673+r104-r108+r685+r678+r40-r1040-r1115+r178+r143+r50+r429+r689+r181-r625-r965+0.5*r114+r232+r620+r408+r679+0.35*r231+r339+r32-r652-r1090+r690-r725+2.0*r415+r430-r23+0.4*r390-r1272+r621-r776+r409+r51-r386+r424+r680+r185+r684-r340+r691+r145-2.0*r24+r391-r238-r279+2.0*r410+r101+r122-r592+r681+r692+r149+r371-r111-r229+r411+r392+r413;
}
{
	double MapleGenVar1 = r1323+0.5*r187-r53+r1341-r54-r115+r759+r102-r25+r1335+r755+r1325+r173+0.8*r117-r256+r1320+r769+r1331+r28+r1342+r372+r748+r760+r745-r1091+0.2*r124+r756-r1067-r113-r1195-r1170+r747-r1143+r614+r764+r1343-r221+r613-r912+r67+r762-r1299-r1246+r1326+0.7*r423+r68+r45+0.8*r128+r757+r750+r1336-r675+r761-r884+r765-r726+r646; 
	R[49] =	            r1334-r208-r699+r1322+r1345+r1337-r1354-r804+r116-r938+r233+r1324-r114+r766-r1219+r752+r1338+r195-r231-r1017-r966+r1328-r1041+r746-r856-r830+r51+r1333+r1344+r758+r1332-r222+r1339+r767+r340+r753+r451+r1329-r1273+r154+MapleGenVar1-r1116+r763+r1321-r52+r62+r1340+0.15*r127+r754+r82-r777+r768+r1319+r1346+r1330-r993+r392+r749;
}
	R[50] =	       r773-r73+r788-r1355-r414-r831+r793-r421-r1018-r1117+r63-r1300-r234-r676+r789+r103+r780+r112-r124-r74-r1144-r384+r772-r1196-r1171+r616-r913-r1220+r783+r38-r26-r423+r68-r1068+0.1*r128+r774+r794+r189-r656+r792-r1247+r784+r775-r257-r994+r782+r795-r700+r85-r752-r75+r785-r1328-r27-r1092-r390+r779+r776+r791+r790+r771+r61-r422-r805-r967+r786+r781+r158-r939-r1042-2.0*r72-r857+r770+0.85*r127+r777-r1274+r787-r885-r727;
	R[51] =	       -r1043+r854-r1275-r806+r852-r117+r868+r867-r940+r157+r374+r872-r1172+r855+r864+r874+r850+r859-r886+r866-r832-r995+r869+r860+r871+r865+r875-r1197-r914-r1221-r728-r677+r862-r1019-r118+r851-r47-r1093-r1356+r873-r87-r232-r1248-r1301+r856-r779-r1069-r1377-r1145-r701-r753-r1329+r863-r968+r857-r52-r1118-r210+r861+r29+r853+r870-r88;
	R[52] =	       -r215+r697+r703+r693+r94+r64-r634+r694+r37+r717+r709+r30+r698+r714-r242+r696+r710+r718+r354+r699+r707+r705-r418-r348+r716-r120+r700+r711-r349+r32+r695+r55+r715-r380+r61-r121+r701-r350-r404+r92+2.0*r36+r315+r712+r431+r381+r704-r122+r702+r708-r216+r65+r706+r713;
	R[53] =	       r192+r744-r53+r44+r736+r738+0.2*r290+r433+r723-r220-r416+r63+0.5*r186+r356+r35+r234+2.0*r56-r887+r733-r103-r1173-r780+r734-r1357-r1276-r833-r1044-r1198-r859+r724+r300-r1094-r1302+r615-r915-r1222+r67+r37-r941-r387-r617-r629-r996+r728+r739-r417-r388+r726-r69+r740+r737+r31+r66+r98-r678-r119-r1020-r807+r50+r735-r657+r257+r719-r70-r219+r153+r741-2.0*r41+r730-r405-r217+r725+r55-r243+0.6*r390+r720+r742-r1146-r1249-r1119+r81+r731-r196-r255-r230+r721+r743+r62-r244-r754-r702+r727+r432+0.5*r225-r1330+r345-r1070-r218+r95+r722+r411-r969+r732;
	R[54] =	       -r73+r1190+r126-r755-r123-r703-r83-r1174-r1331-r1071-r356+r1233+r366+r1206+r385+r362-r970+r1198+r1195-r1045-r1277+r1234-r860-r353+r1196+r1192+r1203+r1207+r1201+r1205+r1200+r1197+r1194+r1209+r1202+r1208+r1204+r1193+r1210+r1211+r1212+r1213+r1214+r1215+r1216+r1217+r1218+r1220+r1221+r1222+r1224+r1225-r107-2.0*r406+r365-r635-r357-r1303+r1226-r355-r49-r1358+r333-r942-r834+r174+r363+r1227-r997-r358-2.0*r407-r1095-r354-r1120-r389-r888+r1228+r1219-r109-r730+r1235+r1229-r419-r808+r1236-2.0*r71-r110+r1230-r106+r33-r781+r334-r420+r364+r1231+r1237-r1250+r1191+r34+r361-r1378-r1147+r1232;
	R[55] =	       r1002-r414-r77-r1251-r227-r971-r1278-r1379+r991+r1003-r393-r756-r1072-r1148+r995-r889+r1005-r1200-r916-r1224+r992+r1007+r1004-r394+r996+r160+r39-r1175-r809-r249+r1008+r986-r1304+r997-r1359-r943+r987+r1009+r994-r1046-r782-r70-r1021-r679-r658-r75+r999-r1096+r988+r1010-r259-r1332-r835-r395+r100-r110+r1000-r731+r989+r1011-r704+r1006-r101-r1121+r1001-r861-r236+r993+r990+r1012;
	R[56] =	       r191+r822-r126+r806+0.55*r290-r1047+r798-r125+r797-r1073+r86-r258+r811+r816-r1122-r384+r815+r801+r803-r1252-r917+r84-r783-r1225+r817+r818-r862+0.1*r128-r757+r809+r812-r1380-r211-r836+r40+r804-r705+r807+r799-r1305-r890+r821-r1360-r999+r819-r944-r1279+r813-r1333+r259-r1176+r808+0.67*r395-r424+r805-r659-r680-r1149+0.5*r235-r1097-r1022+r796+r823+r236-r972+r814+r802+r800-r732+r820;
	R[57] =	       r894+r897+r881-r383+r883-r811+r887-r733-r245+r879+r877-r425-r1150+r886+r64-r1177+r889-r247+r895+r882+r893+r900+r901-r1201+r896+r899+r898+r902+r892+r880-r918-r1280-r58-r1381-r1226+r876+r445+r884-r1123-r1334+r66-r784-r46-r1253+r878+r890+r888-r1048-r91-r405-r973-r1306-r1074-r758-r426-r1000-r57-r1361-r837-r92+r903-r945-r863-r660-r681+r885-r1098-r706-r224-r1023;
	R[58] =	       r951-r661-r54+r934+r115-r759-r77-r1335-r1099-r1075+r940-r682-r435-r864+r947-r734+r937-r1024-r74+r950+r935-r1049-r1178-r974-r892-r1202-r919+r941+r936+r97+r952-r250+r78-r1281+r193+r948+r942-r812-2.0*r76-r1227+r953-r69-r707+r938+r943+r931+r954-r109-r251+r159-r785-2.0*r415+r944+r955-r1124+r932-r1307-r212+r949-r235+r945+r956+r939-r391+r933-r96-r1382-r1362-r127-r1001-r1254-r1151-r838+r957-r392;
	R[59] =	       -r1363-r93-r1002+r929+r906-r226+r123-r94-r433-r683-r760-r947-r1152-r662-r1100+r930+r444-r246-r434-r1255-r1383+r904-r865-r893-r248-r1203+r905+r908+r909+r910+r911+r912+r913+r914+r915+r916+r917+r918+r919+r921+r922-r427+r923-r1076+r78-r975-r1336-r839-r1050-r1025-r428-r59+r924-r1179-r1282-r735-r429-r60+r925+r400+r926-r430-r813-2.0*r446+r907-r404-r786+r927-r431-r1308-r708+r928-r432-r225+r65-r1125-r95;
	R[60] =	       -r894+0.5*r187-r736-r1309+r831-r1180+r826-r1364-r1003+r833+r841+r156+r829-r866+r832+r828-r1126-r1204-r921-r89-r1256+r373-r1026-r709+r824+r845+r118+r839-r948-r761+r834+r843+r836+r129-r90-r1153-r976-r1384-r1051-r1337+r849-r116-r233-r1228-r1077+0.5*r114+r848-r1283+r825+r830+r842+r835+0.33*r395-r684+r837+r451-r209+r846-r1101+r847-r787-r814+r844+r838+r88+r827;
	R[61] =	       -r788+r980-r436+r958-r867+r971-r213+r983+r970-r1127-r1310+0.8*r124+r113+r959-r841-r815+r981-r895+r974-r663-r1181-r1205+r962-r922-r762+r985+r960-r1004-r97+r963-r128+r975-r1257-r710+r964-r685-r129+r961-r737+r976-r98+r965-r1102-r99-r1052-r1338-r1385-r1229+r982+r973+r966-r1078-r1365+r984-r100+r967-r949-r1284+r978-r1154+r968+r972-r1027+r979+r969;
	R[62] =	       -r322-r326+r317-r294-r335-r300-r596-r595-r302-r601-r602+r304+r308-r603-r327-r346-r105-r324-r328-r323+r348-r314-r106-r325+r216-r597;
	R[63] =	       -r107-r293-r296+r297-r299-r316-r317-r318-r319-r320-r321-r334+r341-r605-r607-r609-r611;
	R[64] =	       -r738+r1099-r1182-r868+r1104+r1108+r1089-r1206-r789-r686+r1091-r275-r816+r1100-r280-r277-r950-r278+r151+r284-2.0*r281-r276+r1094-r1005-r1366-r896-r664-r923+r377+r1105-r1028+r1110+r1093-r1258+r378+r1095+r379+r1106-r274-r1128-r1155+r1102-r711+r1090+r144+r1096+r1092+r1087-r842-r1230-r1339-r1053-r163-r978+r1097+0.5*r196-r627-r763+r1107+r1101+r238-r1386-r279-r207-r1311-r1079+r1098-r1285+r1088+r1109;
	R[65] =	       r146-r951+r1244-r897+r1238-r1183-r1080+r1263-r1286+r1251+r1241-r1104-r342+r332+r1264+r1239-r764-r343-r869+r1255-r1367+r1245+r1252-r1207+r1256+r1240-r631-r346-r630-r687-r817+r1246-r1129+r618-r739+r1257-r843-2.0*r347-r924+r1258+r1242+r619+r1247-r1029+r1253-r632+r188+r1248+r349+r339-r1156+r1260-r344-r790+r1249+r350+r1243-r712+r1261+r360-r665-r1006-r1231-r1054-r1340+r1250-r1312+r1254-r633-r979-r341+r1262-r345+r224;
	R[66] =	       -r165-r1341+r1139-r1387-r1184-r1055-r980+r1141-r1287+r1152+r1144+r1150+r1137+r1148-r1081+r1143+r285+r1142-r898-r1208+r1162-r666-r1007-r952-r818-r1105+r148-r688-r765-r740+r1153-r925-r1313+r1155+r1156-r1030-r1260-r1130+r1140-r791+r1146+r1145+r1160+r1149+r1158+r1154+r1161-r252+r1136+r1138-r164-r844+r1151-r870-r713+r1159-r1368+r1147-r1232+r155;
	R[67] =	       r1066+r1080-r1131+r1083-r270-r1185+r1075+r1071+r644+r1073-r1233-r1342-r1314+r239+r214-r1056-r280-r1388-r272-2.0*r273+r1067-r653-r197-r654+r1072+r1081-r271+r254-r981-r871-r899-r1209+r376-r845+r1085-r714+r1076-r1369+r1068+r1061-r667-r1008+r152-r953-r792+r1062+r1086-r689+r1077-r1106-r766-r741-r206-r1288-r162+r1063-r926-r819+r1074+r1078+r1069+r222-r1158+r1064-r1031-r269-r1261+0.5*r196+r1084+r1065-r268+r1079+r204+r1070+r229-r267;
	R[68] =	       -r223+r1184+r1183-r793-r1289+0.25*r290-r1083+r1182+r1180+r1185+r1174-r872+r1172+r1173-r253-r1389+r286+r1169-r283-r284+r289+r1167+r1170+r1178+r1177-r1234-r1343+r1166-r287-r285+r1171-r900+r1181-r1210+r288-r291-r1315+r1175+r1179-r1370-r668-r1009-r954+r217-r982-r690+r1163-r715+r1188-r742+r1176-r767+r1164-r1057-r927-r237-r846+r1168+r255+r230-r1107+r1189+r1165+r1187-r1032-r1132-r1262-r1159-r820;
	R[69] =	       r295-r292-r303-r593-r594-r306-r305-r304-r298-r307-r308-r309-r310-r606-r608-r610+r336-r311+r629+r337-r333-r312-r338-2.0*r313-r339-r314-r315-r604+r316-r345+r331;
	R[70] =	       -r301-r315+r322+r325-r329-r330-r598-r599-r600;
	R[71] =	       r443+r1275+r1289+r1286-r448+r1278+r1287-r385+r1265+r1276-r444+r1267+r1277+r1291+r1280-2.0*r449+r1266+r1268+r1281+r1292+r1269+r1282+r1270+r1271+r1288+r1290+r1283+r1279+r1272+r386+r1284+r1273-r442+r1274+r1285+r382-r447;
	R[72] =	       -r443+r1309-r1033-r1263+r1297-r983+r1300+r1314-r1108+r1310+r1298-r1133+r450+r1302-r1058-r901-r1211+r1299+r1303-r445+r1315-r794+r1304+r407+r1293+r1305-r716-r821+r1313-r873-r1235-r1290+r1294+r1317+r1306-r1371+r1301-r955-r669-r1010-r1344+r401+r1295-r1160+r1307+r1318-r691-r1084-r1390-r743+r1311+r1308+r1312-r1187+r1296-r847-r928-r768+r402;
	R[73] =	       -r1134+r1351-r744+r1363-r466+r1355-r929-r1059-r822-r457+r488-r511-r769+r460-r1034+r1364+r1352+r1357+r1353-r874-r1264-r519+r1367+r1366+r543+r580-r902-r1212+r452-r1291-r489-r717-2.0*r462-r458-r1085+r1347+r1369-r527+r1358-r453-r463-r1345-r459+r1356+r1354+r1359+r1348+r1370-r454-r579-r795+r1360-r848-r464-r1317+r1349+r1371+r1365-r1391-r455+r573-r1188-r1236-r984+r1361-r1161+r518-r956+r1350-r465-r461-r1011-r670+r523+r1362-r456+r1373-r692+r1368-r1109;
	R[74] =	       -r476-r468-r488+r572+r538-r477-r471-r467+r548+r594-r580+r462+r458-r470+r453-r472-r469-r473+r455-2.0*r474-r518+r484-r475+r575-r639;
	R[75] =	       r459-r460+r466-r521-r522-r523-r524-r525-r526-r527-r528;
	R[76] =	       -r461+r467+r470-r475-r478-r479-r480+r544+r547-r550-r588-r590-r593-r595+r596+r598+r600+r603-r629-r630-r635;
	R[77] =	       r463-r481-r482-r483-r484-r485-r486-r487-r488-r489-r490+r494+r496+r498+r500;
	R[78] =	       -r628+r1387-r545+r540+r1374+r1379+r1389-r930+r1388+r643+r1375-r582+r595-r536+r1383+r598+r599-r875-r613-r615-r616-r1162-r1213-r546+r539-r985+r1381-r1135-r1292-r1110+r1380-r718-r544-r619+r1376+r1384-r849-r1086-r620+r1385-r589+r626+r1391+r1377-r1318-r903-r627-r823+r1390+r1386+r1382-r1237-r1189-r1373-r1346-r957-r1060+r1378-r1012;
	R[79] =	       r623+r545+r577-r556-r583-r585+r564+r569-r558-r552-r548+r582-r586+r563-r614+r566-r553-r547-2.0*r560+r570+r602+r580-r559+r605+r546+r574-r618-r549+r537+r579+r589+r604-r550-r554+r584-r557-r555;
	R[80] =	       -r587+r590+r592;
	R[81] =	       r622+r624-r626+r627+r628;

}
