/***************************************************************************
 *   Copyright (C) 2003-2008 by                                            *
 *   Alberto Cuoci		                                                   *
 *   alberto.cuoci@polimi.it                                               *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, write to the                         *
 *   Free Software Foundation, Inc.,                                       *
 *   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
 ***************************************************************************/

#include "symbolickinetics/polimi_nc7_avio/OpenSMOKE_SymbolicKinetics_Polimi_NC7_AVIO.h"

void OpenSMOKE_SymbolicKinetics_Polimi_NC7_AVIO::giveReactionRates(double cTot, BzzVector &c, BzzVector &R) 
{
	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR THIRD BODY REACTIONS ===== 
	// ============================================================ 
	coeffM741 =	       cTot+17.0*c[4]+0.15E1*c[3]+0.26*c[1]-1.0*c[2]+0.2*c[5]+0.14E1*c[6];
	coeffM747 =	       cTot+0.15E1*c[3]+11.0*c[4]+0.9*c[5]+0.28E1*c[6];
	coeffM748 =	       cTot+0.15E1*c[3]+11.0*c[4]+0.9*c[5]+0.28E1*c[6];
	coeffM749 =	       cTot+15.0*c[4]+1.0*c[3]+0.9*c[6];
	coeffM752 =	       cTot+1.0*c[3]+5.0*c[4]+1.0*c[8]+0.5*c[5]+1.0*c[6]+2.0*c[9];
	coeffM753 =	       cTot;
	coeffM756 =	       cTot+11.0*c[4]+1.0*c[3]+0.5*c[5]+1.0*c[6];
	coeffM761 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM762 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM763 =	       cTot+5.0*c[4]+2.0*c[9]+1.0*c[8]+0.5*c[5];
	coeffM768 =	       cTot;
	coeffM769 =	       cTot;
	coeffM771 =	       cTot;
	coeffM772 =	       cTot;
	coeffM774 =	       cTot;
	coeffM819 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM820 =	       cTot+1.0*c[3]+1.0*c[5]+2.0*c[6]+4.0*c[4];
	coeffM822 =	       cTot;
	coeffM823 =	       cTot;
	coeffM824 =	       cTot;
	coeffM868 =	       cTot;
	coeffM879 =	       cTot+15.0*c[4]+0.28E1*c[6]+0.15E1*c[3]+0.9*c[5];
	coeffM880 =	       cTot+15.0*c[4]+0.28E1*c[6]+0.15E1*c[3]+0.9*c[5];
	coeffM881 =	       cTot;
	coeffM882 =	       cTot;
	coeffM899 =	       cTot+0.18E1*c[8]+4.0*c[4]+2.0*c[6]+0.9*c[3]+0.9*c[5];
	coeffM900 =	       cTot;
	coeffM901 =	       cTot;
	coeffM903 =	       cTot;
	coeffM967 =	       cTot;
	coeffM1033 =	       cTot;
	coeffM1054 =	       cTot+19.0*c[46]+2.0*c[4]+3.0*c[13];
	coeffM1074 =	       cTot;
	coeffM1144 =	       cTot;
	coeffM1190 =	       cTot;
	coeffM1203 =	       cTot+0.15E1*c[1]+4.0*c[4]+9.0*c[30];
	coeffM1226 =	       cTot;
	coeffM1233 =	       cTot+1.0*c[1]+1.0*c[3]+1.0*c[2]+14.0*c[4];
	coeffM1251 =	       cTot;
	coeffM1252 =	       cTot;
	coeffM1264 =	       cTot+0.7*c[1]+0.5*c[2]+9.0*c[4];
	coeffM1265 =	       cTot;
	coeffM1267 =	       cTot+0.31E1*c[4]+0.25*c[3];
	coeffM1282 =	       cTot;
	coeffM1300 =	       cTot;
	coeffM1318 =	       cTot+0.5*c[1];
	coeffM1343 =	       cTot+0.5*c[1];
	coeffM1358 =	       cTot;
	coeffM1407 =	       cTot+0.7*c[1]+0.4*c[2]+11.0*c[4]+2.0*c[6];
	coeffM1424 =	       cTot+4.0*c[4];


	// ============================================================ 
	// ===== CORRECTION COEFFICIENTS FOR FALL OFF REACTIONS ======= 
	// ============================================================ 
	CFO741 =	       coeffM741/(1.0+k741*coeffM741/kFallOff741);
	CFO752 =	       coeffM752/(1.0+k752*coeffM752/kFallOff752);
	CFO756 =	       coeffM756/(1.0+k756*coeffM756/kFallOff756);
	CFO761 =	       coeffM761/(1.0+k761*coeffM761/kFallOff761);
	CFO762 =	       coeffM762/(1.0+k762*coeffM762/kFallOff762);
	CFO763 =	       coeffM763/(1.0+k763*coeffM763/kFallOff763);
	CFO819 =	       coeffM819/(1.0+k819*coeffM819/kFallOff819);
	CFO820 =	       coeffM820/(1.0+k820*coeffM820/kFallOff820);
	CFO822 =	       coeffM822/(1.0+k822*coeffM822/kFallOff822);
	CFO823 =	       coeffM823/(1.0+k823*coeffM823/kFallOff823);
	CFO824 =	       coeffM824/(1.0+k824*coeffM824/kFallOff824);
	CFO881 =	       coeffM881/(1.0+k881*coeffM881/kFallOff881);
	CFO882 =	       coeffM882/(1.0+k882*coeffM882/kFallOff882);
	CFO900 =	       coeffM900/(1.0+k900*coeffM900/kFallOff900);
	CFO1074 =	       coeffM1074/(1.0+k1074*coeffM1074/kFallOff1074);
	CFO1144 =	       coeffM1144/(1.0+k1144*coeffM1144/kFallOff1144);
	CFO1203 =	       coeffM1203/(1.0+k1203*coeffM1203/kFallOff1203);
	CFO1265 =	       coeffM1265/(1.0+k1265*coeffM1265/kFallOff1265);
	CFO1424 =	       coeffM1424/(1.0+k1424*coeffM1424/kFallOff1424);


	lnPr741 =	       log(k741*coeffM741/kFallOff741);
	lnPr752 =	       log(k752*coeffM752/kFallOff752);
	lnPr761 =	       log(k761*coeffM761/kFallOff761);
	lnPr762 =	       log(k762*coeffM762/kFallOff762);
	lnPr763 =	       log(k763*coeffM763/kFallOff763);
	lnPr820 =	       log(k820*coeffM820/kFallOff820);
	lnPr1424 =	       log(k1424*coeffM1424/kFallOff1424);


	wF741 =	pow(10.0, logFcent741/(1.0+BzzPow2((0.434294481903*lnPr741-0.40-0.67*logFcent741)/(0.806-0.0608012274665*lnPr741-1.1762*logFcent741)))); 
	wF752 =	pow(10.0, logFcent752/(1.0+BzzPow2((0.434294481903*lnPr752-0.40-0.67*logFcent752)/(0.806-0.0608012274665*lnPr752-1.1762*logFcent752)))); 
	wF756 =	1.00; 
	wF761 =	pow( logFcent761 , 1.0/(1.0+0.18861169701161387*lnPr761*lnPr761)); 
	wF762 =	pow(10.0, logFcent762/(1.0+BzzPow2((0.434294481903*lnPr762-0.40-0.67*logFcent762)/(0.806-0.0608012274665*lnPr762-1.1762*logFcent762)))); 
	wF763 =	pow(10.0, logFcent763/(1.0+BzzPow2((0.434294481903*lnPr763-0.40-0.67*logFcent763)/(0.806-0.0608012274665*lnPr763-1.1762*logFcent763)))); 
	wF819 =	1.00; 
	wF820 =	pow(10.0, logFcent820/(1.0+BzzPow2((0.434294481903*lnPr820-0.40-0.67*logFcent820)/(0.806-0.0608012274665*lnPr820-1.1762*logFcent820)))); 
	wF822 =	1.00; 
	wF823 =	1.00; 
	wF824 =	1.00; 
	wF881 =	1.00; 
	wF882 =	1.00; 
	wF900 =	1.00; 
	wF1074 =	1.00; 
	wF1144 =	1.00; 
	wF1203 =	1.00; 
	wF1265 =	1.00; 
	wF1424 =	pow(10.0, logFcent1424/(1.0+BzzPow2((0.434294481903*lnPr1424-0.40-0.67*logFcent1424)/(0.806-0.0608012274665*lnPr1424-1.1762*logFcent1424)))); 


	coeffFallOff741 =	       CFO741*wF741;
	coeffFallOff752 =	       CFO752*wF752;
	coeffFallOff756 =	       CFO756*wF756;
	coeffFallOff761 =	       CFO761*wF761;
	coeffFallOff762 =	       CFO762*wF762;
	coeffFallOff763 =	       CFO763*wF763;
	coeffFallOff819 =	       CFO819*wF819;
	coeffFallOff820 =	       CFO820*wF820;
	coeffFallOff822 =	       CFO822*wF822;
	coeffFallOff823 =	       CFO823*wF823;
	coeffFallOff824 =	       CFO824*wF824;
	coeffFallOff881 =	       CFO881*wF881;
	coeffFallOff882 =	       CFO882*wF882;
	coeffFallOff900 =	       CFO900*wF900;
	coeffFallOff1074 =	       CFO1074*wF1074;
	coeffFallOff1144 =	       CFO1144*wF1144;
	coeffFallOff1203 =	       CFO1203*wF1203;
	coeffFallOff1265 =	       CFO1265*wF1265;
	coeffFallOff1424 =	       CFO1424*wF1424;


	// ============================================================ 
	// ===== REACTION RATES FOR THIRD BODY REACTIONS (Flat) ======= 
	// ============================================================ 
	rFlat741 =	       (c[2]*c[46]-c[49]*uK741)*k741;
	rFlat747 =	       (c[3]-c[46]*c[46]*uK747)*k747;
	rFlat748 =	       (c[2]-c[48]*c[48]*uK748)*k748;
	rFlat749 =	       (c[46]*c[47]-c[4]*uK749)*k749;
	rFlat752 =	       (c[47]*c[47]-c[7]*uK752)*k752;
	rFlat753 =	       (c[47]*c[48]-c[49]*uK753)*k753;
	rFlat756 =	       (c[5]*c[48]-c[6]*uK756)*k756;
	rFlat761 =	       (c[46]*c[51]-c[8]*uK761)*k761;
	rFlat762 =	       (c[51]*c[51]-c[9]*uK762)*k762;
	rFlat763 =	       (c[46]*c[52]-c[9]*uK763)*k763;
	rFlat768 =	       (c[13]-c[46]*c[55]*uK768)*k768;
	rFlat769 =	       (c[14]-c[46]*c[56]*uK769)*k769;
	rFlat771 =	       (c[10]-c[46]*c[57]*uK771)*k771;
	rFlat772 =	       (c[15]-c[46]*c[57]*uK772)*k772;
	rFlat774 =	       (c[16]-c[55]*c[55]*uK774)*k774;
	rFlat819 =	       (c[13]*c[46]-c[56]*uK819)*k819;
	rFlat820 =	       (c[14]*c[46]-c[52]*uK820)*k820;
	rFlat822 =	       (c[15]*c[46]-c[59]*uK822)*k822;
	rFlat823 =	       (c[10]*c[46]-c[53]*uK823)*k823;
	rFlat824 =	       (c[10]*c[46]-c[59]*uK824)*k824;
	rFlat868 =	       (c[14]-c[3]*c[13]*uK868)*k868;
	rFlat879 =	       (c[22]-c[3]*c[5]*uK879)*k879;
	rFlat880 =	       (c[22]-c[46]*c[50]*uK880)*k880;
	rFlat881 =	       (c[23]-c[47]*c[51]*uK881)*k881;
	rFlat882 =	       (c[23]-c[46]*c[67]*uK882)*k882;
	rFlat899 =	       (c[50]-c[5]*c[46]*uK899)*k899;
	rFlat900 =	       (c[70]-c[22]*c[46]*uK900)*k900;
	rFlat901 =	       (c[67]-c[22]*c[46]*uK901)*k901;
	rFlat903 =	       (c[69]-c[5]*c[51]*uK903)*k903;
	rFlat967 =	       c[48]*c[51]*k967;
	rFlat1033 =	       (c[51]-c[46]*c[72]*uK1033)*k1033;
	rFlat1054 =	       (c[66]-c[72]*uK1054)*k1054;
	rFlat1074 =	       (c[25]-c[5]*c[72]*uK1074)*k1074;
	rFlat1144 =	       (c[57]*c[57]-c[27]*uK1144)*k1144;
	rFlat1190 =	       (c[30]-c[46]*c[76]*uK1190)*k1190;
	rFlat1203 =	       (c[76]*c[76]-c[34]*uK1203)*k1203;
	rFlat1226 =	       (c[81]-c[33]*c[46]*uK1226)*k1226;
	rFlat1233 =	       (c[33]-c[46]*c[80]*uK1233)*k1233;
	rFlat1251 =	       (c[37]-c[36]*c[46]*uK1251)*k1251;
	rFlat1252 =	       (c[37]-c[1]*c[47]*uK1252)*k1252;
	rFlat1264 =	       (c[32]*c[48]-c[35]*uK1264)*k1264;
	rFlat1265 =	       (c[32]*c[47]-c[38]*uK1265)*k1265;
	rFlat1267 =	       (c[32]*c[46]-c[31]*uK1267)*k1267;
	rFlat1282 =	       (c[78]-c[31]*c[46]*uK1282)*k1282;
	rFlat1300 =	       (c[35]*c[48]-c[82]*uK1300)*k1300;
	rFlat1318 =	       (c[84]-c[5]*c[79]*uK1318)*k1318;
	rFlat1343 =	       (c[41]-c[5]*c[77]*uK1343)*k1343;
	rFlat1358 =	       (c[85]-c[39]*c[46]*uK1358)*k1358;
	rFlat1407 =	       (c[36]-c[1]*c[48]*uK1407)*k1407;
	rFlat1424 =	       (c[35]*c[47]-c[45]*uK1424)*k1424;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY REACTION ==================== 
	// ============================================================ 
	r1 =	       c[3]*c[46]*k1;
	r2 =	       c[3]*c[53]*k2;
	r3 =	       c[3]*c[56]*k3;
	r4 =	       c[3]*c[58]*k4;
	r5 =	       c[3]*c[59]*k5;
	r6 =	       c[3]*c[60]*k6;
	r7 =	       c[3]*c[61]*k7;
	r8 =	       c[3]*c[62]*k8;
	r9 =	       c[3]*c[64]*k9;
	r10 =	       c[3]*c[67]*k10;
	r11 =	       c[3]*c[68]*k11;
	r12 =	       c[3]*c[69]*k12;
	r13 =	       c[3]*c[70]*k13;
	r14 =	       c[3]*c[71]*k14;
	r15 =	       c[3]*c[75]*k15;
	r16 =	       c[3]*c[76]*k16;
	r17 =	       c[8]*c[47]*k17;
	r18 =	       c[8]*c[49]*k18;
	r19 =	       c[8]*c[50]*k19;
	r20 =	       c[8]*c[51]*k20;
	r21 =	       c[8]*c[52]*k21;
	r22 =	       c[8]*c[53]*k22;
	r23 =	       c[8]*c[54]*k23;
	r24 =	       c[8]*c[56]*k24;
	r25 =	       c[8]*c[58]*k25;
	r26 =	       c[8]*c[59]*k26;
	r27 =	       c[8]*c[60]*k27;
	r28 =	       c[8]*c[61]*k28;
	r29 =	       c[8]*c[62]*k29;
	r30 =	       c[8]*c[63]*k30;
	r31 =	       c[8]*c[64]*k31;
	r32 =	       c[8]*c[67]*k32;
	r33 =	       c[8]*c[68]*k33;
	r34 =	       c[8]*c[69]*k34;
	r35 =	       c[8]*c[70]*k35;
	r36 =	       c[8]*c[71]*k36;
	r37 =	       c[8]*c[75]*k37;
	r38 =	       c[8]*c[76]*k38;
	r39 =	       c[2]*c[13]*k39;
	r40 =	       c[13]*c[35]*k40;
	r41 =	       c[13]*c[48]*k41;
	r42 =	       c[13]*c[49]*k42;
	r43 =	       c[13]*c[50]*k43;
	r44 =	       c[13]*c[51]*k44;
	r45 =	       c[13]*c[52]*k45;
	r46 =	       c[13]*c[53]*k46;
	r47 =	       c[13]*c[54]*k47;
	r48 =	       c[13]*c[56]*k48;
	r49 =	       c[13]*c[57]*k49;
	r50 =	       c[13]*c[58]*k50;
	r51 =	       c[13]*c[59]*k51;
	r52 =	       c[13]*c[60]*k52;
	r53 =	       c[13]*c[61]*k53;
	r54 =	       c[13]*c[62]*k54;
	r55 =	       c[13]*c[63]*k55;
	r56 =	       c[13]*c[64]*k56;
	r57 =	       c[13]*c[67]*k57;
	r58 =	       c[13]*c[68]*k58;
	r59 =	       c[13]*c[69]*k59;
	r60 =	       c[13]*c[70]*k60;
	r61 =	       c[13]*c[71]*k61;
	r62 =	       c[13]*c[75]*k62;
	r63 =	       c[13]*c[76]*k63;
	r64 =	       c[13]*c[83]*k64;
	r65 =	       c[14]*c[35]*k65;
	r66 =	       c[14]*c[46]*k66;
	r67 =	       c[14]*c[47]*k67;
	r68 =	       c[14]*c[48]*k68;
	r69 =	       c[14]*c[49]*k69;
	r70 =	       c[14]*c[50]*k70;
	r71 =	       c[14]*c[51]*k71;
	r72 =	       c[14]*c[52]*k72;
	r73 =	       c[14]*c[53]*k73;
	r74 =	       c[14]*c[54]*k74;
	r75 =	       c[14]*c[56]*k75;
	r76 =	       c[14]*c[57]*k76;
	r77 =	       c[14]*c[58]*k77;
	r78 =	       c[14]*c[59]*k78;
	r79 =	       c[14]*c[60]*k79;
	r80 =	       c[14]*c[61]*k80;
	r81 =	       c[14]*c[62]*k81;
	r82 =	       c[14]*c[63]*k82;
	r83 =	       c[14]*c[64]*k83;
	r84 =	       c[14]*c[67]*k84;
	r85 =	       c[14]*c[68]*k85;
	r86 =	       c[14]*c[69]*k86;
	r87 =	       c[14]*c[70]*k87;
	r88 =	       c[14]*c[71]*k88;
	r89 =	       c[14]*c[75]*k89;
	r90 =	       c[14]*c[76]*k90;
	r91 =	       c[9]*c[35]*k91;
	r92 =	       c[9]*c[47]*k92;
	r93 =	       c[9]*c[48]*k93;
	r94 =	       c[9]*c[49]*k94;
	r95 =	       c[9]*c[50]*k95;
	r96 =	       c[9]*c[51]*k96;
	r97 =	       c[9]*c[52]*k97;
	r98 =	       c[9]*c[53]*k98;
	r99 =	       c[9]*c[54]*k99;
	r100 =	       c[9]*c[56]*k100;
	r101 =	       c[9]*c[57]*k101;
	r102 =	       c[9]*c[58]*k102;
	r103 =	       c[9]*c[59]*k103;
	r104 =	       c[9]*c[60]*k104;
	r105 =	       c[9]*c[61]*k105;
	r106 =	       c[9]*c[62]*k106;
	r107 =	       c[9]*c[63]*k107;
	r108 =	       c[9]*c[64]*k108;
	r109 =	       c[9]*c[67]*k109;
	r110 =	       c[9]*c[68]*k110;
	r111 =	       c[9]*c[69]*k111;
	r112 =	       c[9]*c[70]*k112;
	r113 =	       c[9]*c[71]*k113;
	r114 =	       c[9]*c[75]*k114;
	r115 =	       c[9]*c[76]*k115;
	r116 =	       c[11]*c[35]*k116;
	r117 =	       c[11]*c[46]*k117;
	r118 =	       c[11]*c[47]*k118;
	r119 =	       c[11]*c[48]*k119;
	r120 =	       c[11]*c[49]*k120;
	r121 =	       c[11]*c[50]*k121;
	r122 =	       c[11]*c[51]*k122;
	r123 =	       c[11]*c[52]*k123;
	r124 =	       c[11]*c[53]*k124;
	r125 =	       c[11]*c[54]*k125;
	r126 =	       c[11]*c[56]*k126;
	r127 =	       c[11]*c[57]*k127;
	r128 =	       c[11]*c[58]*k128;
	r129 =	       c[11]*c[59]*k129;
	r130 =	       c[11]*c[60]*k130;
	r131 =	       c[11]*c[61]*k131;
	r132 =	       c[11]*c[62]*k132;
	r133 =	       c[11]*c[63]*k133;
	r134 =	       c[11]*c[64]*k134;
	r135 =	       c[11]*c[67]*k135;
	r136 =	       c[11]*c[68]*k136;
	r137 =	       c[11]*c[69]*k137;
	r138 =	       c[11]*c[70]*k138;
	r139 =	       c[11]*c[71]*k139;
	r140 =	       c[11]*c[75]*k140;
	r141 =	       c[11]*c[76]*k141;
	r142 =	       c[2]*c[11]*k142;
	r143 =	       c[11]*c[35]*k143;
	r144 =	       c[11]*c[46]*k144;
	r145 =	       c[11]*c[47]*k145;
	r146 =	       c[11]*c[48]*k146;
	r147 =	       c[11]*c[49]*k147;
	r148 =	       c[11]*c[50]*k148;
	r149 =	       c[11]*c[51]*k149;
	r150 =	       c[11]*c[52]*k150;
	r151 =	       c[11]*c[53]*k151;
	r152 =	       c[11]*c[54]*k152;
	r153 =	       c[11]*c[56]*k153;
	r154 =	       c[11]*c[57]*k154;
	r155 =	       c[11]*c[58]*k155;
	r156 =	       c[11]*c[59]*k156;
	r157 =	       c[11]*c[60]*k157;
	r158 =	       c[11]*c[61]*k158;
	r159 =	       c[11]*c[62]*k159;
	r160 =	       c[11]*c[63]*k160;
	r161 =	       c[11]*c[64]*k161;
	r162 =	       c[11]*c[67]*k162;
	r163 =	       c[11]*c[68]*k163;
	r164 =	       c[11]*c[69]*k164;
	r165 =	       c[11]*c[70]*k165;
	r166 =	       c[11]*c[71]*k166;
	r167 =	       c[11]*c[75]*k167;
	r168 =	       c[11]*c[76]*k168;
	r169 =	       c[11]*c[83]*k169;
	r170 =	       c[12]*c[35]*k170;
	r171 =	       c[12]*c[47]*k171;
	r172 =	       c[12]*c[48]*k172;
	r173 =	       c[12]*c[49]*k173;
	r174 =	       c[12]*c[50]*k174;
	r175 =	       c[12]*c[51]*k175;
	r176 =	       c[12]*c[52]*k176;
	r177 =	       c[12]*c[53]*k177;
	r178 =	       c[12]*c[54]*k178;
	r179 =	       c[12]*c[56]*k179;
	r180 =	       c[12]*c[57]*k180;
	r181 =	       c[12]*c[58]*k181;
	r182 =	       c[12]*c[59]*k182;
	r183 =	       c[12]*c[60]*k183;
	r184 =	       c[12]*c[61]*k184;
	r185 =	       c[12]*c[62]*k185;
	r186 =	       c[12]*c[63]*k186;
	r187 =	       c[12]*c[64]*k187;
	r188 =	       c[12]*c[67]*k188;
	r189 =	       c[12]*c[68]*k189;
	r190 =	       c[12]*c[69]*k190;
	r191 =	       c[12]*c[70]*k191;
	r192 =	       c[12]*c[71]*k192;
	r193 =	       c[12]*c[75]*k193;
	r194 =	       c[12]*c[76]*k194;
	r195 =	       c[12]*c[83]*k195;
	r196 =	       c[12]*c[35]*k196;
	r197 =	       c[12]*c[47]*k197;
	r198 =	       c[12]*c[48]*k198;
	r199 =	       c[12]*c[49]*k199;
	r200 =	       c[12]*c[50]*k200;
	r201 =	       c[12]*c[51]*k201;
	r202 =	       c[12]*c[52]*k202;
	r203 =	       c[12]*c[53]*k203;
	r204 =	       c[12]*c[54]*k204;
	r205 =	       c[12]*c[56]*k205;
	r206 =	       c[12]*c[57]*k206;
	r207 =	       c[12]*c[58]*k207;
	r208 =	       c[12]*c[59]*k208;
	r209 =	       c[12]*c[60]*k209;
	r210 =	       c[12]*c[61]*k210;
	r211 =	       c[12]*c[62]*k211;
	r212 =	       c[12]*c[63]*k212;
	r213 =	       c[12]*c[64]*k213;
	r214 =	       c[12]*c[67]*k214;
	r215 =	       c[12]*c[68]*k215;
	r216 =	       c[12]*c[69]*k216;
	r217 =	       c[12]*c[70]*k217;
	r218 =	       c[12]*c[71]*k218;
	r219 =	       c[12]*c[75]*k219;
	r220 =	       c[12]*c[76]*k220;
	r221 =	       c[12]*c[83]*k221;
	r222 =	       c[2]*c[17]*k222;
	r223 =	       c[17]*c[35]*k223;
	r224 =	       c[17]*c[46]*k224;
	r225 =	       c[17]*c[47]*k225;
	r226 =	       c[17]*c[48]*k226;
	r227 =	       c[17]*c[49]*k227;
	r228 =	       c[17]*c[50]*k228;
	r229 =	       c[17]*c[51]*k229;
	r230 =	       c[17]*c[52]*k230;
	r231 =	       c[17]*c[53]*k231;
	r232 =	       c[17]*c[54]*k232;
	r233 =	       c[17]*c[56]*k233;
	r234 =	       c[17]*c[57]*k234;
	r235 =	       c[17]*c[58]*k235;
	r236 =	       c[17]*c[59]*k236;
	r237 =	       c[17]*c[60]*k237;
	r238 =	       c[17]*c[61]*k238;
	r239 =	       c[17]*c[62]*k239;
	r240 =	       c[17]*c[63]*k240;
	r241 =	       c[17]*c[64]*k241;
	r242 =	       c[17]*c[67]*k242;
	r243 =	       c[17]*c[68]*k243;
	r244 =	       c[17]*c[69]*k244;
	r245 =	       c[17]*c[70]*k245;
	r246 =	       c[17]*c[71]*k246;
	r247 =	       c[17]*c[75]*k247;
	r248 =	       c[17]*c[76]*k248;
	r249 =	       c[17]*c[83]*k249;
	r250 =	       c[2]*c[20]*k250;
	r251 =	       c[20]*c[35]*k251;
	r252 =	       c[20]*c[46]*k252;
	r253 =	       c[20]*c[47]*k253;
	r254 =	       c[20]*c[48]*k254;
	r255 =	       c[20]*c[49]*k255;
	r256 =	       c[20]*c[50]*k256;
	r257 =	       c[20]*c[51]*k257;
	r258 =	       c[20]*c[52]*k258;
	r259 =	       c[20]*c[53]*k259;
	r260 =	       c[20]*c[54]*k260;
	r261 =	       c[20]*c[56]*k261;
	r262 =	       c[20]*c[58]*k262;
	r263 =	       c[20]*c[59]*k263;
	r264 =	       c[20]*c[60]*k264;
	r265 =	       c[20]*c[61]*k265;
	r266 =	       c[20]*c[62]*k266;
	r267 =	       c[20]*c[63]*k267;
	r268 =	       c[20]*c[64]*k268;
	r269 =	       c[20]*c[67]*k269;
	r270 =	       c[20]*c[68]*k270;
	r271 =	       c[20]*c[69]*k271;
	r272 =	       c[20]*c[70]*k272;
	r273 =	       c[20]*c[71]*k273;
	r274 =	       c[20]*c[75]*k274;
	r275 =	       c[20]*c[76]*k275;
	r276 =	       c[20]*c[83]*k276;
	r277 =	       c[18]*c[35]*k277;
	r278 =	       c[18]*c[46]*k278;
	r279 =	       c[18]*c[47]*k279;
	r280 =	       c[18]*c[48]*k280;
	r281 =	       c[18]*c[49]*k281;
	r282 =	       c[18]*c[50]*k282;
	r283 =	       c[18]*c[51]*k283;
	r284 =	       c[18]*c[52]*k284;
	r285 =	       c[18]*c[53]*k285;
	r286 =	       c[18]*c[54]*k286;
	r287 =	       c[18]*c[56]*k287;
	r288 =	       c[18]*c[57]*k288;
	r289 =	       c[18]*c[58]*k289;
	r290 =	       c[18]*c[59]*k290;
	r291 =	       c[18]*c[60]*k291;
	r292 =	       c[18]*c[61]*k292;
	r293 =	       c[18]*c[62]*k293;
	r294 =	       c[18]*c[63]*k294;
	r295 =	       c[18]*c[64]*k295;
	r296 =	       c[18]*c[67]*k296;
	r297 =	       c[18]*c[68]*k297;
	r298 =	       c[18]*c[69]*k298;
	r299 =	       c[18]*c[70]*k299;
	r300 =	       c[18]*c[71]*k300;
	r301 =	       c[18]*c[75]*k301;
	r302 =	       c[18]*c[76]*k302;
	r303 =	       c[18]*c[83]*k303;
	r304 =	       c[2]*c[18]*k304;
	r305 =	       c[18]*c[35]*k305;
	r306 =	       c[18]*c[46]*k306;
	r307 =	       c[18]*c[47]*k307;
	r308 =	       c[18]*c[48]*k308;
	r309 =	       c[18]*c[49]*k309;
	r310 =	       c[18]*c[50]*k310;
	r311 =	       c[18]*c[51]*k311;
	r312 =	       c[18]*c[52]*k312;
	r313 =	       c[18]*c[53]*k313;
	r314 =	       c[18]*c[54]*k314;
	r315 =	       c[18]*c[56]*k315;
	r316 =	       c[18]*c[57]*k316;
	r317 =	       c[18]*c[58]*k317;
	r318 =	       c[18]*c[59]*k318;
	r319 =	       c[18]*c[60]*k319;
	r320 =	       c[18]*c[61]*k320;
	r321 =	       c[18]*c[62]*k321;
	r322 =	       c[18]*c[63]*k322;
	r323 =	       c[18]*c[64]*k323;
	r324 =	       c[18]*c[67]*k324;
	r325 =	       c[18]*c[68]*k325;
	r326 =	       c[18]*c[69]*k326;
	r327 =	       c[18]*c[70]*k327;
	r328 =	       c[18]*c[71]*k328;
	r329 =	       c[18]*c[75]*k329;
	r330 =	       c[18]*c[76]*k330;
	r331 =	       c[18]*c[83]*k331;
	r332 =	       c[19]*c[35]*k332;
	r333 =	       c[19]*c[46]*k333;
	r334 =	       c[19]*c[47]*k334;
	r335 =	       c[19]*c[48]*k335;
	r336 =	       c[19]*c[49]*k336;
	r337 =	       c[19]*c[50]*k337;
	r338 =	       c[19]*c[51]*k338;
	r339 =	       c[19]*c[52]*k339;
	r340 =	       c[19]*c[53]*k340;
	r341 =	       c[19]*c[54]*k341;
	r342 =	       c[19]*c[56]*k342;
	r343 =	       c[19]*c[57]*k343;
	r344 =	       c[19]*c[58]*k344;
	r345 =	       c[19]*c[59]*k345;
	r346 =	       c[19]*c[60]*k346;
	r347 =	       c[19]*c[61]*k347;
	r348 =	       c[19]*c[62]*k348;
	r349 =	       c[19]*c[63]*k349;
	r350 =	       c[19]*c[64]*k350;
	r351 =	       c[19]*c[67]*k351;
	r352 =	       c[19]*c[68]*k352;
	r353 =	       c[19]*c[69]*k353;
	r354 =	       c[19]*c[70]*k354;
	r355 =	       c[19]*c[71]*k355;
	r356 =	       c[19]*c[75]*k356;
	r357 =	       c[19]*c[76]*k357;
	r358 =	       c[19]*c[83]*k358;
	r359 =	       c[4]*c[47]*k359;
	r360 =	       c[4]*c[49]*k360;
	r361 =	       c[4]*c[50]*k361;
	r362 =	       c[4]*c[51]*k362;
	r363 =	       c[4]*c[52]*k363;
	r364 =	       c[4]*c[53]*k364;
	r365 =	       c[4]*c[54]*k365;
	r366 =	       c[4]*c[56]*k366;
	r367 =	       c[4]*c[58]*k367;
	r368 =	       c[4]*c[59]*k368;
	r369 =	       c[4]*c[60]*k369;
	r370 =	       c[4]*c[61]*k370;
	r371 =	       c[4]*c[62]*k371;
	r372 =	       c[4]*c[63]*k372;
	r373 =	       c[4]*c[64]*k373;
	r374 =	       c[4]*c[67]*k374;
	r375 =	       c[4]*c[68]*k375;
	r376 =	       c[4]*c[69]*k376;
	r377 =	       c[4]*c[70]*k377;
	r378 =	       c[4]*c[71]*k378;
	r379 =	       c[4]*c[75]*k379;
	r380 =	       c[4]*c[76]*k380;
	r381 =	       c[7]*c[35]*k381;
	r382 =	       c[7]*c[47]*k382;
	r383 =	       c[7]*c[48]*k383;
	r384 =	       c[7]*c[49]*k384;
	r385 =	       c[7]*c[50]*k385;
	r386 =	       c[7]*c[51]*k386;
	r387 =	       c[7]*c[52]*k387;
	r388 =	       c[7]*c[53]*k388;
	r389 =	       c[7]*c[54]*k389;
	r390 =	       c[7]*c[56]*k390;
	r391 =	       c[7]*c[57]*k391;
	r392 =	       c[7]*c[58]*k392;
	r393 =	       c[7]*c[59]*k393;
	r394 =	       c[7]*c[60]*k394;
	r395 =	       c[7]*c[61]*k395;
	r396 =	       c[7]*c[62]*k396;
	r397 =	       c[7]*c[63]*k397;
	r398 =	       c[7]*c[64]*k398;
	r399 =	       c[7]*c[67]*k399;
	r400 =	       c[7]*c[68]*k400;
	r401 =	       c[7]*c[69]*k401;
	r402 =	       c[7]*c[70]*k402;
	r403 =	       c[7]*c[71]*k403;
	r404 =	       c[7]*c[75]*k404;
	r405 =	       c[7]*c[76]*k405;
	r406 =	       c[7]*c[83]*k406;
	r407 =	       c[23]*c[35]*k407;
	r408 =	       c[23]*c[47]*k408;
	r409 =	       c[23]*c[48]*k409;
	r410 =	       c[23]*c[49]*k410;
	r411 =	       c[23]*c[50]*k411;
	r412 =	       c[23]*c[51]*k412;
	r413 =	       c[23]*c[52]*k413;
	r414 =	       c[23]*c[53]*k414;
	r415 =	       c[23]*c[54]*k415;
	r416 =	       c[23]*c[56]*k416;
	r417 =	       c[23]*c[57]*k417;
	r418 =	       c[23]*c[58]*k418;
	r419 =	       c[23]*c[59]*k419;
	r420 =	       c[23]*c[60]*k420;
	r421 =	       c[23]*c[61]*k421;
	r422 =	       c[23]*c[62]*k422;
	r423 =	       c[23]*c[63]*k423;
	r424 =	       c[23]*c[64]*k424;
	r425 =	       c[23]*c[67]*k425;
	r426 =	       c[23]*c[68]*k426;
	r427 =	       c[23]*c[69]*k427;
	r428 =	       c[23]*c[70]*k428;
	r429 =	       c[23]*c[71]*k429;
	r430 =	       c[23]*c[75]*k430;
	r431 =	       c[23]*c[76]*k431;
	r432 =	       c[23]*c[83]*k432;
	r433 =	       c[23]*c[35]*k433;
	r434 =	       c[23]*c[48]*k434;
	r435 =	       c[23]*c[50]*k435;
	r436 =	       c[23]*c[51]*k436;
	r437 =	       c[23]*c[52]*k437;
	r438 =	       c[23]*c[53]*k438;
	r439 =	       c[23]*c[54]*k439;
	r440 =	       c[23]*c[56]*k440;
	r441 =	       c[23]*c[57]*k441;
	r442 =	       c[23]*c[58]*k442;
	r443 =	       c[23]*c[59]*k443;
	r444 =	       c[23]*c[60]*k444;
	r445 =	       c[23]*c[61]*k445;
	r446 =	       c[23]*c[62]*k446;
	r447 =	       c[23]*c[63]*k447;
	r448 =	       c[23]*c[64]*k448;
	r449 =	       c[23]*c[67]*k449;
	r450 =	       c[23]*c[68]*k450;
	r451 =	       c[23]*c[69]*k451;
	r452 =	       c[23]*c[70]*k452;
	r453 =	       c[23]*c[71]*k453;
	r454 =	       c[23]*c[75]*k454;
	r455 =	       c[23]*c[76]*k455;
	r456 =	       c[23]*c[83]*k456;
	r457 =	       c[22]*c[35]*k457;
	r458 =	       c[22]*c[47]*k458;
	r459 =	       c[22]*c[48]*k459;
	r460 =	       c[22]*c[50]*k460;
	r461 =	       c[22]*c[51]*k461;
	r462 =	       c[22]*c[52]*k462;
	r463 =	       c[22]*c[53]*k463;
	r464 =	       c[22]*c[54]*k464;
	r465 =	       c[22]*c[56]*k465;
	r466 =	       c[22]*c[57]*k466;
	r467 =	       c[22]*c[58]*k467;
	r468 =	       c[22]*c[59]*k468;
	r469 =	       c[22]*c[60]*k469;
	r470 =	       c[22]*c[61]*k470;
	r471 =	       c[22]*c[62]*k471;
	r472 =	       c[22]*c[63]*k472;
	r473 =	       c[22]*c[64]*k473;
	r474 =	       c[22]*c[67]*k474;
	r475 =	       c[22]*c[68]*k475;
	r476 =	       c[22]*c[69]*k476;
	r477 =	       c[22]*c[70]*k477;
	r478 =	       c[22]*c[71]*k478;
	r479 =	       c[22]*c[75]*k479;
	r480 =	       c[22]*c[76]*k480;
	r481 =	       c[22]*c[83]*k481;
	r482 =	       c[24]*c[35]*k482;
	r483 =	       c[24]*c[46]*k483;
	r484 =	       c[24]*c[47]*k484;
	r485 =	       c[24]*c[48]*k485;
	r486 =	       c[24]*c[49]*k486;
	r487 =	       c[24]*c[50]*k487;
	r488 =	       c[24]*c[51]*k488;
	r489 =	       c[24]*c[52]*k489;
	r490 =	       c[24]*c[53]*k490;
	r491 =	       c[24]*c[54]*k491;
	r492 =	       c[24]*c[56]*k492;
	r493 =	       c[24]*c[57]*k493;
	r494 =	       c[24]*c[58]*k494;
	r495 =	       c[24]*c[59]*k495;
	r496 =	       c[24]*c[60]*k496;
	r497 =	       c[24]*c[61]*k497;
	r498 =	       c[24]*c[62]*k498;
	r499 =	       c[24]*c[63]*k499;
	r500 =	       c[24]*c[64]*k500;
	r501 =	       c[24]*c[67]*k501;
	r502 =	       c[24]*c[68]*k502;
	r503 =	       c[24]*c[69]*k503;
	r504 =	       c[24]*c[70]*k504;
	r505 =	       c[24]*c[71]*k505;
	r506 =	       c[24]*c[75]*k506;
	r507 =	       c[24]*c[76]*k507;
	r508 =	       c[24]*c[83]*k508;
	r509 =	       c[24]*c[35]*k509;
	r510 =	       c[24]*c[46]*k510;
	r511 =	       c[24]*c[47]*k511;
	r512 =	       c[24]*c[48]*k512;
	r513 =	       c[24]*c[49]*k513;
	r514 =	       c[24]*c[50]*k514;
	r515 =	       c[24]*c[51]*k515;
	r516 =	       c[24]*c[52]*k516;
	r517 =	       c[24]*c[53]*k517;
	r518 =	       c[24]*c[54]*k518;
	r519 =	       c[24]*c[56]*k519;
	r520 =	       c[24]*c[57]*k520;
	r521 =	       c[24]*c[58]*k521;
	r522 =	       c[24]*c[59]*k522;
	r523 =	       c[24]*c[60]*k523;
	r524 =	       c[24]*c[61]*k524;
	r525 =	       c[24]*c[62]*k525;
	r526 =	       c[24]*c[63]*k526;
	r527 =	       c[24]*c[64]*k527;
	r528 =	       c[24]*c[67]*k528;
	r529 =	       c[24]*c[68]*k529;
	r530 =	       c[24]*c[69]*k530;
	r531 =	       c[24]*c[70]*k531;
	r532 =	       c[24]*c[71]*k532;
	r533 =	       c[24]*c[75]*k533;
	r534 =	       c[24]*c[76]*k534;
	r535 =	       c[24]*c[83]*k535;
	r536 =	       c[2]*c[15]*k536;
	r537 =	       c[15]*c[35]*k537;
	r538 =	       c[15]*c[48]*k538;
	r539 =	       c[15]*c[49]*k539;
	r540 =	       c[15]*c[50]*k540;
	r541 =	       c[15]*c[52]*k541;
	r542 =	       c[15]*c[53]*k542;
	r543 =	       c[15]*c[54]*k543;
	r544 =	       c[15]*c[56]*k544;
	r545 =	       c[15]*c[57]*k545;
	r546 =	       c[15]*c[58]*k546;
	r547 =	       c[15]*c[60]*k547;
	r548 =	       c[15]*c[61]*k548;
	r549 =	       c[15]*c[62]*k549;
	r550 =	       c[15]*c[63]*k550;
	r551 =	       c[15]*c[64]*k551;
	r552 =	       c[15]*c[67]*k552;
	r553 =	       c[15]*c[68]*k553;
	r554 =	       c[15]*c[69]*k554;
	r555 =	       c[15]*c[70]*k555;
	r556 =	       c[15]*c[71]*k556;
	r557 =	       c[15]*c[75]*k557;
	r558 =	       c[15]*c[76]*k558;
	r559 =	       c[15]*c[83]*k559;
	r560 =	       c[2]*c[10]*k560;
	r561 =	       c[10]*c[35]*k561;
	r562 =	       c[10]*c[48]*k562;
	r563 =	       c[10]*c[49]*k563;
	r564 =	       c[10]*c[50]*k564;
	r565 =	       c[10]*c[52]*k565;
	r566 =	       c[10]*c[53]*k566;
	r567 =	       c[10]*c[54]*k567;
	r568 =	       c[10]*c[56]*k568;
	r569 =	       c[10]*c[57]*k569;
	r570 =	       c[10]*c[58]*k570;
	r571 =	       c[10]*c[59]*k571;
	r572 =	       c[10]*c[60]*k572;
	r573 =	       c[10]*c[61]*k573;
	r574 =	       c[10]*c[63]*k574;
	r575 =	       c[10]*c[64]*k575;
	r576 =	       c[10]*c[67]*k576;
	r577 =	       c[10]*c[68]*k577;
	r578 =	       c[10]*c[69]*k578;
	r579 =	       c[10]*c[70]*k579;
	r580 =	       c[10]*c[71]*k580;
	r581 =	       c[10]*c[75]*k581;
	r582 =	       c[10]*c[76]*k582;
	r583 =	       c[10]*c[83]*k583;
	r584 =	       c[2]*c[25]*k584;
	r585 =	       c[25]*c[35]*k585;
	r586 =	       c[25]*c[46]*k586;
	r587 =	       c[25]*c[47]*k587;
	r588 =	       c[25]*c[48]*k588;
	r589 =	       c[25]*c[49]*k589;
	r590 =	       c[25]*c[50]*k590;
	r591 =	       c[25]*c[51]*k591;
	r592 =	       c[25]*c[52]*k592;
	r593 =	       c[25]*c[53]*k593;
	r594 =	       c[25]*c[54]*k594;
	r595 =	       c[25]*c[56]*k595;
	r596 =	       c[25]*c[57]*k596;
	r597 =	       c[25]*c[58]*k597;
	r598 =	       c[25]*c[59]*k598;
	r599 =	       c[25]*c[60]*k599;
	r600 =	       c[25]*c[61]*k600;
	r601 =	       c[25]*c[62]*k601;
	r602 =	       c[25]*c[63]*k602;
	r603 =	       c[25]*c[64]*k603;
	r604 =	       c[25]*c[67]*k604;
	r605 =	       c[25]*c[68]*k605;
	r606 =	       c[25]*c[69]*k606;
	r607 =	       c[25]*c[70]*k607;
	r608 =	       c[25]*c[71]*k608;
	r609 =	       c[25]*c[75]*k609;
	r610 =	       c[25]*c[76]*k610;
	r611 =	       c[2]*c[26]*k611;
	r612 =	       c[26]*c[35]*k612;
	r613 =	       c[26]*c[46]*k613;
	r614 =	       c[26]*c[47]*k614;
	r615 =	       c[26]*c[48]*k615;
	r616 =	       c[26]*c[49]*k616;
	r617 =	       c[26]*c[50]*k617;
	r618 =	       c[26]*c[51]*k618;
	r619 =	       c[26]*c[52]*k619;
	r620 =	       c[26]*c[53]*k620;
	r621 =	       c[26]*c[54]*k621;
	r622 =	       c[26]*c[56]*k622;
	r623 =	       c[26]*c[57]*k623;
	r624 =	       c[26]*c[58]*k624;
	r625 =	       c[26]*c[59]*k625;
	r626 =	       c[26]*c[60]*k626;
	r627 =	       c[26]*c[61]*k627;
	r628 =	       c[26]*c[62]*k628;
	r629 =	       c[26]*c[63]*k629;
	r630 =	       c[26]*c[64]*k630;
	r631 =	       c[26]*c[67]*k631;
	r632 =	       c[26]*c[68]*k632;
	r633 =	       c[26]*c[69]*k633;
	r634 =	       c[26]*c[70]*k634;
	r635 =	       c[26]*c[71]*k635;
	r636 =	       c[26]*c[75]*k636;
	r637 =	       c[26]*c[76]*k637;
	r638 =	       c[26]*c[83]*k638;
	r639 =	       c[27]*c[35]*k639;
	r640 =	       c[27]*c[46]*k640;
	r641 =	       c[27]*c[48]*k641;
	r642 =	       c[27]*c[49]*k642;
	r643 =	       c[27]*c[50]*k643;
	r644 =	       c[27]*c[51]*k644;
	r645 =	       c[27]*c[52]*k645;
	r646 =	       c[27]*c[53]*k646;
	r647 =	       c[27]*c[54]*k647;
	r648 =	       c[27]*c[56]*k648;
	r649 =	       c[27]*c[57]*k649;
	r650 =	       c[27]*c[58]*k650;
	r651 =	       c[27]*c[59]*k651;
	r652 =	       c[27]*c[60]*k652;
	r653 =	       c[27]*c[61]*k653;
	r654 =	       c[27]*c[62]*k654;
	r655 =	       c[27]*c[63]*k655;
	r656 =	       c[27]*c[64]*k656;
	r657 =	       c[27]*c[67]*k657;
	r658 =	       c[27]*c[68]*k658;
	r659 =	       c[27]*c[69]*k659;
	r660 =	       c[27]*c[70]*k660;
	r661 =	       c[27]*c[71]*k661;
	r662 =	       c[27]*c[75]*k662;
	r663 =	       c[27]*c[76]*k663;
	r664 =	       c[27]*c[83]*k664;
	r665 =	       c[2]*c[29]*k665;
	r666 =	       c[29]*c[35]*k666;
	r667 =	       c[29]*c[46]*k667;
	r668 =	       c[29]*c[47]*k668;
	r669 =	       c[29]*c[48]*k669;
	r670 =	       c[29]*c[49]*k670;
	r671 =	       c[29]*c[50]*k671;
	r672 =	       c[29]*c[51]*k672;
	r673 =	       c[29]*c[52]*k673;
	r674 =	       c[29]*c[53]*k674;
	r675 =	       c[29]*c[54]*k675;
	r676 =	       c[29]*c[56]*k676;
	r677 =	       c[29]*c[57]*k677;
	r678 =	       c[29]*c[58]*k678;
	r679 =	       c[29]*c[59]*k679;
	r680 =	       c[29]*c[60]*k680;
	r681 =	       c[29]*c[61]*k681;
	r682 =	       c[29]*c[62]*k682;
	r683 =	       c[29]*c[63]*k683;
	r684 =	       c[29]*c[64]*k684;
	r685 =	       c[29]*c[67]*k685;
	r686 =	       c[29]*c[68]*k686;
	r687 =	       c[29]*c[69]*k687;
	r688 =	       c[29]*c[70]*k688;
	r689 =	       c[29]*c[71]*k689;
	r690 =	       c[29]*c[75]*k690;
	r691 =	       c[29]*c[76]*k691;
	r692 =	       c[29]*c[83]*k692;
	r693 =	       c[2]*c[30]*k693;
	r694 =	       c[30]*c[46]*k694;
	r695 =	       c[30]*c[47]*k695;
	r696 =	       c[30]*c[48]*k696;
	r697 =	       c[30]*c[49]*k697;
	r698 =	       c[30]*c[50]*k698;
	r699 =	       c[30]*c[51]*k699;
	r700 =	       c[30]*c[52]*k700;
	r701 =	       c[30]*c[53]*k701;
	r702 =	       c[30]*c[54]*k702;
	r703 =	       c[30]*c[56]*k703;
	r704 =	       c[30]*c[57]*k704;
	r705 =	       c[30]*c[58]*k705;
	r706 =	       c[30]*c[59]*k706;
	r707 =	       c[30]*c[60]*k707;
	r708 =	       c[30]*c[61]*k708;
	r709 =	       c[30]*c[62]*k709;
	r710 =	       c[30]*c[63]*k710;
	r711 =	       c[30]*c[64]*k711;
	r712 =	       c[30]*c[67]*k712;
	r713 =	       c[30]*c[68]*k713;
	r714 =	       c[30]*c[69]*k714;
	r715 =	       c[30]*c[70]*k715;
	r716 =	       c[30]*c[71]*k716;
	r717 =	       c[30]*c[75]*k717;
	r718 =	       c[30]*c[76]*k718;
	r719 =	       c[30]*c[83]*k719;
	r720 =	       c[35]*c[39]*k720;
	r721 =	       c[39]*c[49]*k721;
	r722 =	       c[39]*c[50]*k722;
	r723 =	       c[39]*c[54]*k723;
	r724 =	       c[39]*c[57]*k724;
	r725 =	       c[39]*c[58]*k725;
	r726 =	       c[39]*c[59]*k726;
	r727 =	       c[39]*c[60]*k727;
	r728 =	       c[39]*c[61]*k728;
	r729 =	       c[39]*c[62]*k729;
	r730 =	       c[39]*c[63]*k730;
	r731 =	       c[39]*c[64]*k731;
	r732 =	       c[39]*c[67]*k732;
	r733 =	       c[39]*c[69]*k733;
	r734 =	       c[39]*c[70]*k734;
	r735 =	       c[39]*c[71]*k735;
	r736 =	       c[39]*c[75]*k736;
	r737 =	       c[39]*c[76]*k737;
	r738 =	       c[39]*c[83]*k738;
	r739 =	       (c[2]*c[46]-c[47]*c[48]*uK739)*k739;
	r740 =	       (c[3]*c[48]-c[46]*c[47]*uK740)*k740;
	r741 =	       rFlat741*coeffFallOff741;
	r742 =	       (c[2]*c[2]*c[46]-c[2]*c[49]*uK742)*k742;
	r743 =	       (c[47]*c[49]-c[2]*c[4]*uK743)*k743;
	r744 =	       (c[46]*c[49]-c[47]*c[47]*uK744)*k744;
	r745 =	       (c[48]*c[49]-c[2]*c[47]*uK745)*k745;
	r746 =	       (c[47]*c[47]-c[4]*c[48]*uK746)*k746;
	r747 =	       rFlat747*coeffM747;
	r748 =	       rFlat748*coeffM748;
	r749 =	       rFlat749*coeffM749;
	r750 =	       (c[46]*c[49]-c[2]*c[3]*uK750)*k750;
	r751 =	       (c[49]*c[49]-c[2]*c[7]*uK751)*k751;
	r752 =	       rFlat752*coeffFallOff752;
	r753 =	       rFlat753*coeffM753;
	r754 =	       (c[2]*c[5]-c[6]*c[48]*uK754)*k754;
	r755 =	       (c[2]*c[50]-c[5]*c[49]*uK755)*k755;
	r756 =	       rFlat756*coeffFallOff756;
	r757 =	       (c[5]*c[47]-c[6]*c[46]*uK757)*k757;
	r758 =	       (c[5]*c[47]-c[6]*c[46]*uK758)*k758;
	r759 =	       (c[5]*c[49]-c[6]*c[47]*uK759)*k759;
	r760 =	       (c[4]*c[5]-c[3]*c[6]*uK760)*k760;
	r761 =	       rFlat761*coeffFallOff761;
	r762 =	       rFlat762*coeffFallOff762;
	r763 =	       rFlat763*coeffFallOff763;
	r764 =	       (c[46]*c[53]-c[3]*c[10]*uK764)*k764;
	r765 =	       (c[46]*c[53]-c[11]*uK765)*k765;
	r766 =	       (c[12]-c[51]*c[52]*uK766)*k766;
	r767 =	       (c[12]-c[46]*c[54]*uK767)*k767;
	r768 =	       rFlat768*coeffM768;
	r769 =	       rFlat769*coeffM769;
	r770 =	       (c[15]-c[51]*c[55]*uK770)*k770;
	r771 =	       rFlat771*coeffM771;
	r772 =	       rFlat772*coeffM772;
	r773 =	       (c[11]-c[51]*c[56]*uK773)*k773;
	r774 =	       rFlat774*coeffM774;
	r775 =	       (c[17]-c[55]*c[56]*uK775)*k775;
	r776 =	       (c[18]-c[51]*c[53]*uK776)*k776;
	r777 =	       (c[19]-c[46]*c[58]*uK777)*k777;
	r778 =	       (c[19]-c[51]*c[59]*uK778)*k778;
	r779 =	       (c[56]*c[56]-c[20]*uK779)*k779;
	r780 =	       (c[13]*c[14]-c[20]*uK780)*k780;
	r781 =	       (c[20]-c[3]*c[17]*uK781)*k781;
	r782 =	       (c[3]*c[13]-c[46]*c[56]*uK782)*k782;
	r783 =	       (c[3]*c[14]-c[46]*c[52]*uK783)*k783;
	r784 =	       (c[46]*c[60]-c[13]*c[13]*uK784)*k784;
	r785 =	       c[51]*c[54]*k785;
	r786 =	       c[51]*c[51]*k786;
	r787 =	       c[51]*c[57]*k787;
	r788 =	       (c[8]*c[13]-c[51]*c[56]*uK788)*k788;
	r789 =	       c[8]*c[14]*k789;
	r790 =	       c[52]*c[54]*k790;
	r791 =	       c[52]*c[56]*k791;
	r792 =	       c[52]*c[61]*k792;
	r793 =	       (c[13]*c[13]-c[55]*c[56]*uK793)*k793;
	r794 =	       (c[13]*c[14]-c[56]*c[56]*uK794)*k794;
	r795 =	       (c[46]*c[60]-c[3]*c[16]*uK795)*k795;
	r796 =	       (c[46]*c[60]-c[17]*uK796)*k796;
	r797 =	       (c[46]*c[62]-c[13]*c[14]*uK797)*k797;
	r798 =	       (c[46]*c[62]-c[3]*c[17]*uK798)*k798;
	r799 =	       (c[10]*c[13]-c[53]*c[55]*uK799)*k799;
	r800 =	       (c[9]*c[13]-c[52]*c[56]*uK800)*k800;
	r801 =	       (c[11]*c[13]-c[53]*c[56]*uK801)*k801;
	r802 =	       (c[13]*c[16]-c[55]*c[60]*uK802)*k802;
	r803 =	       (c[13]*c[17]-c[55]*c[62]*uK803)*k803;
	r804 =	       (c[13]*c[17]-c[56]*c[60]*uK804)*k804;
	r805 =	       (c[14]*c[14]-c[52]*c[56]*uK805)*k805;
	r806 =	       (c[11]*c[14]-c[52]*c[53]*uK806)*k806;
	r807 =	       c[56]*c[61]*k807;
	r808 =	       c[56]*c[58]*k808;
	r809 =	       c[57]*c[57]*k809;
	r810 =	       c[53]*c[53]*k810;
	r811 =	       c[53]*c[57]*k811;
	r812 =	       c[53]*c[61]*k812;
	r813 =	       c[53]*c[58]*k813;
	r814 =	       c[61]*c[61]*k814;
	r815 =	       c[58]*c[61]*k815;
	r816 =	       (c[20]*c[20]-c[61]*c[62]*uK816)*k816;
	r817 =	       c[10]*k817;
	r818 =	       c[15]*k818;
	r819 =	       rFlat819*coeffFallOff819;
	r820 =	       rFlat820*coeffFallOff820;
	r821 =	       (c[57]-c[21]*c[46]*uK821)*k821;
	r822 =	       rFlat822*coeffFallOff822;
	r823 =	       rFlat823*coeffFallOff823;
	r824 =	       rFlat824*coeffFallOff824;
	r825 =	       (c[54]-c[11]*c[46]*uK825)*k825;
	r826 =	       (c[54]-c[63]*uK826)*k826;
	r827 =	       (c[63]-c[14]*c[51]*uK827)*k827;
	r828 =	       (c[63]-c[11]*c[46]*uK828)*k828;
	r829 =	       (c[60]-c[16]*c[46]*uK829)*k829;
	r830 =	       (c[60]-c[13]*c[55]*uK830)*k830;
	r831 =	       (c[62]-c[17]*c[46]*uK831)*k831;
	r832 =	       (c[62]-c[14]*c[55]*uK832)*k832;
	r833 =	       (c[62]-c[13]*c[56]*uK833)*k833;
	r834 =	       (c[61]-c[20]*c[46]*uK834)*k834;
	r835 =	       (c[64]-c[61]*uK835)*k835;
	r836 =	       (c[64]-c[14]*c[56]*uK836)*k836;
	r837 =	       (c[64]-c[20]*c[46]*uK837)*k837;
	r838 =	       c[64]*k838;
	r839 =	       (c[58]-c[10]*c[51]*uK839)*k839;
	r840 =	       (c[51]*c[51]-c[46]*c[52]*uK840)*k840;
	r841 =	       (c[51]*c[56]-c[46]*c[53]*uK841)*k841;
	r842 =	       (c[15]*c[46]-c[13]*c[51]*uK842)*k842;
	r843 =	       (c[21]*c[65]-c[16]*c[46]*uK843)*k843;
	r844 =	       (c[57]*c[65]-c[16]*c[46]*c[46]*uK844)*k844;
	r845 =	       (c[57]*c[66]-c[17]*c[46]*uK845)*k845;
	r846 =	       (c[21]*c[51]-c[17]*c[46]*uK846)*k846;
	r847 =	       c[57]*c[61]*k847;
	r848 =	       c[57]*c[58]*k848;
	r849 =	       c[8]*c[51]*k849;
	r850 =	       c[20]*c[51]*k850;
	r851 =	       c[13]*c[52]*k851;
	r852 =	       c[11]*c[52]*k852;
	r853 =	       c[20]*c[52]*k853;
	r854 =	       c[14]*c[63]*k854;
	r855 =	       c[14]*c[54]*k855;
	r856 =	       c[11]*c[54]*k856;
	r857 =	       (c[13]*c[56]-c[17]*c[46]*uK857)*k857;
	r858 =	       (c[13]*c[55]-c[16]*c[46]*uK858)*k858;
	r859 =	       (c[14]*c[55]-c[17]*c[46]*uK859)*k859;
	r860 =	       c[15]*c[55]*k860;
	r861 =	       (c[20]*c[57]-c[10]*c[62]*uK861)*k861;
	r862 =	       c[11]*c[53]*k862;
	r863 =	       c[14]*c[59]*k863;
	r864 =	       c[15]*c[59]*k864;
	r865 =	       c[14]*c[61]*k865;
	r866 =	       c[14]*c[64]*k866;
	r867 =	       c[11]*c[64]*k867;
	r868 =	       rFlat868*coeffM868;
	r869 =	       (c[9]-c[3]*c[14]*uK869)*k869;
	r870 =	       (c[11]-c[3]*c[10]*uK870)*k870;
	r871 =	       (c[11]-c[3]*c[15]*uK871)*k871;
	r872 =	       (c[12]-c[3]*c[11]*uK872)*k872;
	r873 =	       (c[17]-c[13]*c[13]*uK873)*k873;
	r874 =	       (c[17]-c[3]*c[16]*uK874)*k874;
	r875 =	       (c[18]-c[3]*c[20]*uK875)*k875;
	r876 =	       (c[14]*c[14]-c[18]*uK876)*k876;
	r877 =	       (c[11]*c[11]-c[14]*c[18]*uK877)*k877;
	r878 =	       c[10]*c[10]*k878;
	r879 =	       rFlat879*coeffM879;
	r880 =	       rFlat880*coeffM880;
	r881 =	       rFlat881*coeffFallOff881;
	r882 =	       rFlat882*coeffFallOff882;
	r883 =	       (c[24]-c[50]*c[51]*uK883)*k883;
	r884 =	       (c[2]*c[13]-c[47]*c[68]*uK884)*k884;
	r885 =	       c[2]*c[10]*k885;
	r886 =	       c[2]*c[15]*k886;
	r887 =	       (c[2]*c[8]-c[49]*c[51]*uK887)*k887;
	r888 =	       (c[2]*c[22]-c[49]*c[50]*uK888)*k888;
	r889 =	       (c[2]*c[23]-c[49]*c[67]*uK889)*k889;
	r890 =	       (c[2]*c[23]-c[49]*c[70]*uK890)*k890;
	r891 =	       (c[2]*c[14]-c[49]*c[56]*uK891)*k891;
	r892 =	       (c[2]*c[9]-c[49]*c[52]*uK892)*k892;
	r893 =	       (c[2]*c[24]-c[49]*c[69]*uK893)*k893;
	r894 =	       (c[2]*c[12]-c[49]*c[63]*uK894)*k894;
	r895 =	       (c[2]*c[12]-c[49]*c[54]*uK895)*k895;
	r896 =	       (c[2]*c[11]-c[49]*c[53]*uK896)*k896;
	r897 =	       (c[2]*c[18]-c[49]*c[61]*uK897)*k897;
	r898 =	       (c[2]*c[19]-c[49]*c[58]*uK898)*k898;
	r899 =	       rFlat899*coeffM899;
	r900 =	       rFlat900*coeffFallOff900;
	r901 =	       rFlat901*coeffM901;
	r902 =	       (c[69]-c[25]*c[46]*uK902)*k902;
	r903 =	       rFlat903*coeffM903;
	r904 =	       c[25]*c[46]*k904;
	r905 =	       c[23]*c[46]*k905;
	r906 =	       c[13]*c[48]*k906;
	r907 =	       c[14]*c[48]*k907;
	r908 =	       (c[14]*c[48]-c[50]*c[51]*uK908)*k908;
	r909 =	       (c[15]*c[48]-c[5]*c[14]*uK909)*k909;
	r910 =	       c[10]*c[48]*k910;
	r911 =	       c[11]*c[48]*k911;
	r912 =	       (c[17]*c[48]-c[50]*c[57]*uK912)*k912;
	r913 =	       c[17]*c[48]*k913;
	r914 =	       c[20]*c[48]*k914;
	r915 =	       c[22]*c[48]*k915;
	r916 =	       c[24]*c[48]*k916;
	r917 =	       c[25]*c[48]*k917;
	r918 =	       c[25]*c[48]*k918;
	r919 =	       c[13]*c[47]*k919;
	r920 =	       c[22]*c[47]*k920;
	r921 =	       c[25]*c[47]*k921;
	r922 =	       c[25]*c[47]*k922;
	r923 =	       c[24]*c[47]*k923;
	r924 =	       c[10]*c[47]*k924;
	r925 =	       c[18]*c[47]*k925;
	r926 =	       (c[16]*c[47]-c[13]*c[68]*uK926)*k926;
	r927 =	       c[17]*c[47]*k927;
	r928 =	       c[13]*c[49]*k928;
	r929 =	       c[15]*c[49]*k929;
	r930 =	       c[13]*c[50]*k930;
	r931 =	       c[20]*c[50]*k931;
	r932 =	       (c[22]*c[50]-c[6]*c[51]*uK932)*k932;
	r933 =	       c[24]*c[50]*k933;
	r934 =	       c[22]*c[56]*k934;
	r935 =	       (c[5]*c[70]-c[6]*c[51]*uK935)*k935;
	r936 =	       c[2]*c[13]*k936;
	r937 =	       c[2]*c[14]*k937;
	r938 =	       c[2]*c[11]*k938;
	r939 =	       c[2]*c[25]*k939;
	r940 =	       c[2]*c[25]*k940;
	r941 =	       c[2]*c[13]*k941;
	r942 =	       c[2]*c[14]*k942;
	r943 =	       c[2]*c[20]*k943;
	r944 =	       c[2]*c[70]*k944;
	r945 =	       (c[2]*c[67]-c[22]*c[49]*uK945)*k945;
	r946 =	       c[2]*c[52]*k946;
	r947 =	       c[2]*c[63]*k947;
	r948 =	       c[2]*c[54]*k948;
	r949 =	       c[2]*c[59]*k949;
	r950 =	       c[2]*c[61]*k950;
	r951 =	       c[2]*c[64]*k951;
	r952 =	       (c[2]*c[51]-c[48]*c[70]*uK952)*k952;
	r953 =	       (c[2]*c[55]-c[5]*c[50]*uK953)*k953;
	r954 =	       (c[2]*c[55]-c[6]*c[65]*uK954)*k954;
	r955 =	       (c[2]*c[56]-c[48]*c[71]*uK955)*k955;
	r956 =	       c[2]*c[56]*k956;
	r957 =	       c[2]*c[56]*k957;
	r958 =	       (c[2]*c[56]-c[13]*c[49]*uK958)*k958;
	r959 =	       c[2]*c[52]*k959;
	r960 =	       c[2]*c[52]*k960;
	r961 =	       c[2]*c[71]*k961;
	r962 =	       (c[2]*c[60]-c[25]*c[68]*uK962)*k962;
	r963 =	       c[2]*c[62]*k963;
	r964 =	       c[2]*c[62]*k964;
	r965 =	       c[2]*c[58]*k965;
	r966 =	       c[48]*c[51]*k966;
	r967 =	       rFlat967*coeffM967;
	r968 =	       c[48]*c[56]*k968;
	r969 =	       c[48]*c[52]*k969;
	r970 =	       c[48]*c[54]*k970;
	r971 =	       c[48]*c[63]*k971;
	r972 =	       c[48]*c[53]*k972;
	r973 =	       c[48]*c[61]*k973;
	r974 =	       c[48]*c[58]*k974;
	r975 =	       c[48]*c[71]*k975;
	r976 =	       (c[47]*c[51]-c[46]*c[67]*uK976)*k976;
	r977 =	       (c[47]*c[51]-c[46]*c[70]*uK977)*k977;
	r978 =	       (c[47]*c[51]-c[3]*c[22]*uK978)*k978;
	r979 =	       (c[47]*c[51]-c[8]*c[48]*uK979)*k979;
	r980 =	       c[47]*c[55]*k980;
	r981 =	       c[47]*c[56]*k981;
	r982 =	       (c[47]*c[56]-c[4]*c[13]*uK982)*k982;
	r983 =	       (c[47]*c[60]-c[4]*c[16]*uK983)*k983;
	r984 =	       (c[47]*c[62]-c[4]*c[17]*uK984)*k984;
	r985 =	       c[47]*c[60]*k985;
	r986 =	       c[47]*c[62]*k986;
	r987 =	       c[47]*c[58]*k987;
	r988 =	       c[47]*c[61]*k988;
	r989 =	       c[47]*c[61]*k989;
	r990 =	       c[47]*c[69]*k990;
	r991 =	       c[47]*c[71]*k991;
	r992 =	       (c[49]*c[51]-c[47]*c[70]*uK992)*k992;
	r993 =	       c[49]*c[56]*k993;
	r994 =	       c[49]*c[52]*k994;
	r995 =	       c[49]*c[53]*k995;
	r996 =	       c[49]*c[59]*k996;
	r997 =	       c[49]*c[58]*k997;
	r998 =	       (c[48]*c[50]-c[6]*c[46]*uK998)*k998;
	r999 =	       (c[46]*c[50]-c[3]*c[5]*uK999)*k999;
	r1000 =	       (c[47]*c[50]-c[4]*c[5]*uK1000)*k1000;
	r1001 =	       (c[49]*c[50]-c[5]*c[7]*uK1001)*k1001;
	r1002 =	       c[49]*c[50]*k1002;
	r1003 =	       (c[50]*c[50]-c[5]*c[22]*uK1003)*k1003;
	r1004 =	       c[50]*c[51]*k1004;
	r1005 =	       c[46]*c[70]*k1005;
	r1006 =	       c[47]*c[70]*k1006;
	r1007 =	       c[49]*c[70]*k1007;
	r1008 =	       (c[50]*c[70]-c[22]*c[22]*uK1008)*k1008;
	r1009 =	       c[50]*c[70]*k1009;
	r1010 =	       c[51]*c[70]*k1010;
	r1011 =	       c[70]*c[70]*k1011;
	r1012 =	       c[46]*c[67]*k1012;
	r1013 =	       c[47]*c[67]*k1013;
	r1014 =	       c[49]*c[67]*k1014;
	r1015 =	       c[50]*c[67]*k1015;
	r1016 =	       c[50]*c[67]*k1016;
	r1017 =	       c[51]*c[67]*k1017;
	r1018 =	       c[67]*c[70]*k1018;
	r1019 =	       c[67]*c[67]*k1019;
	r1020 =	       c[25]*c[49]*k1020;
	r1021 =	       c[46]*c[71]*k1021;
	r1022 =	       c[47]*c[71]*k1022;
	r1023 =	       (c[71]-c[69]*uK1023)*k1023;
	r1024 =	       (c[2]*c[24]-c[49]*c[71]*uK1024)*k1024;
	r1025 =	       (c[71]-c[25]*c[46]*uK1025)*k1025;
	r1026 =	       c[14]*c[48]*k1026;
	r1027 =	       c[13]*c[47]*k1027;
	r1028 =	       c[20]*c[47]*k1028;
	r1029 =	       c[2]*c[71]*k1029;
	r1030 =	       (c[8]*c[72]-c[51]*c[51]*uK1030)*k1030;
	r1031 =	       (c[8]*c[66]-c[51]*c[51]*uK1031)*k1031;
	r1032 =	       (c[8]*c[65]-c[14]*c[46]*uK1032)*k1032;
	r1033 =	       rFlat1033*coeffM1033;
	r1034 =	       (c[3]*c[66]-c[46]*c[51]*uK1034)*k1034;
	r1035 =	       (c[47]*c[51]-c[4]*c[66]*uK1035)*k1035;
	r1036 =	       (c[51]*c[72]-c[14]*c[46]*uK1036)*k1036;
	r1037 =	       (c[51]*c[66]-c[14]*c[46]*uK1037)*k1037;
	r1038 =	       (c[51]*c[65]-c[46]*c[56]*uK1038)*k1038;
	r1039 =	       (c[51]*c[73]-c[13]*c[46]*uK1039)*k1039;
	r1040 =	       (c[22]*c[65]-c[25]*c[46]*uK1040)*k1040;
	r1041 =	       (c[50]*c[72]-c[5]*c[51]*uK1041)*k1041;
	r1042 =	       (c[46]*c[72]-c[3]*c[65]*uK1042)*k1042;
	r1043 =	       (c[48]*c[72]-c[5]*c[46]*c[46]*uK1043)*k1043;
	r1044 =	       (c[48]*c[72]-c[3]*c[5]*uK1044)*k1044;
	r1045 =	       (c[47]*c[72]-c[22]*c[46]*uK1045)*k1045;
	r1046 =	       (c[47]*c[72]-c[4]*c[65]*uK1046)*k1046;
	r1047 =	       (c[2]*c[72]-c[22]*c[48]*uK1047)*k1047;
	r1048 =	       (c[2]*c[72]-c[4]*c[5]*uK1048)*k1048;
	r1049 =	       (c[2]*c[72]-c[5]*c[46]*c[47]*uK1049)*k1049;
	r1050 =	       (c[6]*c[72]-c[5]*c[22]*uK1050)*k1050;
	r1051 =	       (c[72]*c[72]-c[13]*c[46]*c[46]*uK1051)*k1051;
	r1052 =	       (c[65]*c[72]-c[13]*c[46]*uK1052)*k1052;
	r1053 =	       (c[72]*c[73]-c[46]*c[55]*uK1053)*k1053;
	r1054 =	       rFlat1054*coeffM1054;
	r1055 =	       (c[46]*c[66]-c[3]*c[65]*uK1055)*k1055;
	r1056 =	       (c[48]*c[66]-c[5]*c[46]*c[46]*uK1056)*k1056;
	r1057 =	       (c[47]*c[66]-c[22]*c[46]*uK1057)*k1057;
	r1058 =	       (c[2]*c[66]-c[5]*c[46]*c[47]*uK1058)*k1058;
	r1059 =	       (c[6]*c[66]-c[5]*c[22]*uK1059)*k1059;
	r1060 =	       (c[46]*c[65]-c[3]*c[73]*uK1060)*k1060;
	r1061 =	       (c[48]*c[65]-c[5]*c[46]*uK1061)*k1061;
	r1062 =	       (c[47]*c[65]-c[46]*c[50]*uK1062)*k1062;
	r1063 =	       (c[47]*c[65]-c[4]*c[73]*uK1063)*k1063;
	r1064 =	       (c[2]*c[65]-c[48]*c[50]*uK1064)*k1064;
	r1065 =	       (c[4]*c[65]-c[22]*c[46]*uK1065)*k1065;
	r1066 =	       (c[6]*c[65]-c[5]*c[50]*uK1066)*k1066;
	r1067 =	       (c[47]*c[73]-c[5]*c[46]*uK1067)*k1067;
	r1068 =	       (c[2]*c[73]-c[5]*c[48]*uK1068)*k1068;
	r1069 =	       (c[13]*c[48]-c[5]*c[72]*uK1069)*k1069;
	r1070 =	       (c[13]*c[48]-c[46]*c[68]*uK1070)*k1070;
	r1071 =	       (c[13]*c[72]-c[46]*c[57]*uK1071)*k1071;
	r1072 =	       (c[13]*c[66]-c[46]*c[57]*uK1072)*k1072;
	r1073 =	       (c[13]*c[65]-c[21]*c[46]*uK1073)*k1073;
	r1074 =	       rFlat1074*coeffFallOff1074;
	r1075 =	       (c[25]*c[48]-c[6]*c[72]*uK1075)*k1075;
	r1076 =	       (c[25]*c[72]-c[5]*c[14]*uK1076)*k1076;
	r1077 =	       (c[25]*c[72]-c[51]*c[68]*uK1077)*k1077;
	r1078 =	       (c[25]*c[51]-c[5]*c[52]*uK1078)*k1078;
	r1079 =	       (c[46]*c[68]-c[5]*c[66]*uK1079)*k1079;
	r1080 =	       (c[48]*c[68]-c[5]*c[5]*c[46]*uK1080)*k1080;
	r1081 =	       (c[47]*c[68]-c[5]*c[46]*c[50]*uK1081)*k1081;
	r1082 =	       (c[2]*c[68]-c[5]*c[5]*c[47]*uK1082)*k1082;
	r1083 =	       (c[68]*c[72]-c[5]*c[56]*uK1083)*k1083;
	r1084 =	       (c[65]*c[68]-c[5]*c[13]*uK1084)*k1084;
	r1085 =	       (c[68]*c[68]-c[5]*c[5]*c[13]*uK1085)*k1085;
	r1086 =	       (c[48]*c[55]-c[5]*c[65]*uK1086)*k1086;
	r1087 =	       (c[47]*c[55]-c[46]*c[68]*uK1087)*k1087;
	r1088 =	       (c[2]*c[55]-c[48]*c[68]*uK1088)*k1088;
	r1089 =	       (c[16]*c[48]-c[5]*c[21]*uK1089)*k1089;
	r1090 =	       (c[16]*c[47]-c[21]*c[50]*uK1090)*k1090;
	r1091 =	       (c[46]*c[57]-c[3]*c[21]*uK1091)*k1091;
	r1092 =	       (c[48]*c[57]-c[22]*c[55]*uK1092)*k1092;
	r1093 =	       (c[47]*c[57]-c[4]*c[21]*uK1093)*k1093;
	r1094 =	       (c[47]*c[57]-c[50]*c[56]*uK1094)*k1094;
	r1095 =	       (c[2]*c[57]-c[25]*c[50]*uK1095)*k1095;
	r1096 =	       (c[50]*c[57]-c[5]*c[15]*uK1096)*k1096;
	r1097 =	       (c[21]*c[47]-c[13]*c[50]*uK1097)*k1097;
	r1098 =	       (c[2]*c[21]-c[50]*c[68]*uK1098)*k1098;
	r1099 =	       (c[10]*c[46]-c[3]*c[57]*uK1099)*k1099;
	r1100 =	       (c[10]*c[47]-c[4]*c[57]*uK1100)*k1100;
	r1101 =	       (c[15]*c[46]-c[3]*c[57]*uK1101)*k1101;
	r1102 =	       (c[15]*c[47]-c[4]*c[57]*uK1102)*k1102;
	r1103 =	       (c[15]*c[51]-c[8]*c[57]*uK1103)*k1103;
	r1104 =	       (c[10]*c[51]-c[8]*c[57]*uK1104)*k1104;
	r1105 =	       (c[4]*c[46]-c[3]*c[47]*uK1105)*k1105;
	r1106 =	       (c[7]*c[46]-c[4]*c[47]*uK1106)*k1106;
	r1107 =	       (c[7]*c[46]-c[3]*c[49]*uK1107)*k1107;
	r1108 =	       (c[22]*c[46]-c[3]*c[50]*uK1108)*k1108;
	r1109 =	       (c[8]*c[46]-c[3]*c[51]*uK1109)*k1109;
	r1110 =	       (c[9]*c[46]-c[3]*c[52]*uK1110)*k1110;
	r1111 =	       (c[12]*c[46]-c[3]*c[63]*uK1111)*k1111;
	r1112 =	       (c[12]*c[46]-c[3]*c[54]*uK1112)*k1112;
	r1113 =	       c[22]*c[49]*k1113;
	r1114 =	       c[23]*c[46]*k1114;
	r1115 =	       c[23]*c[46]*k1115;
	r1116 =	       c[23]*c[47]*k1116;
	r1117 =	       c[23]*c[49]*k1117;
	r1118 =	       (c[3]*c[55]-c[13]*c[46]*uK1118)*k1118;
	r1119 =	       (c[13]*c[47]-c[4]*c[55]*uK1119)*k1119;
	r1120 =	       (c[26]-c[46]*c[74]*uK1120)*k1120;
	r1121 =	       c[51]*c[60]*k1121;
	r1122 =	       c[53]*c[59]*k1122;
	r1123 =	       c[74]*k1123;
	r1124 =	       c[16]*c[51]*k1124;
	r1125 =	       c[10]*c[56]*k1125;
	r1126 =	       c[15]*c[56]*k1126;
	r1127 =	       (c[14]*c[57]-c[26]*c[46]*uK1127)*k1127;
	r1128 =	       c[11]*c[53]*k1128;
	r1129 =	       c[14]*c[61]*k1129;
	r1130 =	       c[19]*c[61]*k1130;
	r1131 =	       c[13]*c[58]*k1131;
	r1132 =	       c[14]*c[58]*k1132;
	r1133 =	       c[14]*c[58]*k1133;
	r1134 =	       (c[10]*c[13]-c[26]*uK1134)*k1134;
	r1135 =	       (c[13]*c[15]-c[26]*uK1135)*k1135;
	r1136 =	       c[26]*c[48]*k1136;
	r1137 =	       c[26]*c[47]*k1137;
	r1138 =	       c[2]*c[26]*k1138;
	r1139 =	       (c[27]-c[46]*c[75]*uK1139)*k1139;
	r1140 =	       (c[2]*c[27]-c[49]*c[75]*uK1140)*k1140;
	r1141 =	       c[27]*c[47]*k1141;
	r1142 =	       c[55]*c[62]*k1142;
	r1143 =	       c[56]*c[60]*k1143;
	r1144 =	       rFlat1144*coeffFallOff1144;
	r1145 =	       (c[57]*c[57]-c[46]*c[75]*uK1145)*k1145;
	r1146 =	       c[11]*c[20]*k1146;
	r1147 =	       c[14]*c[26]*k1147;
	r1148 =	       c[11]*c[26]*k1148;
	r1149 =	       c[20]*c[26]*k1149;
	r1150 =	       c[20]*c[27]*k1150;
	r1151 =	       c[26]*c[27]*k1151;
	r1152 =	       c[53]*c[58]*k1152;
	r1153 =	       c[61]*c[61]*k1153;
	r1154 =	       c[17]*c[56]*k1154;
	r1155 =	       c[20]*c[56]*k1155;
	r1156 =	       c[20]*c[55]*k1156;
	r1157 =	       c[15]*c[57]*k1157;
	r1158 =	       c[10]*c[57]*k1158;
	r1159 =	       c[10]*c[53]*k1159;
	r1160 =	       c[15]*c[53]*k1160;
	r1161 =	       c[20]*c[53]*k1161;
	r1162 =	       c[20]*c[59]*k1162;
	r1163 =	       c[14]*c[60]*k1163;
	r1164 =	       c[27]*c[60]*k1164;
	r1165 =	       (c[13]*c[62]-c[27]*c[46]*uK1165)*k1165;
	r1166 =	       c[14]*c[62]*k1166;
	r1167 =	       c[10]*c[62]*k1167;
	r1168 =	       c[15]*c[62]*k1168;
	r1169 =	       c[16]*c[62]*k1169;
	r1170 =	       c[17]*c[62]*k1170;
	r1171 =	       c[20]*c[62]*k1171;
	r1172 =	       c[27]*c[62]*k1172;
	r1173 =	       c[11]*c[61]*k1173;
	r1174 =	       c[27]*c[64]*k1174;
	r1175 =	       (c[13]*c[17]-c[27]*uK1175)*k1175;
	r1176 =	       c[13]*c[20]*k1176;
	r1177 =	       c[14]*c[20]*k1177;
	r1178 =	       c[14]*c[16]*k1178;
	r1179 =	       c[14]*c[17]*k1179;
	r1180 =	       c[47]*c[74]*k1180;
	r1181 =	       c[48]*c[75]*k1181;
	r1182 =	       c[49]*c[74]*k1182;
	r1183 =	       c[75]*k1183;
	r1184 =	       (c[62]*c[62]-c[14]*c[27]*uK1184)*k1184;
	r1185 =	       c[26]*c[74]*k1185;
	r1186 =	       c[27]*c[74]*k1186;
	r1187 =	       c[74]*c[74]*k1187;
	r1188 =	       c[27]*c[47]*k1188;
	r1189 =	       c[29]*k1189;
	r1190 =	       rFlat1190*coeffM1190;
	r1191 =	       (c[46]*c[76]-c[3]*c[77]*uK1191)*k1191;
	r1192 =	       (c[48]*c[76]-c[31]*c[46]*uK1192)*k1192;
	r1193 =	       (c[48]*c[76]-c[47]*c[77]*uK1193)*k1193;
	r1194 =	       (c[48]*c[76]-c[3]*c[32]*uK1194)*k1194;
	r1195 =	       (c[2]*c[76]-c[31]*c[47]*uK1195)*k1195;
	r1196 =	       (c[47]*c[76]-c[4]*c[77]*uK1196)*k1196;
	r1197 =	       (c[49]*c[76]-c[47]*c[78]*uK1197)*k1197;
	r1198 =	       (c[48]*c[78]-c[2]*c[76]*uK1198)*k1198;
	r1199 =	       (c[76]*c[79]-c[1]*c[46]*c[46]*uK1199)*k1199;
	r1200 =	       (c[76]*c[77]-c[33]*c[46]*uK1200)*k1200;
	r1201 =	       (c[76]*c[76]-c[3]*c[33]*uK1201)*k1201;
	r1202 =	       (c[76]*c[76]-c[30]*c[77]*uK1202)*k1202;
	r1203 =	       rFlat1203*coeffFallOff1203;
	r1204 =	       (c[32]*c[76]-c[47]*c[80]*uK1204)*k1204;
	r1205 =	       (c[32]*c[76]-c[1]*c[4]*uK1205)*k1205;
	r1206 =	       (c[35]*c[76]-c[4]*c[36]*uK1206)*k1206;
	r1207 =	       (c[35]*c[76]-c[32]*c[78]*uK1207)*k1207;
	r1208 =	       (c[46]*c[77]-c[3]*c[79]*uK1208)*k1208;
	r1209 =	       (c[48]*c[77]-c[32]*c[46]*uK1209)*k1209;
	r1210 =	       (c[47]*c[77]-c[31]*c[46]*uK1210)*k1210;
	r1211 =	       (c[47]*c[77]-c[4]*c[79]*uK1211)*k1211;
	r1212 =	       (c[47]*c[77]-c[3]*c[32]*uK1212)*k1212;
	r1213 =	       (c[2]*c[77]-c[31]*c[48]*uK1213)*k1213;
	r1214 =	       (c[2]*c[77]-c[32]*c[47]*uK1214)*k1214;
	r1215 =	       (c[77]*c[77]-c[1]*c[46]*c[46]*uK1215)*k1215;
	r1216 =	       (c[77]*c[79]-c[1]*c[46]*uK1216)*k1216;
	r1217 =	       (c[32]*c[77]-c[1]*c[47]*uK1217)*k1217;
	r1218 =	       (c[35]*c[77]-c[36]*c[47]*uK1218)*k1218;
	r1219 =	       (c[47]*c[79]-c[32]*c[46]*uK1219)*k1219;
	r1220 =	       (c[2]*c[79]-c[32]*c[48]*uK1220)*k1220;
	r1221 =	       (c[32]*c[79]-c[1]*c[48]*uK1221)*k1221;
	r1222 =	       (c[34]*c[46]-c[3]*c[81]*uK1222)*k1222;
	r1223 =	       (c[34]*c[48]-c[4]*c[33]*uK1223)*k1223;
	r1224 =	       (c[34]*c[47]-c[4]*c[81]*uK1224)*k1224;
	r1225 =	       (c[34]*c[76]-c[30]*c[81]*uK1225)*k1225;
	r1226 =	       rFlat1226*coeffM1226;
	r1227 =	       (c[46]*c[81]-c[76]*c[76]*uK1227)*k1227;
	r1228 =	       (c[48]*c[81]-c[33]*c[47]*uK1228)*k1228;
	r1229 =	       (c[48]*c[81]-c[31]*c[76]*uK1229)*k1229;
	r1230 =	       (c[47]*c[81]-c[4]*c[33]*uK1230)*k1230;
	r1231 =	       (c[47]*c[81]-c[30]*c[31]*uK1231)*k1231;
	r1232 =	       (c[77]*c[81]-c[33]*c[76]*uK1232)*k1232;
	r1233 =	       rFlat1233*coeffM1233;
	r1234 =	       (c[33]*c[46]-c[3]*c[80]*uK1234)*k1234;
	r1235 =	       (c[33]*c[48]-c[32]*c[76]*uK1235)*k1235;
	r1236 =	       (c[33]*c[48]-c[47]*c[80]*uK1236)*k1236;
	r1237 =	       (c[33]*c[47]-c[4]*c[80]*uK1237)*k1237;
	r1238 =	       (c[32]*c[33]-c[36]*c[76]*uK1238)*k1238;
	r1239 =	       (c[33]*c[77]-c[76]*c[80]*uK1239)*k1239;
	r1240 =	       (c[33]*c[76]-c[30]*c[80]*uK1240)*k1240;
	r1241 =	       (c[80]-c[1]*c[46]*uK1241)*k1241;
	r1242 =	       (c[46]*c[80]-c[1]*c[3]*uK1242)*k1242;
	r1243 =	       (c[48]*c[80]-c[36]*c[46]*uK1243)*k1243;
	r1244 =	       (c[48]*c[80]-c[32]*c[77]*uK1244)*k1244;
	r1245 =	       (c[47]*c[80]-c[1]*c[4]*uK1245)*k1245;
	r1246 =	       (c[2]*c[80]-c[1]*c[49]*uK1246)*k1246;
	r1247 =	       (c[2]*c[80]-c[1]*c[2]*c[46]*uK1247)*k1247;
	r1248 =	       (c[77]*c[80]-c[1]*c[76]*uK1248)*k1248;
	r1249 =	       (c[76]*c[80]-c[1]*c[30]*uK1249)*k1249;
	r1250 =	       (c[32]*c[80]-c[1]*c[31]*uK1250)*k1250;
	r1251 =	       rFlat1251*coeffM1251;
	r1252 =	       rFlat1252*coeffM1252;
	r1253 =	       (c[37]*c[46]-c[3]*c[36]*uK1253)*k1253;
	r1254 =	       (c[37]*c[46]-c[47]*c[80]*uK1254)*k1254;
	r1255 =	       (c[37]*c[48]-c[36]*c[47]*uK1255)*k1255;
	r1256 =	       (c[37]*c[48]-c[2]*c[80]*uK1256)*k1256;
	r1257 =	       (c[37]*c[47]-c[4]*c[36]*uK1257)*k1257;
	r1258 =	       (c[37]*c[47]-c[49]*c[80]*uK1258)*k1258;
	r1259 =	       (c[32]*c[37]-c[31]*c[36]*uK1259)*k1259;
	r1260 =	       (c[32]*c[37]-c[35]*c[80]*uK1260)*k1260;
	r1261 =	       (c[35]*c[37]-c[80]*c[82]*uK1261)*k1261;
	r1262 =	       (c[35]*c[37]-c[36]*c[38]*uK1262)*k1262;
	r1263 =	       (c[32]*c[49]-c[35]*c[47]*uK1263)*k1263;
	r1264 =	       rFlat1264*coeffM1264;
	r1265 =	       rFlat1265*coeffFallOff1265;
	r1266 =	       (c[32]*c[50]-c[5]*c[31]*uK1266)*k1266;
	r1267 =	       rFlat1267*coeffM1267;
	r1268 =	       (c[31]*c[46]-c[3]*c[32]*uK1268)*k1268;
	r1269 =	       (c[31]*c[48]-c[32]*c[47]*uK1269)*k1269;
	r1270 =	       (c[31]*c[47]-c[4]*c[32]*uK1270)*k1270;
	r1271 =	       (c[2]*c[31]-c[32]*c[49]*uK1271)*k1271;
	r1272 =	       (c[31]*c[76]-c[30]*c[32]*uK1272)*k1272;
	r1273 =	       (c[31]*c[32]-c[36]*c[47]*uK1273)*k1273;
	r1274 =	       (c[31]*c[35]-c[32]*c[38]*uK1274)*k1274;
	r1275 =	       (c[31]*c[31]-c[4]*c[36]*uK1275)*k1275;
	r1276 =	       (c[3]*c[35]-c[38]*c[46]*uK1276)*k1276;
	r1277 =	       (c[38]*c[48]-c[35]*c[47]*uK1277)*k1277;
	r1278 =	       (c[38]*c[47]-c[4]*c[35]*uK1278)*k1278;
	r1279 =	       (c[38]*c[77]-c[35]*c[76]*uK1279)*k1279;
	r1280 =	       (c[38]*c[76]-c[30]*c[35]*uK1280)*k1280;
	r1281 =	       (c[38]*c[38]-c[4]*c[32]*c[35]*uK1281)*k1281;
	r1282 =	       rFlat1282*coeffM1282;
	r1283 =	       (c[46]*c[78]-c[3]*c[31]*uK1283)*k1283;
	r1284 =	       (c[46]*c[78]-c[47]*c[76]*uK1284)*k1284;
	r1285 =	       (c[48]*c[78]-c[31]*c[47]*uK1285)*k1285;
	r1286 =	       (c[47]*c[78]-c[4]*c[31]*uK1286)*k1286;
	r1287 =	       (c[32]*c[78]-c[31]*c[31]*uK1287)*k1287;
	r1288 =	       (c[76]*c[78]-c[30]*c[31]*uK1288)*k1288;
	r1289 =	       (c[35]*c[78]-c[31]*c[38]*uK1289)*k1289;
	r1290 =	       (c[46]*c[82]-c[35]*c[47]*uK1290)*k1290;
	r1291 =	       (c[48]*c[82]-c[2]*c[35]*uK1291)*k1291;
	r1292 =	       (c[47]*c[82]-c[35]*c[49]*uK1292)*k1292;
	r1293 =	       (c[49]*c[82]-c[2]*c[35]*c[47]*uK1293)*k1293;
	r1294 =	       (c[35]*c[82]-c[2]*c[32]*c[35]*uK1294)*k1294;
	r1295 =	       (c[82]-c[2]*c[32]*uK1295)*k1295;
	r1296 =	       (c[82]*c[82]-c[2]*c[35]*c[35]*uK1296)*k1296;
	r1297 =	       (c[35]*c[50]-c[6]*c[32]*c[46]*uK1297)*k1297;
	r1298 =	       (c[35]*c[46]-c[32]*c[47]*uK1298)*k1298;
	r1299 =	       (c[35]*c[48]-c[2]*c[32]*uK1299)*k1299;
	r1300 =	       rFlat1300*coeffM1300;
	r1301 =	       (c[35]*c[49]-c[2]*c[38]*uK1301)*k1301;
	r1302 =	       (c[35]*c[35]-c[2]*c[32]*c[32]*uK1302)*k1302;
	r1303 =	       (c[35]*c[35]-c[32]*c[82]*uK1303)*k1303;
	r1304 =	       (c[35]*c[35]-c[32]*c[82]*uK1304)*k1304;
	r1305 =	       (c[5]*c[35]-c[6]*c[32]*uK1305)*k1305;
	r1306 =	       (c[35]*c[50]-c[5]*c[38]*uK1306)*k1306;
	r1307 =	       (c[3]*c[83]-c[39]*c[46]*uK1307)*k1307;
	r1308 =	       (c[39]*c[48]-c[46]*c[84]*uK1308)*k1308;
	r1309 =	       (c[39]*c[48]-c[5]*c[77]*uK1309)*k1309;
	r1310 =	       (c[39]*c[48]-c[47]*c[83]*uK1310)*k1310;
	r1311 =	       (c[39]*c[47]-c[4]*c[83]*uK1311)*k1311;
	r1312 =	       (c[39]*c[47]-c[40]*c[46]*uK1312)*k1312;
	r1313 =	       (c[39]*c[47]-c[41]*c[46]*uK1313)*k1313;
	r1314 =	       (c[39]*c[47]-c[5]*c[76]*uK1314)*k1314;
	r1315 =	       (c[48]*c[83]-c[5]*c[79]*uK1315)*k1315;
	r1316 =	       (c[47]*c[83]-c[46]*c[84]*uK1316)*k1316;
	r1317 =	       (c[2]*c[83]-c[48]*c[84]*uK1317)*k1317;
	r1318 =	       rFlat1318*coeffM1318;
	r1319 =	       (c[46]*c[84]-c[5]*c[77]*uK1319)*k1319;
	r1320 =	       (c[48]*c[84]-c[5]*c[32]*uK1320)*k1320;
	r1321 =	       (c[79]*c[84]-c[1]*c[5]*uK1321)*k1321;
	r1322 =	       (c[5]*c[36]-c[1]*c[6]*uK1322)*k1322;
	r1323 =	       (c[2]*c[84]-c[6]*c[32]*uK1323)*k1323;
	r1324 =	       (c[47]*c[84]-c[32]*c[50]*uK1324)*k1324;
	r1325 =	       (c[50]*c[84]-c[5]*c[41]*uK1325)*k1325;
	r1326 =	       (c[22]*c[84]-c[41]*c[50]*uK1326)*k1326;
	r1327 =	       (c[35]*c[84]-c[5]*c[32]*c[32]*uK1327)*k1327;
	r1328 =	       (c[35]*c[84]-c[6]*c[36]*uK1328)*k1328;
	r1329 =	       (c[31]*c[84]-c[32]*c[41]*uK1329)*k1329;
	r1330 =	       (c[38]*c[84]-c[35]*c[41]*uK1330)*k1330;
	r1331 =	       (c[84]*c[84]-c[1]*c[5]*c[5]*uK1331)*k1331;
	r1332 =	       (c[42]*c[46]-c[39]*c[47]*uK1332)*k1332;
	r1333 =	       (c[40]*c[46]-c[41]*c[46]*uK1333)*k1333;
	r1334 =	       (c[40]*c[47]-c[4]*c[84]*uK1334)*k1334;
	r1335 =	       (c[40]*c[48]-c[47]*c[84]*uK1335)*k1335;
	r1336 =	       (c[42]*c[48]-c[32]*c[50]*uK1336)*k1336;
	r1337 =	       (c[42]*c[48]-c[47]*c[84]*uK1337)*k1337;
	r1338 =	       (c[42]*c[47]-c[22]*c[32]*uK1338)*k1338;
	r1339 =	       (c[42]*c[47]-c[3]*c[5]*c[32]*uK1339)*k1339;
	r1340 =	       (c[42]*c[47]-c[46]*c[47]*c[84]*uK1340)*k1340;
	r1341 =	       (c[42]*c[47]-c[4]*c[84]*uK1341)*k1341;
	r1342 =	       (c[42]*c[47]-c[31]*c[50]*uK1342)*k1342;
	r1343 =	       rFlat1343*coeffM1343;
	r1344 =	       (c[41]*c[46]-c[5]*c[76]*uK1344)*k1344;
	r1345 =	       (c[41]*c[48]-c[47]*c[84]*uK1345)*k1345;
	r1346 =	       (c[41]*c[48]-c[6]*c[77]*uK1346)*k1346;
	r1347 =	       (c[41]*c[48]-c[5]*c[31]*uK1347)*k1347;
	r1348 =	       (c[41]*c[49]-c[7]*c[84]*uK1348)*k1348;
	r1349 =	       (c[2]*c[41]-c[6]*c[31]*uK1349)*k1349;
	r1350 =	       (c[41]*c[76]-c[30]*c[84]*uK1350)*k1350;
	r1351 =	       (c[41]*c[77]-c[76]*c[84]*uK1351)*k1351;
	r1352 =	       (c[35]*c[41]-c[6]*c[37]*uK1352)*k1352;
	r1353 =	       (c[41]*c[83]-c[39]*c[84]*uK1353)*k1353;
	r1354 =	       (c[3]*c[84]-c[41]*c[46]*uK1354)*k1354;
	r1355 =	       (c[41]*c[47]-c[4]*c[84]*uK1355)*k1355;
	r1356 =	       (c[32]*c[84]-c[1]*c[6]*uK1356)*k1356;
	r1357 =	       (c[32]*c[84]-c[5]*c[36]*uK1357)*k1357;
	r1358 =	       rFlat1358*coeffM1358;
	r1359 =	       (c[6]*c[79]-c[5]*c[32]*uK1359)*k1359;
	r1360 =	       (c[6]*c[83]-c[5]*c[84]*uK1360)*k1360;
	r1361 =	       (c[51]*c[79]-c[46]*c[85]*uK1361)*k1361;
	r1362 =	       (c[32]*c[51]-c[4]*c[39]*uK1362)*k1362;
	r1363 =	       (c[32]*c[51]-c[47]*c[85]*uK1363)*k1363;
	r1364 =	       (c[72]*c[79]-c[39]*c[46]*uK1364)*k1364;
	r1365 =	       (c[1]*c[72]-c[39]*c[77]*uK1365)*k1365;
	r1366 =	       (c[65]*c[79]-c[46]*c[83]*uK1366)*k1366;
	r1367 =	       (c[1]*c[65]-c[39]*c[79]*uK1367)*k1367;
	r1368 =	       (c[36]*c[65]-c[32]*c[39]*uK1368)*k1368;
	r1369 =	       (c[1]*c[73]-c[79]*c[83]*uK1369)*k1369;
	r1370 =	       (c[32]*c[73]-c[48]*c[83]*uK1370)*k1370;
	r1371 =	       (c[32]*c[73]-c[5]*c[79]*uK1371)*k1371;
	r1372 =	       (c[32]*c[65]-c[39]*c[48]*uK1372)*k1372;
	r1373 =	       (c[32]*c[65]-c[46]*c[84]*uK1373)*k1373;
	r1374 =	       (c[32]*c[65]-c[50]*c[79]*uK1374)*k1374;
	r1375 =	       (c[32]*c[72]-c[3]*c[84]*uK1375)*k1375;
	r1376 =	       (c[32]*c[66]-c[3]*c[84]*uK1376)*k1376;
	r1377 =	       (c[32]*c[72]-c[39]*c[47]*uK1377)*k1377;
	r1378 =	       (c[32]*c[66]-c[39]*c[47]*uK1378)*k1378;
	r1379 =	       (c[32]*c[72]-c[41]*c[46]*uK1379)*k1379;
	r1380 =	       (c[32]*c[66]-c[41]*c[46]*uK1380)*k1380;
	r1381 =	       (c[32]*c[72]-c[42]*c[46]*uK1381)*k1381;
	r1382 =	       (c[32]*c[66]-c[42]*c[46]*uK1382)*k1382;
	r1383 =	       (c[42]*c[46]-c[41]*c[46]*uK1383)*k1383;
	r1384 =	       (c[9]*c[83]-c[39]*c[52]*uK1384)*k1384;
	r1385 =	       (c[9]*c[84]-c[41]*c[52]*uK1385)*k1385;
	r1386 =	       (c[14]*c[83]-c[39]*c[56]*uK1386)*k1386;
	r1387 =	       (c[11]*c[83]-c[39]*c[53]*uK1387)*k1387;
	r1388 =	       (c[32]*c[56]-c[13]*c[31]*uK1388)*k1388;
	r1389 =	       (c[13]*c[84]-c[39]*c[68]*uK1389)*k1389;
	r1390 =	       (c[25]*c[83]-c[39]*c[68]*uK1390)*k1390;
	r1391 =	       (c[8]*c[83]-c[39]*c[51]*uK1391)*k1391;
	r1392 =	       (c[43]*c[46]-c[39]*c[51]*uK1392)*k1392;
	r1393 =	       (c[43]*c[46]-c[3]*c[86]*uK1393)*k1393;
	r1394 =	       (c[43]*c[48]-c[51]*c[84]*uK1394)*k1394;
	r1395 =	       (c[43]*c[47]-c[4]*c[86]*uK1395)*k1395;
	r1396 =	       (c[40]*c[51]-c[43]*c[47]*uK1396)*k1396;
	r1397 =	       (c[48]*c[86]-c[22]*c[83]*uK1397)*k1397;
	r1398 =	       (c[67]*c[83]-c[47]*c[86]*uK1398)*k1398;
	r1399 =	       (c[51]*c[83]-c[46]*c[86]*uK1399)*k1399;
	r1400 =	       (c[56]*c[79]-c[39]*c[72]*uK1400)*k1400;
	r1401 =	       (c[68]*c[79]-c[5]*c[39]*uK1401)*k1401;
	r1402 =	       (c[35]*c[68]-c[6]*c[42]*uK1402)*k1402;
	r1403 =	       (c[32]*c[68]-c[5]*c[42]*uK1403)*k1403;
	r1404 =	       (c[32]*c[68]-c[6]*c[39]*uK1404)*k1404;
	r1405 =	       (c[32]*c[55]-c[5]*c[39]*uK1405)*k1405;
	r1406 =	       (c[57]*c[79]-c[13]*c[39]*uK1406)*k1406;
	r1407 =	       rFlat1407*coeffM1407;
	r1408 =	       (c[36]*c[46]-c[1]*c[47]*uK1408)*k1408;
	r1409 =	       (c[36]*c[46]-c[1]*c[47]*uK1409)*k1409;
	r1410 =	       (c[32]*c[77]-c[36]*c[46]*uK1410)*k1410;
	r1411 =	       (c[36]*c[48]-c[32]*c[32]*uK1411)*k1411;
	r1412 =	       (c[36]*c[48]-c[1]*c[2]*uK1412)*k1412;
	r1413 =	       (c[36]*c[47]-c[1]*c[49]*uK1413)*k1413;
	r1414 =	       (c[2]*c[39]-c[49]*c[83]*uK1414)*k1414;
	r1415 =	       (c[35]*c[51]-c[32]*c[70]*uK1415)*k1415;
	r1416 =	       (c[8]*c[32]-c[31]*c[51]*uK1416)*k1416;
	r1417 =	       (c[9]*c[32]-c[31]*c[52]*uK1417)*k1417;
	r1418 =	       (c[44]*c[46]-c[3]*c[35]*uK1418)*k1418;
	r1419 =	       (c[44]*c[48]-c[35]*c[47]*uK1419)*k1419;
	r1420 =	       (c[44]*c[47]-c[4]*c[35]*uK1420)*k1420;
	r1421 =	       (c[44]*c[51]-c[8]*c[35]*uK1421)*k1421;
	r1422 =	       (c[44]-c[38]*uK1422)*k1422;
	r1423 =	       (c[38]*c[51]-c[8]*c[35]*uK1423)*k1423;
	r1424 =	       rFlat1424*coeffFallOff1424;
	r1425 =	       (c[45]*c[47]-c[4]*c[82]*uK1425)*k1425;
	r1426 =	       (c[32]*c[70]-c[22]*c[31]*uK1426)*k1426;
	r1427 =	       (c[35]*c[70]-c[22]*c[38]*uK1427)*k1427;


	// ============================================================ 
	// ===== REACTION RATES FOR EVERY SPECIES ===================== 
	// ============================================================ 
	R[1] =	       -r1365+r1216+r1407+r1250+r1246+r1245+r1322-r1367+r1249+r1205+r1248+r1409+r1412+r1331+r1321+r1215+r1199+r1356+r1413-r1369+r1221+r1242+r1247+r1252+r1408+r1217+r1241;
	R[2] =	       -r961-r142-r754-r1214-r942-r953-r956-r964-r939-r948-r39+r1302-r893-r755-r1246-r748-r742-r1064-r1058-r1047-r1088-r1095-r1098+r1294-r250+r745-r884-r895-r304+r1293-r1271+r996-r896-r665-r936+r750-r897-r1048-r536-r885+r1299-r693-r949-r1213-r952-r741-r937-r886-r892-r560+r1256-r739-r957-r1349-r955-r1220-r945+r1412-r960-r1029-r1024+r743-r891-r940-r1414-r954-r1082-r890+r1198-r941+r929-r1140-r946+r1291-r584-r611-r959+r1301-r1138-r944-r958-r938-r222+r751-r1323-r951-r962-r947-r963-r889-r1049-r894+r1296-r1195-r898+r1295-r887-r1068-r888-r1317-r950;
{ double MapleGenVar1 = -r7+r870+r999+r1194+r1146+r1159+r224-r14+r1166+0.15*r1155+r874+r1055+r1339+r1375-r1118+r483+r795+r798+r1376+r1091+r1099+r1101+r1393-r1354+r1234+r613+r510-r1034+r1160+r1005+r1107-r10+r750+r306+r1108+r1179+r694-r12-r15-r2+r920+r1112+r1060+0.75*r989+r1201+r764+2.0*r1177-r11+r1172-r4+0.4*r1128+r1268+r1418+r1109+r252+r1153;
	R[3] =	            r144+r923+r1176-r1307+r640+r1212+r781+r786-r782-r783+r1152+r868+r117+r872+r1012+r760+r667+r66-r5+r1129+r1110+r586+r1115+r879+r1242-r9+r978+r333-r8-r747-r3+r1222-r6+r871+r869+r1111+r1042+r1185+r1208+r1150+r1114+r1162-r740-r16+r1173+r1191+r1283+MapleGenVar1+r278+r875+r1105+r1171+0.3*r1161+2.0*r1174-r1276-r13+r1044+r1253;
}
	R[4] =	       -r374-r375-r370+r1046+r1119-r368+r253-r364+r145+r1224+r587+r1355+r171+r484+r1341+r1093+r1100+r1102+r1395+r1257+r1211+r1245+r118+r1281+r1063-r360+r1223+r334+r1425-r378+r1196+r408+r197+r905+r1237+r1205+r1048+r1230+r984-r362+r1106+r991+r1013+r458+r982+r746+r1270+r1311-r365-r1065+r67-r361+r1035-r373+r1116+r307-r369+r92-r379+r749+r1362+r743+r1188+r1006-r760-r363+r983+r990+r1000-r366-r377-r376+r382+r1334-r367+r1278+r695+r668+r1420-r372+r1286+r279+r225-r380+r1275-r371-r1105+r1206+r614+r511+r17;
	R[5] =	       r1315+r961-r754+r999+r1061+r953+r1343+r1074+r755+r1359+r1004+r1339+r904+2.0*r1080+r1066+r1009+r919+r1058+r1079+2.0*r1085+r1086+r1056+r1089+r1371+r1096+r1401+r1403+r1405+r1041+r1181+r1309+r914+r903-r1322-r758+r1043+r936+r1360+r1325+r1048+r899+r1266+r909+r985+r989+r1069+r931-r935+r1319+2.0*r1331+r1321+r1327+r913+r1003+r1314+r940+r1318+r1020+r1050+r1081+r1078+2.0*r1082+r927+r1076+r918-r760+r1016+r1357+r879+r1347+r1000+r1138-r757-r1305-r756+r1059+r1141+r1344+r1084+r1320+r1067+r963+r1001+r1049+r1083+r910+r1136+r1182+r930+r1068+r1306-r759+r1044;
	R[6] =	       r915+r754+r1352+r916+r939-r1359-r1066+r1328+r1075+r1402+r1404+r1346+r1322+r758-r1360+r920+r1349+r935+r923-r1050+r954+r1356+r998+r760+r1297+r922+r932+r757+r1305+r756-r1059+r1323+r1002+r759+r933;
	R[7] =	       -r397+r1014+r1007-r386-r406+r513+r42-r398-r383-r395-r391+r752+r642+r173+r120+r1113-r389+r360+r1117+r1348-r387-r401-r1107+r147+r539-r390-r1106-r396+r309+r281+r199-r402+r670-r392-r400+r486-r388+r697+r18+r616-r405-r394+r336-r403-r404-r385+r563+r751+r69-r382+r1001-r381+r410-r393+r227+r721+r255+r589+r94-r399;
	R[8] =	       r1421+r386+r201+r1104+r672+r1423-r38+r436-r1416+r1004+r461-r788-r789-r1391+r1103-r28-r1032+r175-r33+r412+r257+r515+r1132-r32-r21+r1017+r1122+r362-r31-r23-r19-r27+r979+r311-r1109-r35+r44+r283+r785+r488-r29+r229-r18+r591+r1010-r36+r618+r761-r26-r1031+r338-r24+r644-r849-r37-r1030+r149-r25-r34-r22+r122+r699-r887+r96-r30+r71-r17;
	R[9] =	       -r110-r113-r114-r93+r619+r645-r98+r763-r103-r106-r99+r437+r176+r762+r792-r800-r1384-r111-r115-r109+r387-r91+r150-r104+r258+r21-r107+0.25*r989-r892-r102+r541+r700+r516+r462-r92+r673+r45-r1385+r489-r100+r202-r112+r312+r284+r363-r1110+r123+r72-r1417-r95+r230+r849-r869+r592-r101-r108-r105+r413+r339+r565-r96-r94;
	R[10] =	       -r572+r234+r870+r704-r1159-r1104-r576-r1125+r206+r965+r316-r564+r391+r180-r771-r799-r1099-r1100-r924+r813+r677+r288-r1167-r574-r567+r417+r127-r581-r571-r583-r568+r724-r885+r154-r577-r566+r839+r545+0.5*r985+r764-r560+r596-r823+0.5*r913+r441-r575+r649+r493+r520-r1158+r861-r824-r580-r570-r562+r818+r623-r563+r343+r810+0.33*r1133+r76-r561+r49+0.25*r963+r101-2.0*r878-r910-r578-r573-r582-r1134-r565-r817+r466-r579;
{
double MapleGenVar1 = r593+r438+r687+r231+r468+r683-r142+r692+r669-r137-r870-r1146+2.0*r674-r801+r368+r672+r690-r160+r98+r364-r128+r948-r138+r463-r165-r169-r145-r119+r681-r125+r103-r852-r158+r177-r139+r182-r120-r161-r163+r651+r46-r773-r1387-r164+r825-r132-r143-r118-r131+r914+r677-r130-2.0*r877+r864+r996-r896+r665+r522-r150+r625-r127-r147-r167-r157+r571+r542-r136-r159+r208-r154+r203-r140+r566+2.0*r679-r1148+r2+r598+r620+r671+r828-r141+0.5*r989+r848;  
	R[11] =	           r340+r646+r854+r236+r345+r517+r680+r678+r443-r1128+r670+r285+r51+r666+r682-r144+r673+r414+r765+r78+MapleGenVar1+r313-r162-r134-r116+r419+r785+r490+r495+r388-r155+r676+r726-r117+r872+r318+r667+r5+r812+r686+r689+r290-r146+r26+r259-r123-r806-r152-r121+r685+0.8*r855+r810+0.2*r866-r938-r862-r133+0.85*r865-r148+r263+r847-r871-r166-r126+r701+r668+0.67*r1133+r691+r947+r688-r149-r168+r706+r393-r1173+r675-r153+r22+r684-r122-r135+r73-r911+r987-r867;
}
	R[12] =	       r397+r683+r423-r221+r240-r201+r286+r594+r232-r215-r206-r190+r160-r213+r447-r172+r47-r170+r723+r125+r472-r173-r177-r180+r99-r174-r182-r179-r766-r176-r171-r184-r183-r181-r185-r187-r188-r189-r210-r205+r389-r175+r550+r314-r895-r192+r730+r267+r574+r567-r197+r621+r655-r220-r208+r107-r193-r203-r207-r216-r1112+r23-r196+r790+r518+r543-r200+r365-r199+r74-r198+r322+r82+r260+r602+r439+r349-r767+r629+r491+r702-r202-r872-r219-r209+r55-r214+r341+r152-r194+r464+r133+r710-r195-r1111+r647+r415+r372+r499-r894-r217+r675+r294-r191-r211+r30+r526-r218;
	R[13] =	       -r52-r1131+r1039-r1135-r1119+r830-r801-r42+r964-r59-r56-r39+r809-r47-r58-r928-r50+r1118-r1070-r1071-r46-r780-r919-r788+r1085-2.0*r793-r794+r1388+r797-r799-r800-r1389+r1406+0.7*r980-r40+2.0*r784-r63-r884+r808-r936-r819-r48+r1051-r54+r943+2.0*r873+r1183-r768+r982-r1073-r1069-r803-r41-r60+r1123-r51+r811-r44-r1027-r1176-r45-r782-r1175+r934-r941+r868-r64+r1097-r857-r55-r1072-r906+r926+r958-r858+r1084-r1165-r49-r851+r833-r43-r804+r842+r1052-r53-r57-r1134-r802-r930-r61-r62;
{
double MapleGenVar1 = r687-r1026+0.5*r1131+r683+r692+r669-r89-r863+r674-r820+r672-r942+r544+r690-r908-r87-r1166-r859-r65+r416+r681-r70+0.5*r852+r179+r315-r780-r789-r794-r1386+r797+r1189+r1032+r205+r1036-r81+r836+r677+r261+r465+r1184+r877+r233-r1178-r1132+r665+r595+r390+r48+r568-r1179-2.0*r805+r943+r679+r909-r769-2.0*r876+r671+r986-r937+0.5*r989-r907-r90-r88+r790-r1177-r67-r854+r1037+r680+r678+r440;
	R[14] =	             -r74+r670+r666+r682-r82+r673+r807-r78-r77+r850-r891+r786+r492-r783+r100+2.0*r676-r868+r1076-r80+r667+r946-r66-r1129+r686+r988+r689-r1163-r806+r648-r68-r72+r24+r685-r855+r3+r366-r866+0.8*r862-r865-r86-r69+r869+r126-r84+r668-r1133+0.3*r969+r691+r688-r76+r827+r878+0.25*r1028-r1127+r910+r703+0.25*r1173+r675+MapleGenVar1+r153+r342+r684+r287+r519-r1147+r853-r83-r73-r79+r832+r622-r85-r71;
}
	R[15] =	       -r1135-r1157-r544-r554-r772+r1096-r1101-r1102-r1103-r552-r550-r864-r1160-r822-r556-r549-r539-r542-r536-r557+r949-r555-r909-r545+0.5*r985-r886-r543-r860-r541-r538-r547-r770+0.5*r913-r559-r540-r1168-r929-r548-r537-r558-r818-r553+r871+0.25*r963-r551-r546-r842-r1126+r817;
	R[16] =	       -r774+r795-r802+r829+r843+r844+r858+r860+r874-r926+r983-r1089-r1090-r1124-r1169-r1178;
	R[17] =	       r52+r572-r234-r231+r652-r240-r244-r224+r496-r232+r523-r235+r859+r809-r874+r469-r1170-r775+r183+r796+r798+r346-r1154+r130-r233+r599+r157+r104+r1180-r247+r984-r1179-r243-r873-r241+r626+r848-r803-r236+r27-r249+r680+r547+r845+r369-r239+r291+r707-r913+r727+r781-r1175-r912-r229-r927-r242+r846+r209+r857+r394-r248-r238-r245+r444+r420-r222-r226+r6+r847-r230+r878-r804-r227-r225+r831+r319+r79-r246+r264-r228-r223;
	R[18] =	       r265+r7+r370-r286-r317-r297-r277+r398+r213-r325-r316+r395+r56+r731+r421+r681+0.5*r852+r158-r776+r424+r161-r315+r184+r187+r470+r791+r210+r28+r131-r329-r314+r473-r304+r877-r288-r331+r814+r603-r897-r306-r330-r326+r497-r299-r289+r708-r327+r600-r298+r524+r31+r876+r241-r282-r302-r293-r309+r373-r281-r307+0.6*r1128-r285-r311-r280+r500+r656-r322-r291-r301-r305-r283+r575-r313+r134+r448+r445+r527-r318-r312+r630+r653-r284+r80-r296+r548-r290-r300+r238+r9+r728+r350+0.2*r855+r627+r711+r347-r303-r328-r324+r268-r321-r310+r108+r105-r279+r551+r573-r294-r308+r684-r278+r53-r287-r875-r319+r83-r925;
	R[19] =	       -r348+r317+r815+r597+r235-r351+r128+r521+r50-r777+r181+r467-r346+r705+r813+r808-r1130-r334-r352+r289-r335-r353+r207-r356-r332+r418-r340+r102-r345+r678+r4-r355+r392+r77-r349+r650+r494-r778+r155-r354+r725-r341+r624+r570-r336-r350-r333-r338-r343+r442-r347+r367-r337+r262+r25-r357+r546-r342-r339-r898-r358;
	R[20] =	       -r265-r274-2.0*r816+r348-r271-r1146+r863-r272+r815-r1156-r253+r628+r837-r1155-r254+r106+r780+r185+r787+r792-r250+r132+r81-r914-r261+r498-r267-r1149-r257+r814+r549-r258+r159+r54-r256-r943-r1177+r293+r396-r931+r1137-r275+r811-r252+r682+r729+r239-r260+r807-r251-r270-r1176-r850-r276-r781+r779+r471+r29+r601+r446-r861+r812+0.5*r973+r834-r259-r269+r422+r8+r709+0.8*r866+0.2*r862+0.15*r865-r263+r951-r262-r268-r1150+r321-r1162-r1028+r525+r371+r875+r654+r1136+r211-r853-r255-r1171-r1161-r264+r950-r273+r867;
	R[21] =	       r821-r843-r846+r1073+r1089+r1090+r1091+r1093-r1097-r1098;
{
double MapleGenVar1 = -r459-r468+r1014+r961-r915+r1007-r1040+r995+2.0*r1015+r972+r956+r939+r564-r463+r1397-r478+r928+r617+r70-r472-r469-r475+r174-r476-r461-r1113-r477-r480-r481-r470+r1047+r1092-r467-r474+0.5*r924+r1018+r975-r465-r473+r1005+r936+r1045+r1057-r1108+r698+r885+r1017+r590+r256+r966-r920+r671+r1427+r643+r1013+r282-r458+2.0*r937+r19-r479; 
	R[22] =	            MapleGenVar1+r200+r1065+r361+r945+r960+r1338-r462+r1003+r1020+r1050+r540+r487-r934-r471+r994+r1019+r1426+r1012+r918+r1006+2.0*r1008-r880+r1010+0.5*r973+r959-r879-r457+r901+r971+r978-r464+r385+r514+r121+r900+r944+r974-r932+r938+r997+r1011+r95+r148+r1059+r722+r411+r435+r337+0.35*r969+0.5*r963+r921+r310+0.55*r1028+r43+0.5*r925-r888-r1326-r466+r228+r987;
}
	R[23] =	       -r438+r374-r423+r604-r431+r272+r576-r407+r531+r631+r87+r351-r447-r436+r138-r421-r454+r165+r732-r455-r416-r453-r432-r450-r424-r437+r1009+r477+r188+r552+r474+r1018-r1117+r109-r434-r408-r905-r412-r417+r32+r10+r299-r451+r327+r555-r418-r427-r882-r429+r60+r501-r1116-r443-r440+r402+r634+r35+r657-r414-r441-r439+r712+r162-r448-r445-r419+r734-r890+r1019+r354+r112-r446+r242+r607+r1016+r214+r296-r1115+r269-r422+r245-r444+r685+r504-r442+r377+r1011-r420-r433-r430-r411-r881-r456-r435+r528+r324+r84+r660+r688-r415-r889-r1114-r410+r217-r413+r57+r191+r135-r409-r426+r13+r399+r579+r715;
{
double MapleGenVar1 = r687-r529+r113+r137+r271+r608+r244-r513-r496-r916+r554-r523+r190+r14-r531+r59-r533-r893+r716+r478-r521+r981+r453-r508-r883+r139-r485+r476-r483-r482-r484+r164+r111-r498-r535+r192-r509+r378+r401-r510-r515+r556-r522-r502+r659+r326-r497+r451+r353+r12+r298+r216-r524-r534+r907+r88-r518+r427-r507;      
	R[24] =	      MapleGenVar1+r429-r501-r517-r516-r500-r506+r714-r923+r355-r1024-r512+r970+r1021-r486-r487-r488-r489-r490-r491-r492-r493-r494-r495-r527-r520+r635+r580+r36+r988+r689+r300+r403-r514-r504+r735+r938+r86+r328+r376+r166-r528+0.35*r969+r633-r499+0.2*r1028+r578-r525+r34+r661-r519+r606+0.5*r925+r61+r246+r733-r526-r511+r273+r218-r933;
}
	R[25] =	       -r593+r375+r529+r1040+r110-r604-r608+r297-r594+r215-r597+r964+r325-r939-r1074+r58-r1077-r587-r904+r450+r475+r163+r189-r1075+r1095-r1390+0.3*r980+0.5*r924+r352+r33+r713-r599-r595-r603+r502+r136+r885-r600-r590+r243+r577+r991+r1025-r598-r609+r986+r658+r11+r957-r596+r1029+r902-r602+r270-r940+r400-r1020-r1078-r601-r1076-r591-r607-r918+r686-r584-r586+r990-r922+r553+r906-r588+r632-r592+r962-r921-r610-r585-r606-r917+r426-r589+r85;
	R[26] =	       r1131+r1135+r1125-r619-r631-r628-r637+0.85*r1155-r617-r613+r1130-r1149-r615-r621+r1132-r625-r638+r1121+r1122-r1148-r620-r626-r1137+0.4*r1128-r1151-r634-r612-r629-r1120-r616-r630-r635+r1129-r624-r618-r611-r623-r1138-r627-r632-r636+r1141-r1185-r633+r1127+0.5*r1173+r1126-r1136-r1147+r1134+0.7*r1161-r614-r622;
	R[27] =	       r274-r652+r114+r89+r1146+r1159+r1157+r690+r1156-r645+r533+r1166+r454+0.15*r1155-r642+r1170-r651+r1143-r641+r1154+r329+r1184+r1149+r1167-r664+r1160+r1178-r655+r167+r581-r659+r1169+r247+r1179+r557+r193+r736+r140+r15+r1148+r609-r643-r658+r356+r1142+r479+r1177-r1172-r646-r1151-r1186-r656+r506+r379-r657+r1153+r301-r1188+r1176-r640-r649-r650+r1175+r1168+r1152+r1158-r1140+r219-r653+r717-r1164+r1163-r648+r404+r430-r644+r636-r1141+r37-r663+r1165-r660-r1150+r1144-r647+r1162+0.5*r1173-r661-r654+r1147+r1171+0.3*r1161-r1174-r639-r1139+r62;
	R[28] =	       r1150+r1151+r1164+r1172+r1174+r1185+r1186+r1187;
	R[29] =	       -r687-r683-r692-r669-r674-r672-r690-r681-r1189-r677-r665-r679-r671-r680-r678-r670-r666-r682-r673-r676-r667-r686-r689-r685-r668-r691-r688-r675-r684;
	R[30] =	       -r704+r431+r1225+r38+r637-r716+r455+r480-r705+r63-r719+r115+r1240+r1249-r713+r220+r330-r698-r708-r694-r693+r534+r1272+r302+r141+r90+r507-r700+r275-r714-r707-r712-r1190-r702+r1231-r697+r405-r717+r1288+r248+r558+r194-r696-r709-r711-r710+r737-r695+r663-r701+r691+r168-r706+r1280+r610+r16-r703+r357+r582+r380+r1350-r699+r1202-r715;
	R[31] =	       r1416-r1273+r1250+r1388+r1229-r1271+r1192-r1272+r1266+r1213-r1270+r1349-r1269-r1268+2.0*r1287+r1210-r1274+r1231+r1426+r1288-r1329+r1347+r1417+r1267+r1342+r1289+r1286+r1283+r1195-2.0*r1275+r1285+r1259+r1282;
	R[32] =	       -r1377+r1194-r1238+r1214-r1260-r1416-r1363-r1273+2.0*r1302-r1250+r1359+r1339-r1375-r1370+r1368-r1382-r1373-r1388-r1380-r1376-r1371-r1381-r1403-r1404-r1405+r1294-r1374+r1281+r1415-r1204+r1271-r1410-r1205+2.0*r1411+r1299+r1272-r1266+r1298+r1270+r1207+r1269+r1220+r1268-r1287+r1338+2.0*r1327-r1362+r1274+r1212+r1304-r1379-r1372-r1378+r1303-r1426-r1356-r1264-r1221+r1297-r1357+r1329+r1209+r1336-r1417-r1267-r1263+r1305+r1323+r1244+r1320+r1219+r1235-r1265+r1324-r1217-r1259+r1295;
	R[33] =	       r1200+r1201+r1223+r1226+r1228+r1230+r1232-r1233-r1234-r1235-r1236-r1237-r1238-r1239-r1240;
	R[34] =	       r1203-r1222-r1223-r1224-r1225;
	R[35] =	       -r1424+r1421+r1290-r1352+r1330-r1261-r277-r407+r1260+r1423+r1279-2.0*r1302-r65-r170-r1328-r1300-r482-r1402-r143+r1281-r40-r1415-r1218+r1292+r1293-r509-r91-r1299-r1427-r196-r332-r1298-r1207+r1418-r666-r612-r1327-r251-r305-r1274-r116-2.0*r1304+r1277-2.0*r1303+r1264+r1291+r1419-r1297-r537-r1301-r457-r1262+r1263-r1305-r433-r720-r1289+r1278-r561+r1420-r381+r1280+2.0*r1296-r585-r1206-r1276-r1306-r639-r223;
	R[36] =	       r1206+r1218+r1238+r1243+r1251+r1253+r1255+r1257+r1259+r1262+r1273+r1275-r1322+r1328+r1357-r1368-r1407-r1408-r1409+r1410-r1411-r1412-r1413;
	R[37] =	       -r1251-r1252-r1253-r1254-r1255-r1256-r1257-r1258-r1259-r1260-r1261-r1262+r1352;
	R[38] =	       -r1330+r277+r407-r1423-r1279+r65+r170+r482+r143-2.0*r1281+r40+r509+r91+r1427+r196+r332+r666+r612+r251+r305+r1274+r116-r1277+r537+r1301+r457+r1262+r433+r720+r1422+r1289-r1278+r561+r381-r1280+r1265+r585+r1276+r1306+r639+r223;
	R[39] =	       r1377+r221+r692+r1365+r406-r731-r732+r169-r1308-r723+r432+r508+r1358+r1368+r481+r1387+r1386+r1389+r1391+r1384+r1390+r1392+r1400+r1401+r1404+r1405+r1406-r1309+r1367+r719+r535-r730+r331+r664+r638+r583-r724-r736-r1311+r249-r729+r1362+r559-r1314+r276+r1307-r1414-r727+r1372+r1378+r1364+r1353-r734-r726-r1310+r64-r725-r728-r735+r303+r195-r722-r737+r456-r720-r1313-r721-r1312+r1332+r358-r733;
	R[40] =	       r1312-r1333-r1334-r1335-r1396;
	R[41] =	       r1313+r1325+r1326+r1329+r1330+r1333-r1343-r1344-r1345-r1346-r1347-r1348-r1349-r1350-r1351-r1352-r1353+r1354-r1355+r1379+r1380+r1383+r1385;
	R[42] =	       -r1332-r1336-r1337-r1338-r1339-r1340-r1341-r1342+r1381+r1382-r1383+r1402+r1403;
	R[43] =	       -r1392-r1393-r1394-r1395+r1396;
	R[44] =	       -r1418-r1419-r1420-r1421-r1422;
	R[45] =	       r1424-r1425;
{
double  MapleGenVar2 = r1026+r1233+r1131+r7-r1290+2.0*r915+r1040+r1039-r999+r1061+r840+r1146+r1159+r1157-r224-r820+r1216+r916+r1125+r1156+r14+r841+r1166+r859+r1033-r763+r837+0.15*r1155+r1308-r1055-r904+r1080+r1358+r772-r742+r1118+r777+r1070+r1071+r771-r483+r1058-r1079+r1382+r1373+2.0*r1056+r1087-r795-r796-r797+r1340-r798+r1380-r1091+r1381-r1099-r1101-r1392-r1393;
double MapleGenVar1 = MapleGenVar2+r1399+r825+r1354-r1234+r1032-r613+r1036+r1154-r784+r1130+r1316+r758+2.0*r1043+r843+r1226-r510+r1034+r1192+r1160-r822-r1005-r905+r1132+r1410-r1107+r10-r819-r750+r1045-r306+r1057+r1180+r821-r1108+2.0*r1051-r694+r12-r1106+r899+r976+r966+r15+r1038+r1025+r2+r920+r769+r768-r1112+r828-r741-r1060-r764-r1298+r1073+r882+r11+r1200+r1065+r1172;
MapleGenVar2 = MapleGenVar1-r739-r1409+r1037+r1053+r4-r1319+r1151-r823+r845-r1268-r1418-r1109-r252+r1062-r749-r144+r902+2.0*r1215-r765+r1210+2.0*r1199+r1307-r640+r767+r1190-r1021+r1379+r782+r783+r1081+r1364+r1120+2.0*r1187+r1152-r117-r1254-r1012+r1158+r998+r846+r880+r1243-r667+r857-r66+r5-r824-r1227+r1297-r1110-r586-r744+r1164-r1115-r761+r834+r1163+r1072-r1242; 
	R[46] =	                       MapleGenVar2+r1209+r901+r9-r333+r8+r900+2.0*r747+r829+r3+r1145-r1267+r757-r1284-r1222+r6+r1247+r1141-r1344+r849-r1111+r858-r1042+0.35*r969+r1165+r1366+r1067+r1185+2.0*r844-r1208+2.0*r1150-r1114+r1219+r1313+r1049+r977+r740+r1127+r16+r1002-r1191-r1283-r1408+r831-r842+r1126-r278+r1052+r1251+r1312+r1147-r1332-r1105+r1282+r1174+r1276+r1361+r1241+r13+r1139-r1253;
}
{
double MapleGenVar1 = -r1424+r1377+r374+r375+r459+r961+r1290+r370+r995+r669+r93-r1046-r1119+r1228+r368+r1214-r253+r964+r1337+r383+r364+r1345+r1363+r1273+r993+r172+r254-r145+r119-r1224-2.0*r752-r981-r587-r1339-r1355-r171-r753+r485-r919+r1058-r484-r1087-r1341-r1090-r1093-r1094-r1100-r1102-r1395+r1396+r1398-r1257-r1211-r980+r641-r1245-r118-r924-r1063+r360+r745+r884-r1316+r1218-r1292-r334+r1204+r1293-r758+r434-r1425+r378+r615-r1196-r408-r197-r1237-r1045-r1057-r1180-r1230+r335-r984+r1197+r362+r1106-r976-r991-r920-r986-r1013-r458-r982-r985-r989-2.0*r746+r1298-r1270-r1311+r365-r67+r739+r957+r1409-r1137+r361-r1035+r41+r538+r373+r1269;
double MapleGenVar2 = MapleGenVar1-r1116-r979-r307+r198+r369+r280-r1338-r1062-r92+r379-r749-r923-r743+r1255-r1027-r1210-r1188-r1314+r512+r940-r1212+r1020+r1378-r1081+r1082+r1277-r1022+r994-r1231-r927+r1254+r1310-r1413-r1097-r1006+r1419+r363-r983+r992+2.0*r744+r1193-r988+0.5*r973+r562+r146-r990-r922+r68-r978-r1000-r926+r696+r588+r1138+r366;
	R[47] =	                   MapleGenVar2+r997+r377+r1263-r757+r226+r1284+r376+r1335-r382+r881-r1141-r1342-r1334+r367-r1278-r695-r668+0.3*r969+r1236-r1420-r1067+0.5*r963-r921+r372-r1219-r1313+r1049-r977-r1258+r740-r1028+r1252-r1286-r1265-r279-r1324+r1002-r225+r1195+r1408+r380+r308+r1217+r371+r1285-r1312+r1332+r1182+r1105+r409-r925-r614+r759-r987-r511-r17;
}
{
double MapleGenVar1 = -r459-r1026-r1315-r915+r754-r669-r972-r93-r1061-r1194-r1228+r1407-r916-r908-r1337-r383-r1345-r172-r1397-r254-r1308-r119-r1080+2.0*r748+r1370-r1070-r753-r485+r1064-r1300+r1047-r1086-r1056-r1075+r1088-r1089-r1092-r1394+0.7*r980-r641-r1181-r1309-r914-r745-r975-r1346-r1223-r1229-r434-r1043-r615-r1192-r1411-r335-r1299-r966-r909+r1213+r952-r907+r746-r1069; 
	R[48] =	            MapleGenVar1-r1256+r739-r41+r955-r538-r1269+r979-r198+r1220-r280-r1412-r913-r1255-r512-r970+r1372-r1277-r1198-r968-r912-r1310-r1264-r918-r998-r1243-r1291+r1221-r1419-r1193-r973+r959-r562-r1209-r146-r68-r1347-r1336-r971-r906-r696-r588-r974-r226-r756-r1335-r1244-r969-r1236-r1320-r740-r910-r1235-r308-r1285-r1136-r409-r917+r1068+r1317-r967-r911-r1044;
}
{double MapleGenVar1 = r397-r1014+r142-r1007-r995+r386+r406-r513-r42+r398+r383+r395+r948+r39-r993+r893+r755-r928+r391+r1246-r642-r173-r120+r742+r753-r1113+r250+r389-r360-r745-r1117-r1348+r895+r1292+r304-r1293+r1271+r387-r996+r401+r896+r1107+r665-r750-r147-r539+r897+r390+r536-r1197+r693+r949+r741+r892+r396+r560-r309-r281-r199+r402-r670; 
	R[49] =	            MapleGenVar1+r945+r1029+r392+r1024-r743+r891+r1414+r400-r1020-r486+r388-r994+r890-r697-r18-r616-r929+r405+r1413+r1140+r946+r394-r992+r584-r744-r336+r611-r1301+r403+r404+r385-r563+r944+r958-r997-r1263+r222-2.0*r751-r69+r382+r951+r947-r1001+r889+r381+r894+r1258-r410+r393-r227-r721-r1002+r898-r1182+r887-r255-r589+r888-r94-r759+r950+r399;
}
	R[50] =	       r459+r468-r1015-r999+r942+r953+r956+r908-r564+r463+r478-r755+r928-r617-r1004-r70+r472+r469+r883+r475-r174+r1066-r1009+r1064+r476+r461+r1113+r477+r480+r481+r470+r1090+r1094+r1095-r1096+r1098+r467-r1041+r1374+r474+r975+r465+r473-r1325+r1180+r1108-r698-r590-r256-r899-r1266-r671-r643-r282+r458-r19+r479+r886-r200-r931+r1137-r361+r1062+r462-2.0*r1003+r940-r540-r487+r1081+r1022+r471+2.0*r941+r912+r1097-r998-r1008+r880-r1016-r1297+r457+r1336-r1000+r464-r385-r514-r121-r932-r95-r148-r722-r411-r435+r1342-r337+r921-r1001-r310-r43+r1324-r1002-r930+2.0*r917+r888+r1326-r1306+r911+r466-r228-r933;
{
double MapleGenVar1 = -r1421-r1039-r386-r201-2.0*r840+r1146+r863-r1104-r672+r916+r908-r1423-r841+r965+r38-r436-r1033+r1416-r1363+0.85*r1155-r1004+r1077+0.5*r852+r904+r776+r883+r766-2.0*r762+r919-r461+r773-r787+r788+r789+r1391-r1103+r1392+r1394-r1396-r1399+r1041+r28+0.5*r924-r1036-r175+r903-r1415+r1130+r1149+r33+r1167+r1034+r905-r412-r257-r515+r32-r1121+r21-r1017-r362-r976-r966+r839+2.0*r1148+r31-r1038-r952+r23+r19-r1124+r860;
	R[51] =	             MapleGenVar1-r1035+r27-r1037-r979+r935+0.4*r1128+r1151-r311+r770+r1186+r1109+r35-r44+2.0*r1153+r923-r1362-r283-r850+r970-r785-2.0*r786-r488+r778-r1078+r994+r1168+r29+r1152-r229+r18-r591-r846-r1010+r36+r1129-r992-r618-r761+r959+r26+r922-r978+2.0*r1031-r338+r24+0.2*r855+r932-r644+r881-r849+r37+0.35*r969+2.0*r1030-r149+r827+r1162-r977+r25+r1173+r34+r22+r842-r122+r1147-r699+r887-r96+0.3*r1161+r30-r967-r1361-r71+r17;
}
{
double MapleGenVar1 = r687+r683+r692+r110+r113+r669+r114+r93+r840+r674+r820+r672-r619+r690-r645+r98-r763+r681+r103-r852+r106+r99-r437+r766-r176+r789-r791-r792+r800+r1384+r1189+r111+r677+r1130+r115+r109-r387+r91+r665-r150+r104-r258-r21+r107+r805+r679+r671-r790+r892+r102-r541+r854+r680+r678+r670-r700-r516; 
	R[52] =	            MapleGenVar1+r666+r682-r960-r462+r92-r45+r1385-r489+r783+r1078-r994+r100+r676-r202+r112-r312-r284+r667-r946-r363+r1110+r686+r689-r959-r123+r806-r72+r971+r685+0.8*r855+r1417+0.8*r866+0.2*r862+r95+0.15*r865-r230+r668-r969-r592+r691+r688-r851+r101+r108+r105-r413+r675+r684-r339-r853-r565+r96+0.7*r1161+0.5*r925+r94+r911+r933;
}
	R[53] =	       -r593-r438-r231-r995+r137-r972-r1159-r674+r801+r841-r98-r364+r128+r138-r463+r119+r125+r776-r177+r139+r120-r151-r46+r1387+r799+r132+r118+r131-r813+r130+r129-r1160+r896+r127-r542+r136-r1122-r203+r140-r566-r2-r620+r141-r764-r340-r646-r517-r1128-r285+r823-r811-r414-r765+r850-r313+r134+r116-r490-r388-r1152+r117+r927-r812-r259+r123+r806+r121-2.0*r810+0.1*r866-r862+r133+0.85*r865+r126-r701-r22+r122+r135-r1161-r73;
	R[54] =	       r221+r201-r286-r594-r232+r215-r826+r206+r213-r948-r47-r723-r125-r178-r99+r210-r825+r205-r389-r314+r895-r567+r197-r621+r220+r208+r203+r207+r216+r1112-r23+r196-r790-r518-r543+r200-r365+r199-r74+r198+r212-r856-r260-r439+r767-r970-r785-r491-r702+r202+r219+r209+r214-r341-r152-r464-r855-r647-r415+r217-r675+r211+r218;
	R[55] =	       r52+r1119+r830+r42-r953-r1156+r59+r56-r859+r39+r47+r58+r50-r1118+r775+r46-r1086+r793-r1087-r1088+r799+r1092-r1405-r980+2.0*r774+r40+r63+r1169+r48+r54+r768-r1142-r860+r803+r41+r60+r1053+r770+r51+r44+r45-r954+r64+r55-r858+r49+r43+r53+r57+r802+r61+r832+r62;
	R[56] =	       r995+r89+r972+r801-r1125-r544-r956+r87-r841-r993-r1155+r65-r416-r981+r70+r1170-r179-r315+r775-r1143+r773+r788-r791+r793+2.0*r794+r1386-r1388+r800+r1094-r1400-r205+0.5*r924-r1154+r81+r836-r808-r261-r465+r1149-r233-r595+r819-r390-r48-r568+r805+r1038+r769-r982+r90+r88+r67-r957-r955-r440+0.6*r1128+r74+r82-r807+r78+r77+r891-2.0*r779+r782-r492-r934-r100-r676-r968+r80-r857+r66-r648+r68+r72-r24-r3-r366-r958+r86+r69-r126+r84+r76+0.5*r963+r833+r1083+0.2*r1028+r804-r703-r153-r342-r1126-r287-r519+r930+r1171+r83+r73+r79-r622+r85+r71;
	R[57] =	       r572-r234-r704-r1157+r1104+r576+r544+r554-r206-r316-2.0*r809+r564-r391-r180+r772+r1071+r771-r787-r1091-r1092-r1093-r1094-r1095-r1096+r1099+r1100+r1101+r1102+r1103-r1406+r552+r550-r677-r288+r864+r574+r567-r417+r556-r127+r549+r539+r581+r571+r542+r583-r821+r536+r568-r724-r154+r557+r577+r566+r555-r848+r543+r560+r541+r538-r596+r1123+r547-r845-r811-r441+r559+r575-r649+r540-r493+r912-r520-r1158-r861+r580+r548+r570+r537+r1072+r562+r558-r623+r553+r563-r343-2.0*r1145-r847-r76+r561-r49-r844-2.0*r1144-r101-r1127+r578+r551+r573+r546+r582+r565-r466+r579;
	R[58] =	       -r1131+r348-r317-r815-r597-r235+r351-r965-r128-r521-r50+r777-r181-r467+r346-r705-r813-r808+r334+r352-r1132-r289+r335+r353-r207-r839+r356+r332-r848-r418+r340-r102+r345-r678-r4+r355-r392-r77+r349-r650-r494-r155+r354-r1152-r725+r341-r624-r570+r336+r350+r333+r338+r343-r974-r442-r997+r347-r367+r337-r1133-r262-r25+r357-r546+r342+r339+r898+r838+r358-r987;
	R[59] =	       -r468+r142-r863-r368+r160+r165+r169+r145-r103+r158-r182+r161+r163-r651+r151+r164+r143-r129-r864-r996+r822-r522+r150-r625+r147+r167+r157-r571+r159-r208+r154-r1122-r949-r679-r598-r236-r345-r443-r51+r144-r78+r162-r419+r778-r495+r155-r726+r929-r318-r5+r824+0.5*r973-r290+r146-r26+r152+r974+0.1*r866+r997+r148-r263+r166+0.67*r1133+r149+r168-r706-r1162+0.55*r1028-r393+r153;
	R[60] =	       -r52-r572+r234+r231-r652+r240+r244+r224-r830-r496+r232-r523+r235-r469-r183-r1143-r795-r796-r346-r784-r130+r233-r599-r157-r104-r1121+r247+r243+r1183+r241-r985-r626+r236-r27+r249-r680-r547-r369+r239-r291-r707-r727+r229+r242-r209-r983-r394-r1164+r248-r1163+r238+r245-r444-r829-r420+r222+r226-r6+r230-r962+r804+r227+r225-r319+r802-r79+r246-r264+r228+r223;
	R[61] =	       -r265-r7-r370+r816+r286+r297+r277-r815-r395-r421-r681-r158-r184-r470-r792-r210-r28-r131-r1130+r288-2.0*r814+r897-r497+r299+r289-r708-r600+r298-r524+r282+r302-r989+r293+r931+r281+r835+r285+r280+r291-2.0*r1153+r301-r807+r283-r445-r653+r284-r80-r812-r1129+r296-r548-r988-r973+r290-r834+r300-r238-r728-r627-r347-r865+r303-r847-r105-r1173+r279-r573+r294+r278-r53+r287+r853+r295-r320-r950;
	R[62] =	       r265+r274+r816-r348+r271+r272+r253-r964-r1166-r628+r254-r1170-r106-r185-r797-r798+r250-r132-r81+r261-2.0*r1184-r498+r267-r1167+r257-r549-r1169+r258-r984-r159-r54+r256-r986-r1142-r293-r396-r1172+r803+r275+r252-r682-r729-r239+r260+r251+r270+r276-r471-r1168-r29-r601-r446+r861+r259+r269-r422-r8+r1138-r709+r263-r1165+r262-r963+r268-r833-r321-r525-r831-r371-r654-r211+r1182+r255-r1171-r832+r264+r273;
	R[63] =	       -r397-r683-r423-r240+r826+r190-r160-r447+r172+r170+0.5*r852-r472+r178+r173+r177+r180+r174+r182+r179+r176+r171+r184+r183+r181+r185+r187+r188+r189+r1189+r175-r550+r192-r730-r267-r574-r655-r107+r193-r828-r854-r212+r856-r322-r82-r602-r349-r629-r55+r194-r971-r133-r710+r195+r1111+0.33*r1133-r947-r372-r499-r827+r894-r294+r191+0.5*r925-r30-r526+r867;
	R[64] =	       r317-r398-r213+r325+r316-r56-r731-r837-r424-r161+r315-r187-r836+r329+r314-r473+r304+r331-r603+r306+r330+r326+r327-r31-r241+r309-r373+r307-r835+r311-r500-r656+r322+r305-r575+r313-r134-r448-r527+r318+r312-r630-r9-r350-r866+0.8*r862-r711+r328-r951+r324-r268+r851+r321+r310-r108-r551+r308-r684+r319-r83-r295-r838+r320-r1174-r867;
	R[65] =	       -r1040-r1061+r1046+r1055-r1066-r1064-r1368+r1086-r1373-r1374-r1032-r1063-r1367-r843-r1038-r1060-r1073-r1065-r1062-r1372+r954-r1084+r1042-r1366-r844-r1052;
	R[66] =	       -r845-r1031-r1034+r1035-r1037-r1054-r1055-r1056-r1057-r1058-r1059-r1072+r1079-r1376-r1378-r1380-r1382;
	R[67] =	       r438-r374-r1014-r1015-r604-r576-r631-r351+r447+r436+r454-r732+r455+r453+r450+r437-r188-r1398-r552-r474-r1018+r1117-r109+r434-r32-r10+r451-r1017+r976-r1013+r882-r501+r1116+r443+r440-r945+r452-r657+r441+r439-r712-r162+r448+r445+r1022+0.5*r934-2.0*r1019+r446-r242-r1012-r1016-r214-r296+r1115-r901-r269+r444-r685+r442+r433-r425+r456+r435-r528-r324-r84+r889-r57-r135-r399;
	R[68] =	       r593-r375-r529-r110+r604+r608-r297+r594-r215+r597-r325-r58+r1077+r587-r1080-r450-r475-r163+r1070-r189-r1079-2.0*r1085+r1087+r1088+r1389+r1098+r1390-r1401-r1402-r1403-r1404+r884-r352-r33-r713+r599+r595+r603-r502-r136+r600+r590-r243-r577+r598+r609-r658-r11+r596+r602-r270-r400-r1081-r1082+r601+r591+r607-r686+r584+r586-r553+r926+r588-r632-r1084+r592+r962+r610-r1083+r585+r606-r426+r589-r85;
	R[69] =	       -r687+r1023-r137-r271-r244+r496-r554-r190-r59+r893+r508-r530+r485-r476+r483+r482+r484-r164-r111-r903+r498-r401+r502-r659-r326+r497-r451-r353-r12-r298-r216-r427+r886+r507+r501+r500+r505+r506-r714-r902+r486+r487+r488+r489+r490+r491+r492+r493+r494+r495-r990+r504-r86-r376-r633+r499-r578-r34-r606-r733;
	R[70] =	       r423-r1007+r431-r272+r942+r407-r531-r87-r138+r421-r165+r416+r432+r424-r1009-r477-r1018+r1415-r1005+r408+r412+r417-r299-r327-r555-r1427+r952+r418+r427+r429-r60-r935-r402-r634-r452-r35+r960+r414+r419+0.5*r934-r734+r890-r354-r112-r1426-r607-r1006-r1008-r1010+r992+r422-r245-r900-r504-r944-r377-2.0*r1011+r420+r425+r430+r411-r660-r688+r415+r1114+r977+r410-r217+r413-r191+r409+r426+r967-r13-r579-r715;
	R[71] =	       r529+r1026-r1023-r961-r113-r608+r513+r523-r14+r531+r533+r993-r716-r478+r521-r453+r530-r139-r975+r535-r192+r509-r378+r510+r515-r556+r522+r524-r991+r534-r1025-r88+r518-r429+r955+r517+r516-r505-r1029-r355+r1024+r1027+r512-r1021-r1022+r968+r527+r520-r635-r580-r36-r689-r300-r403+r514-r735-r328-r166+r528+0.25*r1028+r525-r661+r519-r61-r246+r526+r511-r273-r218;
	R[72] =	       -r1377-r1365-r1046+r1033+r1074-r1077-r1375-r1071-r1047+r1075-r1381+r1400-r1041-r1036-r1043-r1045-r1048-2.0*r1051+r1069-r1053-r1050-r1379-r1364-r1076-r1042-r1030+r1054-r1049-r1083-r1052-r1044;
	R[73] =	       -r1039-r1053+r1060+r1063-r1067-r1068-r1369-r1370-r1371;
	R[74] =	       r619+r631+r628+r637+r617+r1181+r613+r615+r621+r625+r638-r1180+r620+r626+r1124-r1123-r1186+r634+r612+r629+r1120-2.0*r1187+r616+r630+r635+r624+r618+r611+r623+r627+r632+r636-r1185+r633-r1182+r614+r622;
	R[75] =	       -r274+r652-r114-r89-r690+r645-r533-r454+r642+r651+r641-r1181-r329+r664+r655-r167-r581+r659-r247-r557-r193-r736-r140-r15-r1183-r609+r643+r658-r356-r479+r646+r656-r506-r379+r657-r301+r1188+r640+r649+r650+r1140-r219+r653-r717+r648-r404+r1145-r430+r644-r636-r37+r663+r660+r647+r661+r654+r639+r1139-r62;
	R[76] =	       -r1194+r1238+r704-r431-r1225-r38+r1279-r637+r716-r455-r480+r705-r63+r719-r115-r1204+r1229-r1240-r1249-r1192-r1196+r713-r220-r1205-r330+r1248+r698+r708+r694-r1197+r693-r534-r1272-r302-r141-2.0*r1201-r90-r507-r1200-r1207+r700-r275+r714+r707+r1351+r1314-r1199+r712+r1232+r1190+r702+r697+r1198-r405+2.0*r1227+r717-r1193-r1288-r248-r558-r194+r696+r709+r711+r1284+r710-r737+r1344+r695-r663+r701-r691-r168-2.0*r1203+r706-r1280-r610+r1235-r16+r703-r357-r1191-r582-r1195-r380+r1239-r1350+r699-r1206-2.0*r1202+r715;
	R[77] =	       r1365-r1216-r1214-r1279+r1343-r1211+r1309+r1346-r1218+r1196-r1410-r1248-r1213-r1200+r1319-2.0*r1215-r1351-r1210-r1232-r1212+r1193-r1209+r1244-r1208+r1191-r1217-r1239+r1202;
	R[78] =	       r1197-r1198+r1207-r1282-r1283-r1284-r1285-r1286-r1287-r1288-r1289;
	R[79] =	       -r1199+r1208+r1211-r1216-r1219-r1220-r1221+r1315+r1318-r1321-r1359-r1361-r1364-r1366+r1367+r1369+r1371+r1374-r1400-r1401-r1406;
	R[80] =	       r1204+r1233+r1234+r1236+r1237+r1239+r1240-r1241-r1242-r1243-r1244-r1245-r1246-r1247-r1248-r1249-r1250+r1254+r1256+r1258+r1260+r1261;
	R[81] =	       r1222+r1224+r1225-r1226-r1227-r1228-r1229-r1230-r1231-r1232;
	R[82] =	       r1261-r1290-r1291-r1292-r1293-r1294-r1295-2.0*r1296+r1300+r1303+r1304+r1425;
	R[83] =	       -r1315-r221-r692-r406+r731+r732-r169+r1397+r723-r432-r508+r1370-r481-r1387-r1386-r1391-r1384-r1390-r1398-r1399-r1316-r719-r535+r730-r331-r664-r1360-r638-r583+r724+r736+r1311-r249+r729-r559-r276-r1307+r1414+r727-r1353+r734+r726+r1310-r64+r1369+r725+r728+r735-r303-r195+r722+r737-r456+r720+r1366+r721-r358-r1317+r733;
	R[84] =	       -r1330+r1337+r1345+r1308+r1355+r1375-r1328+r1373+r1341+r1340+r1376-r1389+r1394-r1354+r1348+r1316+r1360-r1325-r1319-2.0*r1331-r1321-r1327+r1351-r1318-r1385+r1353-r1356-r1357-r1329+r1335+r1334-r1323-r1320-r1324+r1350+r1317-r1326;
	R[85] =	       -r1358+r1361+r1363;
	R[86] =	       r1393+r1395-r1397+r1398+r1399;

}
